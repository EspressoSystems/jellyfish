searchState.loadedDescShard("jf_vrf", 0, "Verifiable random functions (VRF).\nError type\nThe input of VRF proof.\nThe output of VRF evaluation.\nVRF signature.\nVRF public key.\nPublic parameters\nVRF secret key.\nA trait for VRF proof, evaluation and verification.\nBLS signature based VRF\nComputes the VRF output given a public input and a VRF …\nCreates a pair of VRF public and private keys.\ngenerate public parameters from RNG. If the RNG is not …\nComputes the VRF output associated with a VRF proof.\nCreates the VRF proof associated with a VRF secret key.\nVerifies a VRF proof.\nSupported Cipher Suites for BLS VRF.\nVRF Error: {0}\nBLS VRF scheme. Optimized for signature size, i.e.: PK in …\nusing blst library and VRF output from SHA256 hashing\nusing blst library and VRF output from SHA512 hashing\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a pair of VRF public and private keys.\nCreates a new BLS VRF instance with the given ciphersuite.\ngenerate public parameters from RNG.\nComputes the VRF output associated with a VRF proof.\nCreates the VRF proof associated with a VRF secret key.\nVerifies a VRF proof.")