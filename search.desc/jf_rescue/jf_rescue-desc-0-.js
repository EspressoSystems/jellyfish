searchState.loadedDescShard("jf_rescue", 0, "This module implements Rescue hash function over the …\nparameter A, a.k.a., alpha\nparameter A^-1\nThe rate of the sponge used in RescueCRHF.\nInitial vector.\nInjected keys for each round.\nMDS matrix\nPermutation keys.\nRescue pseudo-random permutation (PRP) instance\nBad parameter in function call, {0}\nInstance of a unkeyed cryptographic permutation to be used …\nThe # of rounds of rescue hash.\nRescue error type\nA matrix that consists of <code>STATE_SIZE</code> number of rescue …\nThis trait defines constants that are used for rescue hash …\nData type for rescue prp inputs, keys and internal data\nThe state size of rescue hash.\nImplements a rescue hash based commitment scheme.\nA rescue CRHF implementation\nReturn vector of the field elements WARNING: may expose …\nCompute the permutation on RescueVector <code>input</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturn a pointer to the initial vectors. Does not expose …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if the matrix is empty.\nReturn a pointer to the key injection vectors. Function …\nKey scheduling for rescue based PRP for Bls12_381 scalars …\nReturn the number of columns of the matrix.\nPerform a linear transform of the vector. Function needs …\nReturn a pointer to the mds matrix. Does not expose secret …\nReturn a pointer to the mds matrix. Does not expose secret …\nHelper function to compute f(M,x,c) = Mx^a + c. Function …\nA rescue PRF implementation\nRescue pseudorandom permutation for Bls12381 scalars …\nRescue pseudorandom permutation for Bls12381 scalars …\nReturn a pointer to the round key. Does not expose secret …\nThis file contains the APIs wrappers for ark-sponge\nAccessing the i-th vector of the matrix. Function needs to …\nzero vector\nRescue-based Commitment instance for fixed-length input\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA rescue-sponge-based CRHF with fixed-input size (if not …\nCRHF\nA rescue-sponge-based CRHF with variable-input and …\nPadding\nPadding\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSponge hashing based on rescue permutation for RATE 3 and …\nSponge hashing based on rescue permutation for RATE 3. It …\nSimilar to <code>RescueCRHF::sponge_with_bit_padding</code> except we …\nA rescue-based PRF that leverages on Full State Keyed …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA rescue hash function consists of a permutation function …\nAbsorb an input into the sponge. This function will absorb …\nCreates a new sponge with applied domain separation.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nInitialize a new instance of the sponge.\nWARNING! This trait method is unimplemented and should not …\nWARNING! This trait method is unimplemented and should not …\nWARNING! This trait method is unimplemented and should not …\nWARNING! This trait method is unimplemented and should not …\nSqueeze <code>num_elements</code> field elements from the sponge.\nWARNING! This trait method is unimplemented and should not …")