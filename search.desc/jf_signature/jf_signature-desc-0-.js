searchState.loadedDescShard("jf_signature", 0, "Module for signature primitives.\nTrait for aggregatable signatures. TODO: generic over hash …\nCiphersuite Identifier\nValue is not on the right elliptic curve\nValue is not in the right subgroup\nValue is not valid (possible cause: not on curve, in wrong …\nA message is &amp;[MessageUnit]\nBad parameter in function call, {0}\nPublic Parameter\nSignature\nSignature error type\nTrait definition for a signature scheme.\nSigning key.\nVerification failed, {0}\nVerification key\nAggregate multiple signatures into a single signature The …\nVerify an aggregate signature w.r.t. a list of messages …\nBLS Signature Scheme\nThis module implements the BLS signature over the BN254 …\nTags to be used for <code>tagged-base64</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSample a pair of keys.\nVerify a multisignature w.r.t. a single message and a list …\ngenerate public parameters from RNG. If the RNG is not …\nSign a message with the signing key\nVerify a signature.\nA BLS Secret Key (Signing Key). We intentionally omit the …\nA BLS Signature.\nBLS signature scheme. Wrapping around structs from the <code>blst</code>…\nA BLS Public Key (Verification Key).\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDeserialize <code>SignKey</code> from bytes.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGenerate a BLS key pair. Make sure the <code>prng</code> passed in are …\nAlternative deterministic key_gen compatible with IRTF …\ngenerate public parameters from RNG. If the RNG is not …\nSign a message\nExplicit calls to serialize a <code>SignKey</code> into bytes.\nExplicit calls to serialize a <code>SignKey</code> into <code>TaggedBase64</code>.\nVerify a signature.\nBLS signature scheme.\nSignature secret key pair used to sign messages\nSigning key for BLS signature. We intentionally omit the …\nThe signature of BLS signature scheme\nSignature public verification key\nAggregate multiple signatures into a single signature …\nVerify an aggregate signature w.r.t. a list of messages …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDeserialize <code>SignKey</code> from bytes.\nDeserialize <code>KeyPair</code> from bytes.\nSignature Key generation function\nKey-pair generation algorithm\nKey pair generation using a particular sign key secret <code>sk</code>\nNon constant time hash to curve algorithm (a.k.a “…\nGet the internal of verifying key, namely a curve Point\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSample a pair of keys.\nVerify a multisignature w.r.t. a single message and a list …\nGenerate public parameters from RNG.\nThe signature is a G1 group element.\nSign a message with the signing key\nSignature function\nGet the internal of the signing key, namely a …\nGet the signing key reference\nConvert the verification key into the affine form.\nExplicit calls to serialize a <code>SignKey</code> into bytes.\nExplicit calls to serialize a <code>KeyPair</code> into bytes.\nExplicit calls to serialize a <code>SignKey</code> into <code>TaggedBase64</code>.\nExplicit calls to serialize a <code>KeyPair</code> into <code>TaggedBase64</code>.\nGet the verification key\nGet reference to verification key\nVerify a signature.\nSignature verification function\nSize in bytes of a compressed verification key in our BLS …\nSize in bytes of a compressed signature in our BLS …\nSize in bytes of a verification key in our BLS signature …\nSize in bytes of a signature in our BLS signature scheme.\nSize in bytes of a secret key in our BLS signature scheme.\nciphersuite identifier for BLS signature over BN254 Note …\nciphersuite identifier for BLS signature over BLS12_381, …\nciphersuite identifier for schnorr signature\nTags\nTag for BLS key pair\nTag for BLS signature\nTag for BLS signing key\nTag for BLS verification key\nTag for Schnorr key pair\nTag for Schnorr signature\nTag for Schnorr signing key\nTag for Schnorr verification key")