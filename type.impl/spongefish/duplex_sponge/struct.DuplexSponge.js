(function() {
    var type_impls = Object.fromEntries([["jf_poseidon2",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-DuplexSponge%3CC%3E\" class=\"impl\"><a href=\"#impl-Clone-for-DuplexSponge%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for DuplexSponge&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + Permutation,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; DuplexSponge&lt;C&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","jf_poseidon2::permutation::Poseidon2Hash","jf_poseidon2::sponge::bls12_381::Poseidon2SpongeBlsN2R1","jf_poseidon2::sponge::bls12_381::Poseidon2SpongeBlsN3R1","jf_poseidon2::sponge::bls12_381::Poseidon2SpongeBlsN3R2","jf_poseidon2::sponge::bn254::Poseidon2SpongeBnN3R1","jf_poseidon2::sponge::bn254::Poseidon2SpongeBnN3R2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-DuplexSponge%3CC%3E\" class=\"impl\"><a href=\"#impl-Default-for-DuplexSponge%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for DuplexSponge&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + Permutation,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; DuplexSponge&lt;C&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.89.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","jf_poseidon2::permutation::Poseidon2Hash","jf_poseidon2::sponge::bls12_381::Poseidon2SpongeBlsN2R1","jf_poseidon2::sponge::bls12_381::Poseidon2SpongeBlsN3R1","jf_poseidon2::sponge::bls12_381::Poseidon2SpongeBlsN3R2","jf_poseidon2::sponge::bn254::Poseidon2SpongeBnN3R1","jf_poseidon2::sponge::bn254::Poseidon2SpongeBnN3R2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-DuplexSponge%3CC%3E\" class=\"impl\"><a href=\"#impl-Drop-for-DuplexSponge%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for DuplexSponge&lt;C&gt;<div class=\"where\">where\n    C: Permutation,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/drop/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details>","Drop","jf_poseidon2::permutation::Poseidon2Hash","jf_poseidon2::sponge::bls12_381::Poseidon2SpongeBlsN2R1","jf_poseidon2::sponge::bls12_381::Poseidon2SpongeBlsN3R1","jf_poseidon2::sponge::bls12_381::Poseidon2SpongeBlsN3R2","jf_poseidon2::sponge::bn254::Poseidon2SpongeBnN3R1","jf_poseidon2::sponge::bn254::Poseidon2SpongeBnN3R2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DuplexSpongeInterface%3CU%3E-for-DuplexSponge%3CC%3E\" class=\"impl\"><a href=\"#impl-DuplexSpongeInterface%3CU%3E-for-DuplexSponge%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U, C&gt; DuplexSpongeInterface&lt;U&gt; for DuplexSponge&lt;C&gt;<div class=\"where\">where\n    U: Unit,\n    C: Permutation&lt;U = U&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method trait-impl\"><a href=\"#method.new\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new</a>(iv: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.array.html\">32</a>]) -&gt; DuplexSponge&lt;C&gt;</h4></section></summary><div class='docblock'>Initializes a new sponge, setting up the state.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.absorb_unchecked\" class=\"method trait-impl\"><a href=\"#method.absorb_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">absorb_unchecked</a>(&amp;mut self, input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.slice.html\">[U]</a>) -&gt; &amp;mut DuplexSponge&lt;C&gt;</h4></section></summary><div class='docblock'>Absorbs new elements in the sponge.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.squeeze_unchecked\" class=\"method trait-impl\"><a href=\"#method.squeeze_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">squeeze_unchecked</a>(&amp;mut self, output: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.slice.html\">[U]</a>) -&gt; &amp;mut DuplexSponge&lt;C&gt;</h4></section></summary><div class='docblock'>Squeezes out new elements.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ratchet_unchecked\" class=\"method trait-impl\"><a href=\"#method.ratchet_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ratchet_unchecked</a>(&amp;mut self) -&gt; &amp;mut DuplexSponge&lt;C&gt;</h4></section></summary><div class='docblock'>Ratcheting. <a>Read more</a></div></details></div></details>","DuplexSpongeInterface<U>","jf_poseidon2::permutation::Poseidon2Hash","jf_poseidon2::sponge::bls12_381::Poseidon2SpongeBlsN2R1","jf_poseidon2::sponge::bls12_381::Poseidon2SpongeBlsN3R1","jf_poseidon2::sponge::bls12_381::Poseidon2SpongeBlsN3R2","jf_poseidon2::sponge::bn254::Poseidon2SpongeBnN3R1","jf_poseidon2::sponge::bn254::Poseidon2SpongeBnN3R2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-DuplexSponge%3CC%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-DuplexSponge%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for DuplexSponge&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + Permutation,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;DuplexSponge&lt;C&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#263\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","jf_poseidon2::permutation::Poseidon2Hash","jf_poseidon2::sponge::bls12_381::Poseidon2SpongeBlsN2R1","jf_poseidon2::sponge::bls12_381::Poseidon2SpongeBlsN3R1","jf_poseidon2::sponge::bls12_381::Poseidon2SpongeBlsN3R2","jf_poseidon2::sponge::bn254::Poseidon2SpongeBnN3R1","jf_poseidon2::sponge::bn254::Poseidon2SpongeBnN3R2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroize-for-DuplexSponge%3CC%3E\" class=\"impl\"><a href=\"#impl-Zeroize-for-DuplexSponge%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; Zeroize for DuplexSponge&lt;C&gt;<div class=\"where\">where\n    C: Permutation + Zeroize,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroize\" class=\"method trait-impl\"><a href=\"#method.zeroize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroize</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Zero out this object from memory using Rust intrinsics which ensure the\nzeroization operation is not “optimized away” by the compiler.</div></details></div></details>","Zeroize","jf_poseidon2::permutation::Poseidon2Hash","jf_poseidon2::sponge::bls12_381::Poseidon2SpongeBlsN2R1","jf_poseidon2::sponge::bls12_381::Poseidon2SpongeBlsN3R1","jf_poseidon2::sponge::bls12_381::Poseidon2SpongeBlsN3R2","jf_poseidon2::sponge::bn254::Poseidon2SpongeBnN3R1","jf_poseidon2::sponge::bn254::Poseidon2SpongeBnN3R2"],["<section id=\"impl-Eq-for-DuplexSponge%3CC%3E\" class=\"impl\"><a href=\"#impl-Eq-for-DuplexSponge%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for DuplexSponge&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + Permutation,</div></h3></section>","Eq","jf_poseidon2::permutation::Poseidon2Hash","jf_poseidon2::sponge::bls12_381::Poseidon2SpongeBlsN2R1","jf_poseidon2::sponge::bls12_381::Poseidon2SpongeBlsN3R1","jf_poseidon2::sponge::bls12_381::Poseidon2SpongeBlsN3R2","jf_poseidon2::sponge::bn254::Poseidon2SpongeBnN3R1","jf_poseidon2::sponge::bn254::Poseidon2SpongeBnN3R2"],["<section id=\"impl-StructuralPartialEq-for-DuplexSponge%3CC%3E\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-DuplexSponge%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for DuplexSponge&lt;C&gt;<div class=\"where\">where\n    C: Permutation,</div></h3></section>","StructuralPartialEq","jf_poseidon2::permutation::Poseidon2Hash","jf_poseidon2::sponge::bls12_381::Poseidon2SpongeBlsN2R1","jf_poseidon2::sponge::bls12_381::Poseidon2SpongeBlsN3R1","jf_poseidon2::sponge::bls12_381::Poseidon2SpongeBlsN3R2","jf_poseidon2::sponge::bn254::Poseidon2SpongeBnN3R1","jf_poseidon2::sponge::bn254::Poseidon2SpongeBnN3R2"]]],["jf_rescue",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-DuplexSponge%3CC%3E\" class=\"impl\"><a href=\"#impl-Clone-for-DuplexSponge%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for DuplexSponge&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + Permutation,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; DuplexSponge&lt;C&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","jf_rescue::permutation::RescueSponge"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-DuplexSponge%3CC%3E\" class=\"impl\"><a href=\"#impl-Default-for-DuplexSponge%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for DuplexSponge&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + Permutation,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; DuplexSponge&lt;C&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.89.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","jf_rescue::permutation::RescueSponge"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-DuplexSponge%3CC%3E\" class=\"impl\"><a href=\"#impl-Drop-for-DuplexSponge%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for DuplexSponge&lt;C&gt;<div class=\"where\">where\n    C: Permutation,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/drop/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details>","Drop","jf_rescue::permutation::RescueSponge"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DuplexSpongeInterface%3CU%3E-for-DuplexSponge%3CC%3E\" class=\"impl\"><a href=\"#impl-DuplexSpongeInterface%3CU%3E-for-DuplexSponge%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U, C&gt; DuplexSpongeInterface&lt;U&gt; for DuplexSponge&lt;C&gt;<div class=\"where\">where\n    U: Unit,\n    C: Permutation&lt;U = U&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method trait-impl\"><a href=\"#method.new\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new</a>(iv: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.array.html\">32</a>]) -&gt; DuplexSponge&lt;C&gt;</h4></section></summary><div class='docblock'>Initializes a new sponge, setting up the state.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.absorb_unchecked\" class=\"method trait-impl\"><a href=\"#method.absorb_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">absorb_unchecked</a>(&amp;mut self, input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.slice.html\">[U]</a>) -&gt; &amp;mut DuplexSponge&lt;C&gt;</h4></section></summary><div class='docblock'>Absorbs new elements in the sponge.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.squeeze_unchecked\" class=\"method trait-impl\"><a href=\"#method.squeeze_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">squeeze_unchecked</a>(&amp;mut self, output: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.slice.html\">[U]</a>) -&gt; &amp;mut DuplexSponge&lt;C&gt;</h4></section></summary><div class='docblock'>Squeezes out new elements.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ratchet_unchecked\" class=\"method trait-impl\"><a href=\"#method.ratchet_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ratchet_unchecked</a>(&amp;mut self) -&gt; &amp;mut DuplexSponge&lt;C&gt;</h4></section></summary><div class='docblock'>Ratcheting. <a>Read more</a></div></details></div></details>","DuplexSpongeInterface<U>","jf_rescue::permutation::RescueSponge"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-DuplexSponge%3CC%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-DuplexSponge%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for DuplexSponge&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + Permutation,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;DuplexSponge&lt;C&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#263\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","jf_rescue::permutation::RescueSponge"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroize-for-DuplexSponge%3CC%3E\" class=\"impl\"><a href=\"#impl-Zeroize-for-DuplexSponge%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; Zeroize for DuplexSponge&lt;C&gt;<div class=\"where\">where\n    C: Permutation + Zeroize,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroize\" class=\"method trait-impl\"><a href=\"#method.zeroize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroize</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Zero out this object from memory using Rust intrinsics which ensure the\nzeroization operation is not “optimized away” by the compiler.</div></details></div></details>","Zeroize","jf_rescue::permutation::RescueSponge"],["<section id=\"impl-Eq-for-DuplexSponge%3CC%3E\" class=\"impl\"><a href=\"#impl-Eq-for-DuplexSponge%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for DuplexSponge&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + Permutation,</div></h3></section>","Eq","jf_rescue::permutation::RescueSponge"],["<section id=\"impl-StructuralPartialEq-for-DuplexSponge%3CC%3E\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-DuplexSponge%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for DuplexSponge&lt;C&gt;<div class=\"where\">where\n    C: Permutation,</div></h3></section>","StructuralPartialEq","jf_rescue::permutation::RescueSponge"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[13450,11176]}