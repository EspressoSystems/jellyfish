var searchIndex = new Map(JSON.parse('[["jf_aead",{"t":"FFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["AEADError","Ciphertext","EncKey","KeyPair","batch_check","","borrow","","","","borrow_mut","","","","check","","","clone","","","","clone_into","","","","clone_to_uninit","","","","cmp","decrypt","default","","deserialize","","","deserialize_with_mode","","","enc_key","enc_key_ref","encrypt","eq","","","","fmt","","","","","from","","","","","generate","hash","","","into","","","","partial_cmp","serialize","","","serialize_with_mode","","","serialized_size","","","to_owned","","","","to_string","try_from","","","","try_into","","","","type_id","","","","vzip","","",""],"q":[[0,"jf_aead"],[95,"ark_serialize::error"],[96,"core::result"],[97,"core::iter::traits::iterator"],[98,"core::marker"],[99,"core::cmp"],[100,"alloc::vec"],[101,"serde::de"],[102,"ark_serialize"],[103,"std::io"],[104,"rand_core"],[105,"core::fmt"],[106,"core::hash"],[107,"core::option"],[108,"serde::ser"],[109,"alloc::string"],[110,"core::any"]],"i":"````jAbAfAh321032132103210321032031313213233110321003211032310210320132132132103201032103210321032","f":"````{c{{f{bd}}}{{n{}{{h{{l{j}}}}}}A`}}{c{{f{bd}}}{{n{}{{h{{l{Ab}}}}}}A`}}{l{{l{c}}}{}}000{{{l{Ad}}}{{l{Adc}}}{}}000{{{l{Af}}}{{f{bd}}}}{{{l{j}}}{{f{bd}}}}{{{l{Ab}}}{{f{bd}}}}{{{l{Af}}}Af}{{{l{Ah}}}Ah}{{{l{j}}}j}{{{l{Ab}}}Ab}{{l{l{Adc}}}b{}}000{lb}000{{{l{Ah}}{l{Ah}}}Aj}{{{l{j}}{l{Ab}}{l{{An{Al}}}}}{{f{{B`{Al}}Ah}}}}{{}Af}{{}j}{c{{f{Af}}}Bb}{c{{f{j}}}Bb}{c{{f{Ab}}}Bb}{{cBdBf}{{f{Afd}}}Bh}{{cBdBf}{{f{jd}}}Bh}{{cBdBf}{{f{Abd}}}Bh}{{{l{j}}}Af}{{{l{j}}}{{l{Af}}}}{{{l{Af}}c{l{{An{Al}}}}{l{{An{Al}}}}}{{f{AbAh}}}{BjBl}}{{{l{Af}}{l{Af}}}Bn}{{{l{Ah}}{l{Ah}}}Bn}{{{l{j}}{l{j}}}Bn}{{{l{Ab}}{l{Ab}}}Bn}{{{l{Af}}{l{AdC`}}}Cb}{{{l{Ah}}{l{AdC`}}}Cb}0{{{l{j}}{l{AdC`}}}Cb}{{{l{Ab}}{l{AdC`}}}Cb}{cc{}}{{{Cd{Al}}}Af}111{{{l{Adc}}}j{BjBl}}{{{l{Af}}{l{Adc}}}bCf}{{{l{Ah}}{l{Adc}}}bCf}{{{l{Ab}}{l{Adc}}}bCf}{{}c{}}000{{{l{Ah}}{l{Ah}}}{{Ch{Aj}}}}{{{l{Af}}c}fCj}{{{l{j}}c}fCj}{{{l{Ab}}c}fCj}{{{l{Af}}cBd}{{f{bd}}}Cl}{{{l{j}}cBd}{{f{bd}}}Cl}{{{l{Ab}}cBd}{{f{bd}}}Cl}{{{l{Af}}Bd}Cn}{{{l{j}}Bd}Cn}{{{l{Ab}}Bd}Cn}{lc{}}000{lD`}{c{{f{e}}}{}{}}000{{}{{f{c}}}{}}000{lDb}000????","D":"Bd","p":[[1,"unit"],[6,"SerializationError",95],[6,"Result",96],[17,"Item"],[5,"KeyPair",0],[1,"reference"],[10,"Iterator",97],[10,"Send",98],[5,"Ciphertext",0],[0,"mut"],[5,"EncKey",0],[5,"AEADError",0],[6,"Ordering",99],[1,"u8"],[1,"slice"],[5,"Vec",100],[10,"Deserializer",101],[6,"Compress",102],[6,"Validate",102],[10,"Read",103],[10,"RngCore",104],[10,"CryptoRng",104],[1,"bool"],[5,"Formatter",105],[8,"Result",105],[1,"array"],[10,"Hasher",106],[6,"Option",107],[10,"Serializer",108],[10,"Write",103],[1,"usize"],[5,"String",109],[5,"TypeId",110]],"r":[],"b":[[47,"impl-Debug-for-AEADError"],[48,"impl-Display-for-AEADError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAE0ABgAFABkAIAAHACsACAA1AAAAOgACAEEAHgA="}],["jf_commitment",{"t":"KRRRRMM","n":["CommitmentScheme","Error","Input","Output","Randomness","commit","verify"],"q":[[0,"jf_commitment"],[7,"core::option"],[8,"core::result"],[9,"core::borrow"]],"i":"`l00000","f":"`````{{e{d{{b{g}}}}}{{f{ik}}}{}{{h{c}}}{}{}{}}{{e{d{{b{g}}}}{b{i}}}{{f{{f{jj}}k}}}{}{{h{c}}}{}{}{}}","D":"n","p":[[1,"reference"],[6,"Option",7],[6,"Result",8],[10,"Borrow",9],[1,"unit"],[10,"CommitmentScheme",0]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAEA"}],["jf_crhf",{"t":"KRRRM","n":["CRHF","Error","Input","Output","evaluate"],"q":[[0,"jf_crhf"],[5,"core::result"],[6,"core::borrow"]],"i":"`f000","f":"````{e{{b{gi}}}{}{{d{c}}}{}{}}","D":"l","p":[[6,"Result",5],[10,"Borrow",6],[10,"CRHF",0]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],["jf_elgamal",{"t":"FFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Ciphertext","EncKey","KeyPair","ParameterError","__clone_box","","","as_any","","","","as_any_mut","","","","batch_check","","","borrow","","","","borrow_mut","","","","check","","","clone","","","clone_into","","","clone_to_uninit","","","decrypt","default","deref","","","","deref_mut","","","","deserialize_with_mode","","","deterministic_encrypt","drop","","","","enc_key","enc_key_ref","encrypt","eq","","","equivalent","","","","","","fmt","","","","","from","","","","from_scalars","generate","hash","","init","","","","into","","","","into_any","","","","into_any_arc","","","","into_any_rc","","","","rand","serialize_with_mode","","","serialized_size","","","to_owned","","","to_scalars","to_string","try_from","","","","try_into","","","","type_id","","","","vzip","","","","zeroize"],"q":[[0,"jf_elgamal"],[130,"dyn_clone::sealed"],[131,"core::any"],[132,"ark_serialize::error"],[133,"core::result"],[134,"ark_ec::models::twisted_edwards"],[135,"core::iter::traits::iterator"],[136,"core::marker"],[137,"alloc::vec"],[138,"jf_rescue"],[139,"ark_serialize"],[140,"std::io"],[141,"rand_core"],[142,"core::fmt"],[143,"core::hash"],[144,"alloc::boxed"],[145,"alloc::sync"],[146,"alloc::rc"],[147,"rand::rng"],[148,"alloc::string"]],"i":"````AdAjAlCd32103213210321032132132132132123032103213213032122332133311100321032112310321032103210321032133213213211003210321032103213","f":"````{{bd}f}00{b{{b{h}}}}000{{{b{j}}}{{b{jh}}}}000{e{{n{fl}}}A`{{Af{}{{Ab{{b{{Ad{c}}}}}}}}Ah}}{e{{n{fl}}}A`{{Af{}{{Ab{{b{{Aj{c}}}}}}}}Ah}}{e{{n{fl}}}A`{{Af{}{{Ab{{b{{Al{c}}}}}}}}Ah}}{b{{b{c}}}{}}000{{{b{j}}}{{b{jc}}}{}}000{{{b{{Ad{c}}}}}{{n{fl}}}A`}{{{b{{Aj{c}}}}}{{n{fl}}}A`}{{{b{{Al{c}}}}}{{n{fl}}}A`}{{{b{{Ad{c}}}}}{{Ad{c}}}A`}{{{b{{Aj{c}}}}}{{Aj{c}}}A`}{{{b{{Al{c}}}}}{{Al{c}}}A`}{{b{b{jc}}}f{}}00{bf}00{{{b{{Aj{e}}}}{b{{Al{e}}}}}{{An{c}}}B`{{A`{}{{Bb{c}}}}}}{{}{{Ad{c}}}A`}{Bd{{b{c}}}{}}000{Bd{{b{jc}}}{}}000{{cBfBh}{{n{{Ad{e}}l}}}BjA`}{{cBfBh}{{n{{Aj{e}}l}}}BjA`}{{cBfBh}{{n{{Al{e}}l}}}BjA`}{{{b{{Ad{e}}}}{b{{Bl{c}}}}}{{Al{e}}}B`{{A`{}{{Bb{c}}}}}}{Bdf}000{{{b{{Aj{c}}}}}{{Ad{c}}}A`}{{{b{{Aj{c}}}}}{{b{{Ad{c}}}}}A`}{{{b{{Ad{e}}}}{b{jg}}{b{Bl}}}{{Al{e}}}B`{{A`{}{{Bb{c}}}}}{BnC`}}{{{b{{Ad{c}}}}{b{{Ad{c}}}}}CbA`}{{{b{{Aj{c}}}}{b{{Aj{c}}}}}CbA`}{{{b{{Al{c}}}}{b{{Al{c}}}}}CbA`}{{b{b{c}}}Cb{}}00000{{{b{Cd}}{b{jCf}}}Ch}0{{{b{{Ad{c}}}}{b{jCf}}}ChA`}{{{b{{Aj{c}}}}{b{jCf}}}ChA`}{{{b{{Al{c}}}}{b{jCf}}}ChA`}{cc{}}000{{{b{Bl}}}{{n{{Al{c}}Cd}}}A`}{{{b{jc}}}{{Aj{e}}}{BnC`}A`}{{{b{{Ad{c}}}}{b{je}}}fA`Cj}{{{b{{Al{c}}}}{b{je}}}fA`Cj}{{}Bd}000{{}c{}}000{{{Cl{c}}}{{Cl{h}}}{}}000{{{Cn{c}}}{{Cn{h}}}{}}000{{{D`{c}}}{{D`{h}}}{}}000{{{b{jc}}}{{Ad{e}}}{DbC`Dd}A`}{{{b{{Ad{c}}}}eBf}{{n{fl}}}A`Df}{{{b{{Aj{c}}}}eBf}{{n{fl}}}A`Df}{{{b{{Al{c}}}}eBf}{{n{fl}}}A`Df}{{{b{{Ad{c}}}}Bf}BdA`}{{{b{{Aj{c}}}}Bf}BdA`}{{{b{{Al{c}}}}Bf}BdA`}{bc{}}00{{{b{{Al{c}}}}}AnA`}{bDh}{c{{n{e}}}{}{}}000{{}{{n{c}}}{}}000{bDj}000{{}c{}}000{{{b{j{Ad{c}}}}}fA`}","D":"Bj","p":[[1,"reference"],[5,"Private",130],[1,"unit"],[10,"Any",131],[0,"mut"],[6,"SerializationError",132],[6,"Result",133],[10,"TECurveConfig",134],[17,"Item"],[5,"EncKey",0],[10,"Iterator",135],[10,"Send",136],[5,"KeyPair",0],[5,"Ciphertext",0],[5,"Vec",137],[10,"RescueParameter",138],[17,"BaseField"],[1,"usize"],[6,"Compress",139],[6,"Validate",139],[10,"Read",140],[1,"slice"],[10,"CryptoRng",141],[10,"RngCore",141],[1,"bool"],[5,"ParameterError",0],[5,"Formatter",142],[8,"Result",142],[10,"Hasher",143],[5,"Box",144],[5,"Arc",145],[5,"Rc",146],[10,"Rng",147],[10,"Sized",136],[10,"Write",140],[5,"String",148],[5,"TypeId",131]],"r":[],"b":[[68,"impl-Debug-for-ParameterError"],[69,"impl-Display-for-ParameterError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAG0ABwAFACEAKAALADUAAwA8AA0AUAAFAFoAFQBxABEA"}],["jf_merkle_tree",{"t":"TKRRRKKRKKKRGRKEKKRRPPPKKKNCNNNNMNNNMNNMMMNNNNNCCNNNNNMNMNCMMQQQQNNNNNMCMCCMMMNNMCMMNMNMNNNMMCNMMNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPGPPNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNNNNNNNRRIKFIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRFKRRRKRKKRNNNNNNNNNNNNNNNNNNNNNNMMMMNNNNNNNNNNNMMNNNNNNNNMNMNNEPEEPEEPEPIEEGIFEEEFIIIIFFEEENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQQNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["ARITY","AppendableMerkleTreeScheme","BatchMembershipProof","BatchNonMembershipProof","Commitment","DigestAlgorithm","Element","","ForgetableMerkleTreeScheme","ForgetableUniversalMerkleTreeScheme","Index","","LookupResult","MembershipProof","MerkleCommitment","MerkleTreeError","MerkleTreeScheme","NodeValue","","NonMembershipProof","NotFound","NotInMemory","Ok","PersistentUniversalMerkleTreeScheme","ToTraversalPath","UniversalMerkleTreeScheme","__clone_box","append_only","as_any","as_any_mut","borrow","borrow_mut","capacity","clone","clone_into","clone_to_uninit","commitment","deref","deref_mut","digest","","digest_leaf","drop","eq","equivalent","","","errors","examples","expect_not_found","expect_not_in_memory","expect_ok","extend","fmt","forget","from","from_commitment","hash","hasher","height","","impl_forgetable_merkle_tree_scheme","impl_merkle_tree_scheme","impl_to_traversal_path_biguint","impl_to_traversal_path_primitives","init","into","into_any","into_any_arc","into_any_rc","iter","light_weight","lookup","macros","namespaced_merkle_tree","non_membership_remember","non_membership_verify","num_leaves","persistent_remove","persistent_update","persistent_update_with","prelude","push","remember","remove","size","to_owned","to_traversal_path","try_from","try_into","type_id","universal_forget","universal_lookup","universal_merkle_tree","update","update_with","verify","vzip","MerkleTree","__clone_box","as_any","as_any_mut","borrow","borrow_mut","capacity","clone","clone_into","clone_to_uninit","commitment","deref","deref_mut","deserialize","drop","eq","equivalent","","","extend","fmt","forget","from","from_commitment","from_elems","hash","height","init","into","into_any","into_any_arc","into_any_rc","into_iter","","iter","lookup","new","num_leaves","push","remember","serialize","to_owned","try_from","try_into","type_id","verify","vzip","DigestError","ExceedCapacity","ExistingLeaf","ForgottenLeaf","InconsistentStructureError","MerkleTreeError","NotFound","ParametersError","as_any","as_any_mut","as_error_source","borrow","borrow_mut","deref","deref_mut","drop","eq","equivalent","","","fmt","","from","","init","into","into_any","into_any_arc","into_any_rc","to_string","try_from","try_into","type_id","vzip","Interval","IntervalMerkleTree","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","","from","hash","init","into","into_any","into_any_arc","into_any_rc","to_owned","try_from","try_into","type_id","vzip","Bar","Foo","GenericHasherMerkleTree","HasherDigest","HasherDigestAlgorithm","HasherMerkleTree","HasherNode","__clone_box","as_any","","as_any_mut","","as_ref","borrow","","borrow_mut","","check","clone","clone_into","clone_to_uninit","cmp","default","deref","","deref_mut","","deserialize","deserialize_with_mode","digest","digest_leaf","drop","","eq","equivalent","","","fmt","","from","","","from_str","hash","init","","into","","into_any","","into_any_arc","","into_any_rc","","partial_cmp","serialize","serialize_with_mode","serialized_size","tag","to_owned","to_string","try_from","","","","try_into","","type_id","","vzip","","LightWeightMerkleTree","__clone_box","as_any","as_any_mut","borrow","borrow_mut","capacity","clone","clone_into","clone_to_uninit","commitment","deref","deref_mut","deserialize","drop","eq","equivalent","","","extend","fmt","forget","from","from_commitment","from_elems","hash","height","init","into","into_any","into_any_arc","into_any_rc","into_iter","","iter","lookup","new","num_leaves","push","remember","serialize","to_owned","try_from","try_into","type_id","verify","vzip","BindNamespace","Leaf","NMT","Namespace","","","NamespaceId","NamespaceProof","","Namespaced","NamespacedMerkleTreeScheme","Node","__clone_box","as_any","as_any_mut","borrow","borrow_mut","capacity","clone","clone_into","clone_to_uninit","commitment","deref","deref_mut","deserialize","drop","eq","equivalent","","","extend","fmt","from","from_elems","generate_namespaced_commitment","get_namespace","get_namespace_leaves","get_namespace_proof","","hash","height","init","into","into_any","into_any_arc","into_any_rc","iter","leaves","lookup","max","min","new","num_leaves","push","serialize","to_owned","try_from","try_into","type_id","verify","","verify_namespace_proof","","vzip","AppendableMerkleTreeScheme","Branch","DigestAlgorithm","Element","Empty","ForgetableMerkleTreeScheme","ForgetableUniversalMerkleTreeScheme","ForgettenSubtree","Index","Leaf","LightWeightSHA3MerkleTree","LookupResult","MerkleCommitment","MerkleNode","MerklePath","MerkleProof","MerkleTree","MerkleTreeScheme","NodeValue","RescueHash","RescueLightWeightMerkleTree","RescueMerkleTree","RescueSparseMerkleTree","SHA3MerkleTree","Sha3Digest","Sha3Node","ToTraversalPath","UniversalMerkleTree","UniversalMerkleTreeScheme","__clone_box","","","","","as_any","","","","","as_any_mut","","","","","as_ref","borrow","","","","","borrow_mut","","","","","check","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","cmp","default","deref","","","","","deref_mut","","","","","deserialize","","deserialize_with_mode","digest","","","digest_leaf","","","drop","","","","","elem","eq","","","","","equivalent","","","","","","","","","","","","","","","fmt","","","","","from","","","","","generate_namespaced_commitment","hash","","","","impl_to_traversal_path_biguint","impl_to_traversal_path_primitives","index","init","","","","","into","","","","","into_any","","","","","into_any_arc","","","","","into_any_rc","","","","","new","partial_cmp","pos","proof","serialize","","serialize_with_mode","serialized_size","to_owned","","","","","tree_height","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","children","elem","pos","value","","","UniversalMerkleTree","__clone_box","as_any","as_any_mut","borrow","borrow_mut","capacity","clone","clone_into","clone_to_uninit","commitment","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","forget","from","from_commitment","from_kv_set","hash","height","init","into","into_any","into_any_arc","into_any_rc","into_iter","","iter","lookup","new","non_membership_remember","non_membership_verify","num_leaves","persistent_update_with","remember","serialize","to_owned","try_from","try_into","type_id","universal_forget","universal_lookup","update_with","verify","vzip"],"q":[[0,"jf_merkle_tree"],[98,"jf_merkle_tree::append_only"],[145,"jf_merkle_tree::errors"],[179,"jf_merkle_tree::examples"],[208,"jf_merkle_tree::hasher"],[279,"jf_merkle_tree::light_weight"],[326,"jf_merkle_tree::namespaced_merkle_tree"],[390,"jf_merkle_tree::prelude"],[585,"jf_merkle_tree::prelude::MerkleNode"],[591,"jf_merkle_tree::universal_merkle_tree"],[642,"dyn_clone::sealed"],[643,"core::any"],[644,"num_bigint::biguint"],[645,"core::clone"],[646,"core::cmp"],[647,"core::hash"],[648,"core::result"],[649,"core::borrow"],[650,"core::iter::traits::collect"],[651,"core::fmt"],[652,"alloc::boxed"],[653,"alloc::sync"],[654,"alloc::rc"],[655,"core::option"],[656,"core::ops::function"],[657,"alloc::vec"],[658,"serde::de"],[659,"ark_serialize"],[660,"serde::ser"],[661,"core::error"],[662,"jf_rescue"],[663,"alloc::string"],[664,"ark_ff::fields"],[665,"crypto_common"],[666,"digest::digest"],[667,"ark_serialize::error"],[668,"std::io"],[669,"tagged_base64"],[670,"core::iter::traits::exact_size"],[671,"jf_merkle_tree::internal"],[672,"core::convert"]],"i":"Ah`0Eh1``1```1`1````10Bj00```0`00002000200FlBh122222``222Cj3Dh404`26````444446`6``Eb67El00`32746Fd77728`8897`Fj000000000000000000000000000000000000000000000C`0000`0000000000000000000000000000``Gl00000000000000000000000000I`0`````H`Lf10110101111111010111000111111101111010101010111111110111010101`Ih000000000000000000000000000000000000000000000`Jh``0J`Jn`0``2Ij000000000000000000000Jb34211111111111Il02222222252322`Kf``0``0`0```````````````````0KhKjKbKn432104321014321043210143210432104321011432104321043122022043210343210444333222111000432104321004310``343210432104321043210432103133431143210343210432104321043210LhLj010Ll`Ld0000000000000000000000000000000000000000000000000","f":"``````````````````````````{{bd}f}`{b{{b{h}}}}{{{b{j}}}{{b{jh}}}}{b{{b{c}}}{}}{{{b{j}}}{{b{jc}}}{}}{{{b{{Ah{}{{l{c}}{n{e}}{A`{g}}{Ab{i}}{Ad{k}}{Af{m}}}}}}}AjAlAnB`{BbBdBf}Bb{{Bh{g}}}}{{{b{{Bj{ceg}}}}}{{Bj{ceg}}}BbBbBb}{{b{b{jc}}}f{}}{bf}{{{b{{Ah{}{{l{c}}{n{e}}{A`{g}}{Ab{i}}{Ad{k}}{Af{m}}}}}}}mAlAnB`{BbBdBf}Bb{{Bh{g}}}}{Bl{{b{c}}}{}}{Bl{{b{jc}}}{}}{{{b{{Bn{c}}}}}{{Cb{cC`}}}B`}{{{b{Bh}}}cB`}{{{b{c}}{b{e}}}{{Cb{gC`}}}AnAlB`}{Blf}{{{b{{Bj{ceg}}}}{b{{Bj{ceg}}}}}CdCfCfCf}{{b{b{c}}}Cd{}}00``{{{Bj{ceg}}}{{Cb{gC`}}}{}{}{}}{{{Bj{ceg}}}{{Cb{fC`}}}{}{}{}}{{{Bj{ceg}}}{{Cb{{Ch{ce}}C`}}}{}{}{}}{{{b{jCj}}g}{{Cb{fC`}}}{}{{Cl{c}}}{{D`{}{{Cn{e}}}}}}{{{b{{Bj{ceg}}}}{b{jDb}}}DdDfDfDf}{{{b{jDh}}e}{{Bj{gif}}}{}{{Cl{c}}}{}{}}{cc{}}{eDh{}{{Cl{c}}}}{{{b{{Bj{ceg}}}}{b{ji}}}fBfBfBfDj}`{{{b{Bh}}}Bl}{{{b{{Ah{}{{l{c}}{n{e}}{A`{g}}{Ab{i}}{Ad{k}}{Af{m}}}}}}}BlAlAnB`{BbBdBf}Bb{{Bh{g}}}}````{{}Bl}{{}c{}}{{{Dl{c}}}{{Dl{h}}}{}}{{{Dn{c}}}{{Dn{h}}}{}}{{{E`{c}}}{{E`{h}}}{}}{{{b{{Ah{}{{l{c}}{n{e}}{A`{g}}{Ab{i}}{Ad{k}}{Af{m}}}}}}}{{`{ceg}}}AlAnB`{BbBdBf}Bb{{Bh{g}}}}`{{{b{{Ah{}{{l{c}}{n{e}}{A`{g}}{Ab{i}}{Ad{k}}{Af{m}}}}}}o}{{Bj{{b{c}}if}}}AlAnB`{BbBdBf}Bb{{Bh{g}}}{{Cl{e}}}}``{{{b{jEb}}cg}{{Cb{fC`}}}{}{}{{Cl{e}}}}{{{b{{Eh{}{{Ed{c}}{Ef{e}}}}}}ik}{{Cb{CdC`}}}{}{}{}{{Cl{g}}}{{Cl{c}}}}{{{b{{Ah{}{{l{c}}{n{e}}{A`{g}}{Ab{i}}{Ad{k}}{Af{m}}}}}}}EjAlAnB`{BbBdBf}Bb{{Bh{g}}}}{{{b{El}}c}{{Cb{ElC`}}}{}}{{{b{El}}ei}{{Cb{ElC`}}}{}{{Cl{c}}}{}{{Cl{g}}}}{{{b{El}}ei}{{Cb{ElC`}}}{}{{Cl{c}}}{}{{Fb{{En{{b{g}}}}}{{F`{{En{g}}}}}}}}`{{{b{jCj}}e}{{Cb{fC`}}}{}{{Cl{c}}}}{{{b{jDh}}eim}{{Cb{fC`}}}{}{{Cl{c}}}{}{{Cl{g}}}{}{{Cl{k}}}}{{{b{j{Eh{}{{Ed{c}}{Ef{e}}}}}}i}{{Cb{{Bj{kff}}C`}}}{}{}{}{{Cl{g}}}{}}{{{b{Bh}}}Ej}{bc{}}{{{b{Fd}}Bl}{{Ff{Bl}}}}{c{{Cb{e}}}{}{}}{{}{{Cb{c}}}{}}{bFh}{{{b{jEb}}c}{{Bj{egi}}}{}{}{}{}}{{{b{{Eh{}{{Ed{c}}{Ef{e}}}}}}i}{{Bj{{b{k}}mc}}}{}{}{}{{Cl{g}}}{}{}}`{{{b{j{Eh{}{{Ed{c}}{Ef{e}}}}}}im}{{Cb{{Bj{kff}}C`}}}{}{}{}{{Cl{g}}}{}{{Cl{k}}}}{{{b{j{Eh{}{{Ed{c}}{Ef{e}}}}}}im}{{Cb{{Bj{kff}}C`}}}{}{}{}{{Cl{g}}}{}{{Fb{{En{{b{k}}}}}{{F`{{En{k}}}}}}}}{{eim}{{Cb{{Cb{ff}}C`}}}{}{{Cl{c}}}{}{{Cl{g}}}{}{{Cl{k}}}}{{}c{}}`{{bd}f}{b{{b{h}}}}{{{b{j}}}{{b{jh}}}}{b{{b{c}}}{}}{{{b{j}}}{{b{jc}}}{}}{{{b{{Fj{cieg}}}}}AjAl{AnFd}B`{{Fl{ceg}}}}{{{b{{Fj{cieg}}}}}{{Fj{cieg}}}{AlBb}{AnBb}{B`Bb}{{Fl{ceg}}Bb}}{{b{b{jc}}}f{}}{bf}{{{b{{Fj{cieg}}}}}kAl{AnFd}B`{{Fl{ceg}}}{}}{Bl{{b{c}}}{}}{Bl{{b{jc}}}{}}{c{{Cb{{Fj{ekgi}}}}}Fn{AlG`Gb}{AnG`Gb}B`{{Fl{egi}}}}{Blf}{{{b{{Fj{cieg}}}}{b{{Fj{cieg}}}}}Cd{AlCf}{AnCf}{B`Cf}{{Fl{ceg}}Cf}}{{b{b{c}}}Cd{}}00{{{b{j{Fj{cgEje}}}}m}{{Cb{fC`}}}AlB`{{Fl{cEje}}}{}{{Cl{i}}}{{D`{}{{Cn{k}}}}}}{{{b{{Fj{cieg}}}}{b{jDb}}}Dd{AlDf}{AnDf}{B`Df}{{Fl{ceg}}Df}}{{{b{j{Fj{cieg}}}}m}{{Bj{oAaf}}}Al{AnFd}B`{{Fl{ceg}}}{}{{Cl{k}}}{}{}}{cc{}}{e{{Fj{gmik}}}{}{{Cl{c}}}Al{AnFd}B`{{Fl{gik}}}}{{{En{Bl}}g}{{Cb{{Fj{ckEji}}C`}}}Al{{Cl{c}}}{{D`{}{{Cn{e}}}}}B`{{Fl{cEji}}}}{{{b{{Fj{cieg}}}}{b{jk}}}f{AlBf}{AnBf}{B`Bf}{{Fl{ceg}}Bf}Dj}{{{b{{Fj{cieg}}}}}BlAl{AnFd}B`{{Fl{ceg}}}}{{}Bl}{{}c{}}{{{Dl{c}}}{{Dl{h}}}{}}{{{Dn{c}}}{{Dn{h}}}{}}{{{E`{c}}}{{E`{h}}}{}}{{{Fj{cieg}}}kAl{AnFd}B`{{Fl{ceg}}}{}}{{{b{{Fj{cieg}}}}}kAl{AnFd}B`{{Fl{ceg}}}{}}{{{b{{Fj{cieg}}}}}{{`{ceg}}}Al{AnFd}B`{{Fl{ceg}}}}{{{b{{Fj{cieg}}}}m}{{Bj{{b{o}}Aaf}}}Al{AnFd}B`{{Fl{ceg}}}{}{{Cl{k}}}{}{}}{Bl{{Fj{cieg}}}AlAnB`{{Fl{ceg}}}}{{{b{{Fj{cieg}}}}}EjAl{AnFd}B`{{Fl{ceg}}}}{{{b{j{Fj{cgEje}}}}k}{{Cb{fC`}}}AlB`{{Fl{cEje}}}{}{{Cl{i}}}}{{{b{j{Fj{cieg}}}}mAaAe}{{Cb{fC`}}}Al{AnFd}B`{{Fl{ceg}}}{}{{Cl{k}}}{}{{Cl{o}}}{}{{Cl{Ac}}}}{{{b{{Fj{cieg}}}}k}Cb{AlG`Gb}{AnG`Gb}B`{{Fl{ceg}}}Gd}{bc{}}{c{{Cb{e}}}{}{}}{{}{{Cb{c}}}{}}{bFh}{{eim}{{Cb{{Cb{ff}}C`}}}{}{{Cl{c}}}{}{{Cl{g}}}{}{{Cl{k}}}}{{}c{}}````````{b{{b{h}}}}{{{b{j}}}{{b{jh}}}}{b{{b{Gf}}}}{b{{b{c}}}{}}{{{b{j}}}{{b{jc}}}{}}{Bl{{b{c}}}{}}{Bl{{b{jc}}}{}}{Blf}{{{b{C`}}{b{C`}}}Cd}{{b{b{c}}}Cd{}}00{{{b{C`}}{b{jDb}}}Dd}0{GhC`}{cc{}}{{}Bl}>{{{Dl{c}}}{{Dl{h}}}{}}{{{Dn{c}}}{{Dn{h}}}{}}{{{E`{c}}}{{E`{h}}}{}}{bGj}{c{{Cb{e}}}{}{}}{{}{{Cb{c}}}{}}{bFh}{{}c{}}``{{bd}f}{b{{b{h}}}}{{{b{j}}}{{b{jh}}}}{b{{b{c}}}{}}{{{b{j}}}{{b{jc}}}{}}{{{b{{Gl{c}}}}}{{Gl{c}}}{BbGn}}{{b{b{jc}}}f{}}{bf}{Bl{{b{c}}}{}}{Bl{{b{jc}}}{}}{Blf}{{{b{{Gl{c}}}}{b{{Gl{c}}}}}Cd{CfGn}}{{b{b{c}}}Cd{}}00{cc{}}{{{b{{Gl{c}}}}{b{je}}}f{BfGn}Dj}{{}Bl}{{}c{}}{{{Dl{c}}}{{Dl{h}}}{}}{{{Dn{c}}}{{Dn{h}}}{}}{{{E`{c}}}{{E`{h}}}{}}{bc{}}{c{{Cb{e}}}{}{}}{{}{{Cb{c}}}{}}{bFh}7```````{{bd}f}{b{{b{h}}}}0{{{b{j}}}{{b{jh}}}}0{{{b{{H`{c}}}}}{{b{{Hb{c}}}}}Hd}{b{{b{c}}}{}}0{{{b{j}}}{{b{jc}}}{}}0{{{b{{H`{c}}}}}{{Cb{fHf}}}Hd}{{{b{{H`{c}}}}}{{H`{c}}}Hd}{{b{b{jc}}}f{}}{bf}{{{b{{H`{c}}}}{b{{H`{c}}}}}HhHd}{{}{{H`{c}}}Hd}{Bl{{b{c}}}{}}0{Bl{{b{jc}}}{}}0{c{{Cb{{H`{e}}}}}FnHd}{{cHjHl}{{Cb{{H`{e}}Hf}}}HnHd}{{{b{{Bn{{H`{c}}}}}}}{{Cb{{H`{c}}C`}}}I`}{{{b{c}}{b{e}}}{{Cb{{H`{g}}C`}}}{AnG`}{AlG`}I`}{Blf}0{{{b{{H`{c}}}}{b{{H`{c}}}}}CdHd}{{b{b{c}}}Cd{}}00{{{b{{H`{c}}}}{b{jDb}}}DdHd}0{cc{}}{{{Hb{c}}}{{H`{c}}}Hd}1{{{b{Ib}}}{{Cb{{H`{c}}e}}}Hd{}}{{{b{{H`{c}}}}{b{je}}}fHdDj}{{}Bl}0{{}c{}}0{{{Dl{c}}}{{Dl{h}}}{}}0{{{Dn{c}}}{{Dn{h}}}{}}0{{{E`{c}}}{{E`{h}}}{}}0{{{b{{H`{c}}}}{b{{H`{c}}}}}{{En{Hh}}}Hd}{{{b{{H`{c}}}}e}CbHdGd}{{{b{{H`{c}}}}eHj}{{Cb{fHf}}}HdId}{{{b{{H`{c}}}}Hj}BlHd}{{}Gj}{bc{}}{bGj}{c{{Cb{e}}}{}{}}0{{{b{If}}}{{Cb{{H`{c}}e}}}Hd{}}{If{{Cb{{H`{c}}e}}}Hd{}}{{}{{Cb{c}}}{}}0{bFh}0??`{{bd}f}{b{{b{h}}}}{{{b{j}}}{{b{jh}}}}{b{{b{c}}}{}}{{{b{j}}}{{b{jc}}}{}}{{{b{{Ih{cieg}}}}}AjAl{AnFd}B`{{Fl{ceg}}}}{{{b{{Ih{cieg}}}}}{{Ih{cieg}}}{AlBb}{AnBb}{B`Bb}{{Fl{ceg}}Bb}}{{b{b{jc}}}f{}}{bf}{{{b{{Ih{cieg}}}}}kAl{AnFd}B`{{Fl{ceg}}}{}}{Bl{{b{c}}}{}}{Bl{{b{jc}}}{}}{c{{Cb{{Ih{ekgi}}}}}Fn{AlG`Gb}{AnG`Gb}B`{{Fl{egi}}}}{Blf}{{{b{{Ih{cieg}}}}{b{{Ih{cieg}}}}}Cd{AlCf}{AnCf}{B`Cf}{{Fl{ceg}}Cf}}{{b{b{c}}}Cd{}}00{{{b{j{Ih{cgEje}}}}m}{{Cb{fC`}}}AlB`{{Fl{cEje}}}{}{{Cl{i}}}{{D`{}{{Cn{k}}}}}}{{{b{{Ih{cieg}}}}{b{jDb}}}Dd{AlDf}{AnDf}{B`Df}{{Fl{ceg}}Df}}{{{b{j{Ih{cieg}}}}m}{{Bj{oAaf}}}Al{AnFd}B`{{Fl{ceg}}}{}{{Cl{k}}}{}{}}{cc{}}{e{{Ih{gmik}}}{}{{Cl{c}}}Al{AnFd}B`{{Fl{gik}}}}{{{En{Bl}}g}{{Cb{{Ih{ckEji}}C`}}}Al{{Cl{c}}}{{D`{}{{Cn{e}}}}}B`{{Fl{cEji}}}}{{{b{{Ih{cieg}}}}{b{jk}}}f{AlBf}{AnBf}{B`Bf}{{Fl{ceg}}Bf}Dj}{{{b{{Ih{cieg}}}}}BlAl{AnFd}B`{{Fl{ceg}}}}{{}Bl}{{}c{}}{{{Dl{c}}}{{Dl{h}}}{}}{{{Dn{c}}}{{Dn{h}}}{}}{{{E`{c}}}{{E`{h}}}{}}{{{b{{Ih{cieg}}}}}kAl{AnFd}B`{{Fl{ceg}}}{}}{{{Ih{cieg}}}kAl{AnFd}B`{{Fl{ceg}}}{}}{{{b{{Ih{cieg}}}}}{{`{ceg}}}Al{AnFd}B`{{Fl{ceg}}}}{{{b{{Ih{cieg}}}}m}{{Bj{{b{o}}Aaf}}}Al{AnFd}B`{{Fl{ceg}}}{}{{Cl{k}}}{}{}}{Bl{{Ih{cieg}}}AlAnB`{{Fl{ceg}}}}{{{b{{Ih{cieg}}}}}EjAl{AnFd}B`{{Fl{ceg}}}}{{{b{j{Ih{cgEje}}}}k}{{Cb{fC`}}}AlB`{{Fl{cEje}}}{}{{Cl{i}}}}{{{b{j{Ih{cieg}}}}mAaAe}{{Cb{fC`}}}Al{AnFd}B`{{Fl{ceg}}}{}{{Cl{k}}}{}{{Cl{o}}}{}{{Cl{Ac}}}}{{{b{{Ih{cieg}}}}k}Cb{AlG`Gb}{AnG`Gb}B`{{Fl{ceg}}}Gd}{bc{}}{c{{Cb{e}}}{}{}}{{}{{Cb{c}}}{}}{bFh}{{eim}{{Cb{{Cb{ff}}C`}}}{}{{Cl{c}}}{}{{Cl{g}}}{}{{Cl{k}}}}{{}c{}}````````````{{bd}f}{b{{b{h}}}}{{{b{j}}}{{b{jh}}}}{b{{b{c}}}{}}{{{b{j}}}{{b{jc}}}{}}{{{b{{Ij{eicg}}}}}AjIl{Al{J`{}{{In{c}}}}}B`{{Fl{eEjg}}{Jb{eEjgc}}}}{{{b{{Ij{eicg}}}}}{{Ij{eicg}}}{IlBb}{Al{J`{}{{In{c}}}}Bb}{B`Bb}{{Fl{eEjg}}{Jb{eEjgc}}Bb}}{{b{b{jc}}}f{}}{bf}{{{b{{Ij{eicg}}}}}kIl{Al{J`{}{{In{c}}}}}B`{{Fl{eEjg}}{Jb{eEjgc}}}{}}{Bl{{b{c}}}{}}{Bl{{b{jc}}}{}}{c{{Cb{{Ij{gkei}}}}}FnIl{Al{J`{}{{In{e}}}}G`Gb}{B`G`Gb}{{Fl{gEji}}{Jb{gEjie}}}}{Blf}{{{b{{Ij{eicg}}}}{b{{Ij{eicg}}}}}Cd{IlCf}{Al{J`{}{{In{c}}}}Cf}{B`Cf}{{Fl{eEjg}}{Jb{eEjgc}}Cf}}{{b{b{c}}}Cd{}}00{{{b{j{Ij{eicg}}}}o}{{Cb{fC`}}}Il{Al{J`{}{{In{c}}}}}B`{{Fl{eEjg}}{Jb{eEjgc}}}{}{{Cl{k}}}{{D`{}{{Cn{m}}}}}}{{{b{{Ij{eicg}}}}{b{jDb}}}Dd{IlDf}{Al{J`{}{{In{c}}}}Df}{B`Df}{{Fl{eEjg}}{Jb{eEjgc}}Df}}{cc{}}{{{En{Bl}}i}{{Cb{{Ij{emck}}C`}}}Il{Al{J`{}{{In{c}}}}}{{Cl{e}}}{{D`{}{{Cn{g}}}}}B`{{Fl{eEjk}}{Jb{eEjkc}}}}{{{`{ce}}}cB`Il}{{{b{{J`{}{{In{c}}}}}}}cIl}{{{b{{Jh{}{{In{c}}{Jd{e}}{Jf{g}}}}}}}{{Ff{{b{e}}}}}Il{Al{J`{}{{In{c}}}}}B`}{{{b{{Jn{}{{Jj{c}}{Jl{e}}}}}}e}cJhIl}{{{b{{Ij{eicg}}}}k}mIl{Al{J`{}{{In{c}}}}}B`{{Fl{eEjg}}{Jb{eEjgc}}Bb}{}{}}{{{b{{Ij{eicg}}}}{b{jk}}}f{IlBf}{Al{J`{}{{In{c}}}}Bf}{B`Bf}{{Fl{eEjg}}{Jb{eEjgc}}Bf}Dj}{{{b{{Ij{eicg}}}}}BlIl{Al{J`{}{{In{c}}}}}B`{{Fl{eEjg}}{Jb{eEjgc}}}}{{}Bl}{{}c{}}{{{Dl{c}}}{{Dl{h}}}{}}{{{Dn{c}}}{{Dn{h}}}{}}{{{E`{c}}}{{E`{h}}}{}}{{{b{{Ij{eicg}}}}}{{`{kmo}}}Il{Al{J`{}{{In{c}}}}}B`{{Fl{eEjg}}{Jb{eEjgc}}}{}{}{}}{{{b{{Ij{eicg}}}}}{{`{{K`{}{{Cn{{b{e}}}}}}}}}Il{Al{J`{}{{In{c}}}}}B`{{Fl{eEjg}}{Jb{eEjgc}}}}{{{b{{Ij{eicg}}}}m}{{Bj{{b{o}}Aaf}}}Il{Al{J`{}{{In{c}}}}}B`{{Fl{eEjg}}{Jb{eEjgc}}}{}{{Cl{k}}}{}{}}{{}Il}0{Bl{{Ij{eicg}}}Il{Al{J`{}{{In{c}}}}}B`{{Fl{eEjg}}{Jb{eEjgc}}}}{{{b{{Ij{eicg}}}}}EjIl{Al{J`{}{{In{c}}}}}B`{{Fl{eEjg}}{Jb{eEjgc}}}}{{{b{j{Ij{eicg}}}}m}{{Cb{fC`}}}Il{Al{J`{}{{In{c}}}}}B`{{Fl{eEjg}}{Jb{eEjgc}}}{}{{Cl{k}}}}{{{b{{Ij{eicg}}}}k}CbIl{Al{J`{}{{In{c}}}}G`Gb}{B`G`Gb}{{Fl{eEjg}}{Jb{eEjgc}}}Gd}{bc{}}{c{{Cb{e}}}{}{}}{{}{{Cb{c}}}{}}{bFh}{{{b{{Jh{}{{In{c}}{Jd{e}}{Jf{g}}}}}}{b{{`{gc}}}}c}{{Cb{{Cb{ff}}C`}}}Il{Al{J`{}{{In{c}}}}}B`}{{eim}{{Cb{{Cb{ff}}C`}}}{}{{Cl{c}}}{}{{Cl{g}}}{}{{Cl{k}}}}{{{b{{Jn{}{{Jj{c}}{Jl{e}}}}}}{b{c}}e}{{Cb{{Cb{ff}}C`}}}JhIl}{{{b{{Ij{eicg}}}}{b{k}}m}{{Cb{{Cb{ff}}C`}}}Il{Al{J`{}{{In{c}}}}}B`{{Fl{eEjg}}{Jb{eEjgc}}Bb}{}{}}{{}c{}}`````````````````````````````{{bd}f}0000{b{{b{h}}}}0000{{{b{j}}}{{b{jh}}}}0000{{{b{Kb}}}{{b{{Bn{Kd}}}}}}{b{{b{c}}}{}}0000{{{b{j}}}{{b{jc}}}{}}0000{{{b{Kb}}}{{Cb{fHf}}}}{{{b{{Kf{ceg}}}}}{{Kf{ceg}}}{BbAl}{BbAn}{BbB`}}{{{b{{Kh{ceg}}}}}{{Kh{ceg}}}{AlBb}{AnBb}{B`Bb}}{{{b{{Kj{c}}}}}{{Kj{c}}}{BbKl}}{{{b{Kb}}}Kb}{{{b{Kn}}}Kn}{{b{b{jc}}}f{}}0000{bf}0000{{{b{Kb}}{b{Kb}}}Hh}{{}Kb}{Bl{{b{c}}}{}}0000{Bl{{b{jc}}}{}}0000{c{{Cb{{Kf{egi}}}}}Fn{G`GbAl}{G`GbAn}B`}{c{{Cb{{Kh{egi}}}}}Fn{AlG`Gb}{AnG`Gb}B`}{{cHjHl}{{Cb{KbHf}}}Hn}{{{b{{Bn{e}}}}}{{Cb{eC`}}}An{Kl{L`{c}}}}{{{b{{Bn{c}}}}}{{Cb{cC`}}}Kl}{{{b{{Bn{Kb}}}}}{{Cb{KbC`}}}}{{{b{Ej}}{b{{Gl{c}}}}}{{Cb{cC`}}}Kl}{{{b{c}}{b{e}}}{{Cb{eC`}}}An{Kl{L`{c}}}}{{{b{c}}{b{e}}}{{Cb{KbC`}}}An{AlG`}}{Blf}0000{{{b{{Kh{ceg}}}}}{{En{{b{c}}}}}AlAnB`}{{{b{{Kf{ceg}}}}{b{{Kf{ceg}}}}}Cd{CfAl}{CfAn}{CfB`}}{{{b{{Kh{ceg}}}}{b{{Kh{ceg}}}}}Cd{AlCf}{AnCf}{B`Cf}}{{{b{{Kj{c}}}}{b{{Kj{c}}}}}Cd{CfKl}}{{{b{Kb}}{b{Kb}}}Cd}{{{b{Kn}}{b{Kn}}}Cd}{{b{b{c}}}Cd{}}00000000000000{{{b{{Kf{ceg}}}}{b{jDb}}}Dd{DfAl}{DfAn}{DfB`}}{{{b{{Kh{ceg}}}}{b{jDb}}}Dd{AlDf}{AnDf}{B`Df}}{{{b{{Kj{c}}}}{b{jDb}}}Dd{DfKl}}{{{b{Kb}}{b{jDb}}}Dd}{{{b{Kn}}{b{jDb}}}Dd}{cc{}}0000{{{`{Kbc}}}KbIl}{{{b{{Kf{ceg}}}}{b{ji}}}f{BfAl}{BfAn}{BfB`}Dj}{{{b{{Kh{ceg}}}}{b{ji}}}f{AlBf}{AnBf}{B`Bf}Dj}{{{b{Kb}}{b{jc}}}fDj}{{{b{Kn}}{b{jc}}}fDj}``{{{b{{Kh{ceg}}}}}{{b{e}}}AlAnB`}{{}Bl}0000{{}c{}}0000{{{Dl{c}}}{{Dl{h}}}{}}0000{{{Dn{c}}}{{Dn{h}}}{}}0000{{{E`{c}}}{{E`{h}}}{}}0000{{c{Lb{ecg}}}{{Kh{ecg}}}AnAlB`}{{{b{Kb}}{b{Kb}}}{{En{Hh}}}}``{{{b{{Kf{ceg}}}}i}Cb{G`GbAl}{G`GbAn}B`Gd}{{{b{{Kh{ceg}}}}i}Cb{AlG`Gb}{AnG`Gb}B`Gd}{{{b{Kb}}cHj}{{Cb{fHf}}}Id}{{{b{Kb}}Hj}Bl}{bc{}}0000{{{b{{Kh{ceg}}}}}BlAlAnB`}{c{{Cb{e}}}{}{}}0000{{}{{Cb{c}}}{}}0000{bFh}0000>>>>>```````{{bd}f}{b{{b{h}}}}{{{b{j}}}{{b{jh}}}}{b{{b{c}}}{}}{{{b{j}}}{{b{jc}}}{}}{{{b{{Ld{cieg}}}}}AjAl{AnFd}B`{{Fl{ceg}}}}{{{b{{Ld{cieg}}}}}{{Ld{cieg}}}{AlBb}{AnBb}{B`Bb}{{Fl{ceg}}Bb}}{{b{b{jc}}}f{}}{bf}{{{b{{Ld{cieg}}}}}kAl{AnFd}B`{{Fl{ceg}}}{}}{Bl{{b{c}}}{}}{Bl{{b{jc}}}{}}{c{{Cb{{Ld{ekgi}}}}}Fn{AlG`Gb}{AnG`Gb}B`{{Fl{egi}}}}{Blf}{{{b{{Ld{cieg}}}}{b{{Ld{cieg}}}}}Cd{AlCf}{AnCf}{B`Cf}{{Fl{ceg}}Cf}}{{b{b{c}}}Cd{}}00{{{b{{Ld{cieg}}}}{b{jDb}}}Dd{AlDf}{AnDf}{B`Df}{{Fl{ceg}}Df}}{{{b{j{Ld{cieg}}}}m}{{Bj{oAaf}}}Al{AnFd}B`{{Fl{ceg}}}{}{{Cl{k}}}{}{}}{cc{}}{e{{Ld{gmik}}}{}{{Cl{c}}}Al{AnFd}B`{{Fl{gik}}}}{{Blm}{{Cb{{Ld{gAaco}}C`}}}{AnFd}{{Cl{c}}}Al{{Cl{g}}}{{Cl{{Ch{ei}}}}}{{D`{}{{Cn{k}}}}}B`{{Fl{gco}}}}{{{b{{Ld{cieg}}}}{b{jk}}}f{AlBf}{AnBf}{B`Bf}{{Fl{ceg}}Bf}Dj}{{{b{{Ld{cieg}}}}}BlAl{AnFd}B`{{Fl{ceg}}}}{{}Bl}{{}c{}}{{{Dl{c}}}{{Dl{h}}}{}}{{{Dn{c}}}{{Dn{h}}}{}}{{{E`{c}}}{{E`{h}}}{}}{{{Ld{cieg}}}kAl{AnFd}B`{{Fl{ceg}}}{}}{{{b{{Ld{cieg}}}}}kAl{AnFd}B`{{Fl{ceg}}}{}}{{{b{{Ld{cieg}}}}}{{`{ceg}}}Al{AnFd}B`{{Fl{ceg}}}}{{{b{{Ld{cieg}}}}m}{{Bj{{b{o}}Aaf}}}Al{AnFd}B`{{Fl{ceg}}}{}{{Cl{k}}}{}{}}{Bl{{Ld{cieg}}}Al{AnFd}B`{{Fl{ceg}}}}{{{b{j{Ld{cieg}}}}ko}{{Cb{fC`}}}Al{AnFd}B`{{Fl{ceg}}}{}{}{{Cl{m}}}}{{{b{{Ld{cieg}}}}mAa}{{Cb{CdC`}}}Al{AnFd}B`{{Fl{ceg}}}{}{{Cl{k}}}{}{{Cl{o}}}}{{{b{{Ld{cieg}}}}}EjAl{AnFd}B`{{Fl{ceg}}}}{{{b{{Ld{cieg}}}}mAa}{{Cb{{Ld{cieg}}C`}}}Al{AnFd}B`{{Fl{ceg}}}{}{{Cl{k}}}{}{{Fb{{En{{b{o}}}}}{{F`{{En{o}}}}}}}}{{{b{j{Ld{cieg}}}}mAaAe}{{Cb{fC`}}}Al{AnFd}B`{{Fl{ceg}}}{}{{Cl{k}}}{}{{Cl{o}}}{}{{Cl{Ac}}}}{{{b{{Ld{cieg}}}}k}Cb{AlG`Gb}{AnG`Gb}B`{{Fl{ceg}}}Gd}{bc{}}{c{{Cb{e}}}{}{}}{{}{{Cb{c}}}{}}{bFh}{{{b{j{Ld{cieg}}}}k}{{Bj{moAa}}}Al{AnFd}B`{{Fl{ceg}}}{}{}{}{}}{{{b{{Ld{cieg}}}}m}{{Bj{{b{o}}AaAc}}}Al{AnFd}B`{{Fl{ceg}}}{}{{Cl{k}}}{}{}{}}{{{b{j{Ld{cieg}}}}mAa}{{Cb{{Bj{cff}}C`}}}Al{AnFd}B`{{Fl{ceg}}}{}{{Cl{k}}}{}{{Fb{{En{{b{o}}}}}{{F`{{En{o}}}}}}}}{{eim}{{Cb{{Cb{ff}}C`}}}{}{{Cl{c}}}{}{{Cl{g}}}{}{{Cl{k}}}}{{}c{}}","D":"AFb","p":[[1,"reference"],[5,"Private",642],[1,"unit"],[10,"Any",643],[0,"mut"],[17,"Element"],[17,"Index"],[17,"NodeValue"],[17,"MembershipProof"],[17,"BatchMembershipProof"],[17,"Commitment"],[10,"MerkleTreeScheme",0],[5,"BigUint",644],[10,"Element",0],[10,"Index",0],[10,"NodeValue",0],[10,"Clone",645],[10,"Eq",646],[10,"Hash",647],[10,"MerkleCommitment",0],[6,"LookupResult",0],[1,"usize"],[1,"slice"],[6,"MerkleTreeError",145],[6,"Result",648],[1,"bool"],[10,"PartialEq",646],[1,"tuple"],[10,"AppendableMerkleTreeScheme",0],[10,"Borrow",649],[17,"Item"],[10,"IntoIterator",650],[5,"Formatter",651],[8,"Result",651],[10,"Debug",651],[10,"ForgetableMerkleTreeScheme",0],[10,"Hasher",647],[5,"Box",652],[5,"Arc",653],[5,"Rc",654],[10,"ForgetableUniversalMerkleTreeScheme",0],[17,"NonMembershipProof"],[17,"BatchNonMembershipProof"],[10,"UniversalMerkleTreeScheme",0],[1,"u64"],[10,"PersistentUniversalMerkleTreeScheme",0],[6,"Option",655],[17,"Output"],[10,"FnOnce",656],[10,"ToTraversalPath",0],[5,"Vec",657],[5,"TypeId",643],[5,"MerkleTree",98],[10,"DigestAlgorithm",0],[10,"Deserializer",658],[10,"CanonicalSerialize",659],[10,"CanonicalDeserialize",659],[10,"Serializer",660],[10,"Error",661],[6,"RescueError",662],[5,"String",663],[5,"Interval",179],[10,"Field",664],[5,"HasherNode",208],[8,"Output",665],[10,"Digest",666],[6,"SerializationError",667],[6,"Ordering",646],[6,"Compress",659],[6,"Validate",659],[10,"Read",668],[10,"HasherDigest",208],[1,"str"],[10,"Write",668],[5,"TaggedBase64",669],[5,"LightWeightMerkleTree",279],[5,"NMT",326],[10,"Namespace",326],[17,"Namespace"],[10,"Namespaced",326],[10,"BindNamespace",326],[17,"Leaf"],[17,"Node"],[10,"NamespaceProof",326],[17,"NamespaceProof"],[17,"NamespaceId"],[10,"NamespacedMerkleTreeScheme",326],[10,"ExactSizeIterator",670],[5,"Sha3Node",390],[1,"u8"],[6,"MerkleNode",390,671],[5,"MerkleProof",390,671],[5,"RescueHash",390],[10,"RescueParameter",662],[5,"Sha3Digest",390],[10,"From",672],[8,"MerklePath",390,671],[5,"UniversalMerkleTree",591],[5,"HasherDigestAlgorithm",208],[15,"Branch",585],[15,"Leaf",585],[15,"ForgettenSubtree",585]],"r":[[15,145],[390,0],[392,0],[393,0],[395,0],[396,0],[398,0],[401,0],[402,0],[403,671],[404,671],[405,671],[406,98],[407,0],[408,0],[416,0],[417,591],[418,0],[523,0],[524,0]],"b":[[130,"impl-IntoIterator-for-MerkleTree%3CE,+H,+I,+ARITY,+T%3E"],[131,"impl-IntoIterator-for-%26MerkleTree%3CE,+H,+I,+ARITY,+T%3E"],[165,"impl-Debug-for-MerkleTreeError"],[166,"impl-Display-for-MerkleTreeError"],[245,"impl-Debug-for-HasherNode%3CH%3E"],[246,"impl-Display-for-HasherNode%3CH%3E"],[271,"impl-TryFrom%3C%26TaggedBase64%3E-for-HasherNode%3CH%3E"],[272,"impl-TryFrom%3CTaggedBase64%3E-for-HasherNode%3CH%3E"],[311,"impl-IntoIterator-for-%26LightWeightMerkleTree%3CE,+H,+I,+ARITY,+T%3E"],[312,"impl-IntoIterator-for-LightWeightMerkleTree%3CE,+H,+I,+ARITY,+T%3E"],[476,"impl-DigestAlgorithm%3CF,+I,+F%3E-for-RescueHash%3CF%3E"],[477,"impl-DigestAlgorithm%3CInterval%3CF%3E,+u64,+F%3E-for-RescueHash%3CF%3E"],[479,"impl-DigestAlgorithm%3CInterval%3CF%3E,+u64,+F%3E-for-RescueHash%3CF%3E"],[480,"impl-DigestAlgorithm%3CF,+I,+F%3E-for-RescueHash%3CF%3E"],[622,"impl-IntoIterator-for-UniversalMerkleTree%3CE,+H,+I,+ARITY,+T%3E"],[623,"impl-IntoIterator-for-%26UniversalMerkleTree%3CE,+H,+I,+ARITY,+T%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAANEBOwAQAAAAGwAAAB0AAwAiAAIAJgABACsABAA2AAAAOgAAAEIAAABEAAIAVwAAAFkAAgBiAAAAZAAUAHoAAAB8AAIAgAAGAIgACQCaAA4AqgAAAKwABwC2AA4AxgABAMkABwDYAB8A+QAAAPsAAwABARYAGQEUAC8BAAAxAQIANQEGAD0BCQBTARMAbQEDAHIBAwB3AQAAewEGAIMBAACFAQIAiQEBAIwBAQCPAQAAkgEBAJcBAgChAUYA6QEYAAcCBAAPAgQAGQIOACkCAAAsAggANgITAFECEwBmAgAAaAICAGwCBgB0AgkAfwIDAA=="}],["jf_pcs",{"t":"RRRRERRKRRRKKRMMMHMCMMNNNNNMMMMCMCCMMNMCMPPPPGPPPNNNNNNNNNNNNNNNNNNIFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNFEEEEFFFEEEEEEFFFNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOHOOOOOONNNNNNNNNNNNNNNNHOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNN","n":["BatchCommitment","BatchProof","Commitment","Evaluation","PCSError","Point","Polynomial","PolynomialCommitmentScheme","Proof","ProverParam","SRS","StructuredReferenceString","UnivariatePCS","VerifierParam","batch_commit","batch_open","batch_verify","checked_fft_size","commit","errors","extract_prover_param","extract_verifier_param","load_srs_from_file","","multi_open","multi_open_rou","multi_open_rou_eval_domain","multi_open_rou_evals","multi_open_rou_proofs","multi_point_open","multi_point_verify","multilinear_kzg","open","prelude","transcript","trim","","trim_fft_size","trim_with_verifier_degree","univariate_kzg","verify","InvalidParameters","InvalidProof","InvalidProver","InvalidVerifier","PCSError","SerializationError","TranscriptError","UpstreamError","as_error_source","borrow","borrow_mut","deref","deref_mut","drop","fmt","","from","","","init","into","to_string","try_from","try_into","type_id","vzip","MLE","MultilinearKzgBatchProof","MultilinearKzgPCS","MultilinearKzgProof","batch_check","","batch_commit","batch_open","batch_verify","borrow","","","borrow_mut","","","check","","clone","","clone_into","","clone_to_uninit","","commit","deref","","","deref_mut","","","deserialize_with_mode","","drop","","","eq","","equivalent","","","","fmt","","from","","","hash","init","","","into","","","open","proof","proofs","q_x_commit","q_x_opens","serialize_with_mode","","serialized_size","","to_owned","","trim","try_from","","","try_into","","","type_id","","","verify","vzip","","","Commitment","MLE","MultilinearKzgBatchProof","MultilinearKzgPCS","MultilinearKzgProof","MultilinearProverParam","MultilinearUniversalParams","MultilinearVerifierParam","PCSError","PolynomialCommitmentScheme","StructuredReferenceString","UnivariateKzgBatchProof","UnivariateKzgPCS","UnivariateKzgProof","UnivariateProverParam","UnivariateUniversalParams","UnivariateVerifierParam","as_ref","batch_check","","","","","","","beta_h","","borrow","","","","","","","borrow_mut","","","","","","","check","","","","","","","clone","","","","","","","clone_into","","","","","","","clone_to_uninit","","","","","","","default","","","","deref","","","","","","","deref_mut","","","","","","","deserialize_with_mode","","","","","","","drop","","","","","","","eq","","","","equivalent","","","","","","","","extract_prover_param","","extract_verifier_param","","fmt","","","","","","","from","","","","","","","","g","","","get_batched_nv","h","","","","h_mask","","hash","init","","","","","","","into","","","","","","","max_degree","merge_polynomials","num_vars","","powers_of_g","","","","powers_of_h","","prover_param","serialize_with_mode","","","","","","","serialized_size","","","","","","","to_owned","","","","","","","trim","","trim_with_verifier_degree","","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","vzip","","","","","","","IOPTranscript","InvalidTranscript","SerializationError","TranscriptError","append_message","append_serializable_element","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","deref","","deref_mut","","drop","","fmt","","from","","","get_and_append_byte_challenge","get_and_append_challenge","init","","into","","new","to_owned","to_string","try_from","","try_into","","type_id","","vzip","","UnivariateKzgBatchProof","UnivariateKzgPCS","UnivariateKzgProof","batch_check","batch_commit","batch_open","batch_verify","borrow","","borrow_mut","","check","clone","clone_into","clone_to_uninit","commit","deref","","deref_mut","","deserialize_with_mode","drop","","eq","equivalent","","fmt","from","","hash","init","","into","","multi_open","multi_open_rou_evals","multi_open_rou_proofs","multi_point_open","multi_point_verify","open","proof","serialize_with_mode","serialized_size","to_owned","trim","try_from","","try_into","","type_id","","verify","vzip",""],"q":[[0,"jf_pcs"],[41,"jf_pcs::errors"],[67,"jf_pcs::multilinear_kzg"],[145,"jf_pcs::prelude"],[366,"jf_pcs::transcript"],[407,"jf_pcs::univariate_kzg"],[461,"core::result"],[462,"core::borrow"],[463,"alloc::vec"],[464,"rand_core"],[465,"core::option"],[466,"ark_poly::domain::radix2"],[467,"core::error"],[468,"core::fmt"],[469,"jf_pcs::transcript::errors"],[470,"ark_serialize::error"],[471,"alloc::string"],[472,"core::any"],[473,"ark_ec::pairing"],[474,"core::iter::traits::iterator"],[475,"core::marker"],[476,"core::clone"],[477,"ark_serialize"],[478,"std::io"],[479,"core::cmp"],[480,"core::hash"],[481,"jf_pcs::structs"],[482,"ark_ec"],[483,"jf_pcs::multilinear_kzg::srs"],[484,"jf_pcs::univariate_kzg::srs"],[485,"core::default"],[486,"ark_poly::evaluations::multivariate::multilinear::dense"],[487,"ark_ff::fields::prime"],[488,"jf_pcs::multilinear_kzg::util"]],"i":"Gd000`00`0An1``0111`1`00101Gf00000`2``2101`2f000`000000000000000000000````CjD`Gh00021021212121210021021210212122112102120210210121121212100210210210021`````````````````EbEhEjEl3EnF`Fb20543621054362105436210543621054362105436210621054362105436210543621054362106210662211005252543621054366210430`4320536543621054362102`43421020554362105436210543621052525436210543621054362105436210`Bn0`Fl010100001010101111000101000110101010```GbGj0001011111001011011111011010100000011110010101001","f":"``````````````{{c{d{{b{e}}}}}{{h{gf}}}j{}{}}{{c{d{e}}{d{{b{g}}}}{d{{b{i}}}}}{{h{{n{k{l{m}}}}f}}}j{}{}{}{}{}}{{d{d{c}}{d{{b{e}}}}{d{{b{g}}}}{d{i}}{d{A`k}}}{{h{Abf}}}{}{}{}{}{AdAf}}{Ah{{h{Ahf}}}}{{c{d{e}}}{{h{gf}}}j{}{}}`{{{d{{An{}{{Aj{c}}{Al{e}}}}}}Ah}c{}{}}{{{d{{An{}{{Aj{c}}{Al{e}}}}}}Ah}e{}{}}{{Ah{Bb{{d{B`}}}}}{{h{cf}}}{}}{{Ah{Bb{{d{B`}}}}}{{h{{An{}{{Aj{c}}{Al{e}}}}f}}}{}{}}{{c{d{e}}{d{{b{g}}}}}{{h{{n{{l{i}}{l{k}}}}f}}}j{}{}{}{}}{{c{d{e}}Ah{d{{Bd{g}}}}}{{h{{n{{l{i}}{l{g}}}}f}}}j{}{}{}}{{AhAh}{{h{{Bd{c}}f}}}{}}{{{d{c}}Ah{d{{Bd{e}}}}}{{h{{l{e}}f}}}{}{}}{{c{d{e}}Ah{d{{Bd{g}}}}}{{h{{l{i}}f}}}j{}{}{}}{{c{d{e}}{d{{b{g}}}}}{{h{{n{i{l{k}}}}f}}}j{}{}{}{}}{{c{d{e}}{d{{b{g}}}}{d{{b{i}}}}{d{k}}}{{h{Abf}}}j{}{}{}{}}`{{c{d{e}}{d{g}}}{{h{{n{ik}}f}}}j{}{}{}{}}``{{eAh{Bb{Ah}}}{{h{nf}}}{}{{j{c}}}}{{{d{{An{}{{Aj{c}}{Al{e}}}}}}Ah}{{h{{n{ce}}f}}}{}{}}{{eAh}{{h{nf}}}{}{{j{c}}}}{{{d{{An{}{{Aj{c}}{Al{e}}}}}}AhAh}{{h{{n{ce}}f}}}{}{}}`{{d{d{c}}{d{e}}{d{g}}{d{i}}}{{h{Abf}}}{}{}{}{}}````````{d{{d{Bf}}}}{d{{d{c}}}{}}{{{d{A`}}}{{d{A`c}}}{}}{Ah{{d{c}}}{}}{Ah{{d{A`c}}}{}}{AhBh}{{{d{f}}{d{A`Bj}}}Bl}0{Bnf}{C`f}{cc{}}{{}Ah}{{}c{}}{dCb}{c{{h{e}}}{}{}}{{}{{h{c}}}{}}{dCd}4````{e{{h{BhC`}}}Cf{{Cl{}{{Ch{{d{{Cj{c}}}}}}}}Cn}}{e{{h{BhC`}}}Cf{{Cl{}{{Ch{{d{{D`{c}}}}}}}}Cn}}{{c{d{{b{e}}}}}{{h{gf}}}j{}{}}{{c{d{e}}{d{{b{g}}}}{d{{b{i}}}}}{{h{{n{k{l{m}}}}f}}}j{}{}{}{}{}}{{d{d{c}}{d{{b{e}}}}{d{b}}{d{g}}{d{A`i}}}{{h{Abf}}}{}{}{}{AdAf}}{d{{d{c}}}{}}00{{{d{A`}}}{{d{A`c}}}{}}00{{{d{{Cj{c}}}}}{{h{BhC`}}}Cf}{{{d{{D`{c}}}}}{{h{BhC`}}}Cf}{{{d{{Cj{c}}}}}{{Cj{c}}}{DbCf}}{{{d{{D`{c}}}}}{{D`{c}}}{DbCf}}{{d{d{A`c}}}Bh{}}0{dBh}0{{c{d{e}}}{{h{gf}}}j{}{}}{Ah{{d{c}}}{}}00{Ah{{d{A`c}}}{}}00{{cDdDf}{{h{{Cj{e}}C`}}}DhCf}{{cDdDf}{{h{{D`{e}}C`}}}DhCf}{AhBh}00{{{d{{Cj{c}}}}{d{{Cj{c}}}}}Ab{DjCf}}{{{d{{D`{c}}}}{d{{D`{c}}}}}Ab{DjCf}}{{d{d{c}}}Ab{}}000{{{d{{Cj{c}}}}{d{A`Bj}}}Bl{DlCf}}{{{d{{D`{c}}}}{d{A`Bj}}}Bl{DlCf}}{cc{}}00{{{d{{Cj{c}}}}{d{A`e}}}BhCfDn}{{}Ah}00{{}c{}}00{{c{d{e}}{d{g}}}{{h{{n{ik}}f}}}j{}{}{}{}}````{{{d{{Cj{c}}}}eDd}{{h{BhC`}}}CfE`}{{{d{{D`{c}}}}eDd}{{h{BhC`}}}CfE`}{{{d{{Cj{c}}}}Dd}AhCf}{{{d{{D`{c}}}}Dd}AhCf}{dc{}}0{{eAh{Bb{Ah}}}{{h{nf}}}{}{{j{c}}}}{c{{h{e}}}{}{}}00{{}{{h{c}}}{}}00{dCd}00{{d{d{c}}{d{e}}d{d{g}}}{{h{Abf}}}{}{}{}};;;`````````````````{{{d{{Eb{e}}}}}{{d{c}}}Ed{{Cf{}{{Ef{c}}}}}}{e{{h{BhC`}}}Cf{{Cl{}{{Ch{{d{{Eh{c}}}}}}}}Cn}}{e{{h{BhC`}}}Cf{{Cl{}{{Ch{{d{{Ej{c}}}}}}}}Cn}}{e{{h{BhC`}}}Cf{{Cl{}{{Ch{{d{{El{c}}}}}}}}Cn}}{e{{h{BhC`}}}Cf{{Cl{}{{Ch{{d{{Eb{c}}}}}}}}Cn}}{e{{h{BhC`}}}Cf{{Cl{}{{Ch{{d{{En{c}}}}}}}}Cn}}{e{{h{BhC`}}}Cf{{Cl{}{{Ch{{d{{F`{c}}}}}}}}Cn}}{e{{h{BhC`}}}Cf{{Cl{}{{Ch{{d{{Fb{c}}}}}}}}Cn}}``{d{{d{c}}}{}}000000{{{d{A`}}}{{d{A`c}}}{}}000000{{{d{{Eh{c}}}}}{{h{BhC`}}}Cf}{{{d{{Ej{c}}}}}{{h{BhC`}}}Cf}{{{d{{El{c}}}}}{{h{BhC`}}}Cf}{{{d{{Eb{c}}}}}{{h{BhC`}}}Cf}{{{d{{En{c}}}}}{{h{BhC`}}}Cf}{{{d{{F`{c}}}}}{{h{BhC`}}}Cf}{{{d{{Fb{c}}}}}{{h{BhC`}}}Cf}{{{d{{Eh{c}}}}}{{Eh{c}}}{DbCf}}{{{d{{Ej{c}}}}}{{Ej{c}}}{DbCf}}{{{d{{El{c}}}}}{{El{c}}}{DbCf}}{{{d{{Eb{c}}}}}{{Eb{c}}}{DbCf}}{{{d{{En{c}}}}}{{En{c}}}{DbCf}}{{{d{{F`{c}}}}}{{F`{c}}}{DbCf}}{{{d{{Fb{c}}}}}{{Fb{c}}}{DbCf}}{{d{d{A`c}}}Bh{}}000000{dBh}000000{{}{{Eb{c}}}Cf}{{}{{En{c}}}{FdCf}}{{}{{F`{c}}}{FdCf}}{{}{{Fb{c}}}Cf}{Ah{{d{c}}}{}}000000{Ah{{d{A`c}}}{}}000000{{cDdDf}{{h{{Eh{e}}C`}}}DhCf}{{cDdDf}{{h{{Ej{e}}C`}}}DhCf}{{cDdDf}{{h{{El{e}}C`}}}DhCf}{{cDdDf}{{h{{Eb{e}}C`}}}DhCf}{{cDdDf}{{h{{En{e}}C`}}}DhCf}{{cDdDf}{{h{{F`{e}}C`}}}DhCf}{{cDdDf}{{h{{Fb{e}}C`}}}DhCf}{AhBh}000000{{{d{{Eb{c}}}}{d{{Eb{c}}}}}Ab{DjCf}}{{{d{{En{c}}}}{d{{En{c}}}}}Ab{DjCf}}{{{d{{F`{c}}}}{d{{F`{c}}}}}Ab{DjCf}}{{{d{{Fb{c}}}}{d{{Fb{c}}}}}Ab{DjCf}}{{d{d{c}}}Ab{}}0000000{{{d{{Eh{c}}}}Ah}eCf{}}{{{d{{En{c}}}}Ah}eCf{}}10{{{d{{Eh{c}}}}{d{A`Bj}}}Bl{DlCf}}{{{d{{Ej{c}}}}{d{A`Bj}}}Bl{DlCf}}{{{d{{El{c}}}}{d{A`Bj}}}Bl{DlCf}}{{{d{{Eb{c}}}}{d{A`Bj}}}Bl{DlCf}}{{{d{{En{c}}}}{d{A`Bj}}}Bl{DlCf}}{{{d{{F`{c}}}}{d{A`Bj}}}Bl{DlCf}}{{{d{{Fb{c}}}}{d{A`Bj}}}Bl{DlCf}}{cc{}}00{c{{Eb{e}}}Ed{{Cf{}{{Ef{c}}}}}}1111```{{AhAh}Ah}``````{{{d{{Eb{c}}}}{d{A`e}}}BhCfDn}{{}Ah}000000{{}c{}}000000{{{d{{En{c}}}}}AhCf}{{{d{{b{{Ff{c}}}}}}}{{h{{Fh{c}}f}}}Fj}`````````{{{d{{Eh{c}}}}eDd}{{h{BhC`}}}CfE`}{{{d{{Ej{c}}}}eDd}{{h{BhC`}}}CfE`}{{{d{{El{c}}}}eDd}{{h{BhC`}}}CfE`}{{{d{{Eb{c}}}}eDd}{{h{BhC`}}}CfE`}{{{d{{En{c}}}}eDd}{{h{BhC`}}}CfE`}{{{d{{F`{c}}}}eDd}{{h{BhC`}}}CfE`}{{{d{{Fb{c}}}}eDd}{{h{BhC`}}}CfE`}{{{d{{Eh{c}}}}Dd}AhCf}{{{d{{Ej{c}}}}Dd}AhCf}{{{d{{El{c}}}}Dd}AhCf}{{{d{{Eb{c}}}}Dd}AhCf}{{{d{{En{c}}}}Dd}AhCf}{{{d{{F`{c}}}}Dd}AhCf}{{{d{{Fb{c}}}}Dd}AhCf}{dc{}}000000{{{d{{Eh{c}}}}Ah}{{h{{n{eg}}f}}}Cf{}{}}{{{d{{En{c}}}}Ah}{{h{{n{eg}}f}}}Cf{}{}}{{{d{{Eh{c}}}}AhAh}{{h{{n{eg}}f}}}Cf{}{}}{{{d{{En{c}}}}AhAh}{{h{{n{eg}}f}}}Cf{}{}}{c{{h{e}}}{}{}}000000{{}{{h{c}}}{}}000000{dCd}000000{{}c{}}000000````{{{d{A`{Fl{c}}}}{d{{b{Fn}}}}{d{{b{Fn}}}}}{{h{BhBn}}}Fj}{{{d{A`{Fl{c}}}}{d{{b{Fn}}}}{d{e}}}{{h{BhBn}}}FjG`}{d{{d{c}}}{}}0{{{d{A`}}}{{d{A`c}}}{}}0{{{d{{Fl{c}}}}}{{Fl{c}}}{DbFj}}{{d{d{A`c}}}Bh{}}{dBh}{Ah{{d{c}}}{}}0{Ah{{d{A`c}}}{}}0{AhBh}0{{{d{Bn}}{d{A`Bj}}}Bl}0{C`Bn}{cc{}}0{{{d{A`{Fl{c}}}}{d{{b{Fn}}}}{d{A`{b{Fn}}}}}{{h{BhBn}}}Fj}{{{d{A`{Fl{c}}}}{d{{b{Fn}}}}}{{h{cBn}}}Fj}{{}Ah}0{{}c{}}0{{{d{{b{Fn}}}}}{{Fl{c}}}Fj}{dc{}}{dCb}{c{{h{e}}}{}{}}0{{}{{h{c}}}{}}0{dCd}066```{e{{h{BhC`}}}Cf{{Cl{}{{Ch{{d{{Gb{c}}}}}}}}Cn}}{{e{d{{b{g}}}}}{{h{if}}}Cf{{j{{F`{c}}}}}{}{}}{{e{d{g}}{d{{b{i}}}}{d{{b{k}}}}}{{h{{n{m{l{o}}}}f}}}Cf{{j{{F`{c}}}}}{}{}{}{}{}}{{{d{{Fb{c}}}}{d{e}}{d{{b{g}}}}{d{b}}{d{i}}{d{A`k}}}{{h{Abf}}}Cf{}{}{}{AdAf}}{d{{d{c}}}{}}0{{{d{A`}}}{{d{A`c}}}{}}0{{{d{{Gb{c}}}}}{{h{BhC`}}}Cf}{{{d{{Gb{c}}}}}{{Gb{c}}}{DbCf}}{{d{d{A`c}}}Bh{}}{dBh}{{e{d{g}}}{{h{if}}}Cf{{j{{F`{c}}}}}{}{}}{Ah{{d{c}}}{}}0{Ah{{d{A`c}}}{}}0{{cDdDf}{{h{{Gb{e}}C`}}}DhCf}{AhBh}0{{{d{{Gb{c}}}}{d{{Gb{c}}}}}Ab{DjCf}}{{d{d{c}}}Ab{}}0{{{d{{Gb{c}}}}{d{A`Bj}}}Bl{DlCf}}{cc{}}0{{{d{{Gb{c}}}}{d{A`e}}}BhCfDn}{{}Ah}0{{}c{}}0{{e{d{g}}{d{{b{i}}}}}{{h{{n{{l{k}}{l{m}}}}f}}}Cf{{j{{F`{c}}}}}{}{}{}{}}{{{d{c}}Ah{d{{Bd{e}}}}}{{h{{l{e}}f}}}{}{}}{{c{d{e}}Ah{d{{Bd{g}}}}}{{h{{l{i}}f}}}j{}{}{}}{{c{d{e}}{d{{b{g}}}}}{{h{{n{i{l{k}}}}f}}}j{}{}{}{}}{{c{d{e}}{d{{b{g}}}}{d{{b{i}}}}{d{k}}}{{h{Abf}}}j{}{}{}{}}{{e{d{g}}{d{i}}}{{h{{n{km}}f}}}Cf{{j{{F`{c}}}}}{}{}{}{}}`{{{d{{Gb{c}}}}eDd}{{h{BhC`}}}CfE`}{{{d{{Gb{c}}}}Dd}AhCf}{dc{}}{{eAh{Bb{Ah}}}{{h{{n{{F`{g}}{Fb{g}}}}f}}}{}{{j{c}}}Cf}{c{{h{e}}}{}{}}0{{}{{h{c}}}{}}0{dCd}0{{{d{{Fb{c}}}}{d{e}}{d{g}}d{d{i}}}{{h{Abf}}}Cf{}{}{}}>>","D":"ACh","p":[[1,"slice"],[1,"reference"],[6,"PCSError",41],[6,"Result",461],[10,"Borrow",462],[5,"Vec",463],[1,"tuple"],[0,"mut"],[1,"bool"],[10,"RngCore",464],[10,"CryptoRng",464],[1,"usize"],[17,"ProverParam"],[17,"VerifierParam"],[10,"StructuredReferenceString",0],[1,"str"],[6,"Option",465],[5,"Radix2EvaluationDomain",466],[10,"Error",467],[1,"unit"],[5,"Formatter",468],[8,"Result",468],[6,"TranscriptError",366,469],[6,"SerializationError",470],[5,"String",471],[5,"TypeId",472],[10,"Pairing",473],[17,"Item"],[5,"MultilinearKzgProof",67],[10,"Iterator",474],[10,"Send",475],[5,"MultilinearKzgBatchProof",67],[10,"Clone",476],[6,"Compress",477],[6,"Validate",477],[10,"Read",478],[10,"PartialEq",479],[10,"Debug",468],[10,"Hasher",480],[10,"Write",478],[5,"Commitment",145,481],[10,"AffineRepr",482],[17,"G1Affine"],[5,"MultilinearUniversalParams",145,483],[5,"MultilinearProverParam",145,483],[5,"MultilinearVerifierParam",145,483],[5,"UnivariateUniversalParams",145,484],[5,"UnivariateProverParam",145,484],[5,"UnivariateVerifierParam",145,484],[10,"Default",485],[8,"MLE",67],[5,"DenseMultilinearExtension",486],[10,"PrimeField",487],[5,"IOPTranscript",366],[1,"u8"],[10,"CanonicalSerialize",477],[5,"UnivariateKzgProof",407],[10,"PolynomialCommitmentScheme",0],[10,"UnivariatePCS",0],[5,"MultilinearKzgPCS",67],[5,"UnivariateKzgPCS",407]],"r":[[4,41],[145,481],[146,67],[147,67],[148,67],[149,67],[150,483],[151,483],[152,483],[153,41],[154,0],[155,0],[156,407],[157,407],[158,407],[159,484],[160,484],[161,484],[280,488],[303,488],[369,469]],"b":[[55,"impl-Debug-for-PCSError"],[56,"impl-Display-for-PCSError"],[57,"impl-From%3CTranscriptError%3E-for-PCSError"],[58,"impl-From%3CSerializationError%3E-for-PCSError"],[385,"impl-Display-for-TranscriptError"],[386,"impl-Debug-for-TranscriptError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADEBHwAFAAAAMgAJAD0AAAA/AAQASAABAE0ADQBcABIAcgADAH4ABQCFAAgAjwACAJMAAwCaAAUAowAHAK0AVQAHAQYAEQEAACABBwA6ARQAUwEbAHUBDwCJAQEAjgEJAJsBAACfAQcAqAEKALUBAgC8AQAAwQECAMUBBQDMAQEA"}],["jf_plonk",{"t":"EGPPNNNNNCNNNCNNNNNNNCNNNNNNNNCNCNNNNCCFKFNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNSPPPPPPPPPPPGPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNRFRRKRRNNCNNNNNNNNNNNNNNMNMNCNNNNMNNNFFNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIIFFFFFFFIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNOOOKFFFNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNN","n":["PlonkError","PlonkType","TurboPlonk","UltraPlonk","__clone_box","as_any","as_any_mut","borrow","borrow_mut","circuit","clone","clone_into","clone_to_uninit","constants","deref","deref_mut","drop","eq","equivalent","","","errors","fmt","from","hash","init","into","into_any","into_any_arc","into_any_rc","proof_system","to_owned","transcript","try_from","try_into","type_id","vzip","plonk_verifier","transcript","BatchProofVar","BatchableCircuit","VerifyingKeyVar","__clone_box","","aggregate_verify_keys","as_any","","as_any_mut","","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","drop","","eq","","equivalent","","","","","","fmt","","from","","init","","into","","into_any","","into_any_arc","","into_any_rc","","new","partial_verify_circuit","to_owned","","to_vec","try_from","","try_into","","type_id","","vzip","","RescueTranscriptVar","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_any","into_any_arc","into_any_rc","try_from","try_into","type_id","vzip","KECCAK256_STATE_SIZE","CircuitError","DivisionError","DomainCreationError","IndexError","IndexTooLarge","InvalidParameters","IoError","IteratorOutOfRange","NonNativeFieldOverflow","PCSError","ParameterError","PlonkError","PublicInputsDoNotMatch","RescueError","SerializationError","SnarkError","","SnarkLookupUnsupported","WrongProof","WrongQuotientPolyDegree","as_any","","as_any_mut","","as_error_source","borrow","","borrow_mut","","deref","","deref_mut","","drop","","fmt","","","","from","","","","","","","","init","","into","","into_any","","into_any_arc","","into_any_rc","","to_string","","try_from","","try_into","","type_id","","vzip","","Error","PlonkKzgSnark","Proof","ProvingKey","UniversalSNARK","UniversalSRS","VerifyingKey","as_any","as_any_mut","batch_arg","batch_prove","batch_verify","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_any","into_any_arc","into_any_rc","new","preprocess","","prove","","structs","try_from","try_into","type_id","universal_setup","verify","","verify_batch_proof","vzip","BatchArgument","Instance","__clone_box","aggregate_verify_keys","as_any","","as_any_mut","","batch_prove","borrow","","borrow_mut","","build_batch_proof_and_vks_for_test","circuit_mut_ref","clone","clone_into","clone_to_uninit","decide","deref","","deref_mut","","drop","","from","","init","","into","","into_any","","into_any_arc","into_any_rc","","partial_verify","setup_instance","to_owned","try_from","","try_into","","type_id","","verify_key_ref","vzip","","BatchProof","CommitKey","OpenKey","PlookupEvaluations","PlookupProof","PlookupProvingKey","PlookupVerifyingKey","Proof","ProofEvaluations","ProvingKey","UniversalSrs","VerifyingKey","__clone_box","","","","","","","","","as_any","","","","","","","","","as_any_mut","","","","","","","","","batch_check","","","","","","","","","beta_h","","borrow","","","","","","","","","borrow_mut","","","","","","","","","check","","","","","","","","","clone","","","","","","","","","clone_into","","","","","","","","","clone_to_uninit","","","","","","","","","convert_te_coordinates_to_scalars","create_variables","default","deref","","","","","","","","","deref_mut","","","","","","","","","deserialize","","deserialize_with_mode","","","","","","","","","domain_size","drop","","","","","","","","","dummy","","eq","","","","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","fmt","","","","","","","","","","","from","","","","","","","","","","from_str","","g","h","","hash","","","","","init","","","","","","","","","into","","","","","","","","","into_any","","","","","","","","","into_any_arc","","","","","","","","","into_any_rc","","","","","","","","","is_empty","is_merged","k","len","num_inputs","open_key","opening_proof","perm_next_eval","plookup_proof","plookup_vk","poly_evals","powers_of_g","","","powers_of_h","","prod_perm_poly_comm","selector_comms","serialize","","serialize_with_mode","","","","","","","","","serialized_size","","","","","","","","","shifted_opening_proof","sigma_comms","split_quot_poly_comms","tag","","to_owned","","","","","","","","","to_string","","try_from","","","","","","","","","","","","","","","try_into","","","","","","","","","type_id","","","","","","","","","vk","vzip","","","","","","","","","wire_sigma_evals","wires_evals","wires_poly_comms","PlonkTranscript","RescueTranscript","SolidityTranscript","StandardTranscript","append_commitment","","","append_commitments","append_field_elem","","","append_field_elems","append_message","","","","append_plookup_evaluations","","append_proof_evaluations","","append_vk_and_pub_input","","","as_any","","","as_any_mut","","","borrow","","","borrow_mut","","","deref","","","deref_mut","","","drop","","","from","","","get_challenge","","","","get_n_challenges","init","","","into","","","into_any","","","into_any_arc","","","into_any_rc","","","new","","","","try_from","","","try_into","","","type_id","","","vzip","",""],"q":[[0,"jf_plonk"],[37,"jf_plonk::circuit"],[39,"jf_plonk::circuit::plonk_verifier"],[100,"jf_plonk::circuit::transcript"],[118,"jf_plonk::constants"],[119,"jf_plonk::errors"],[186,"jf_plonk::proof_system"],[223,"jf_plonk::proof_system::batch_arg"],[271,"jf_plonk::proof_system::structs"],[631,"jf_plonk::transcript"],[714,"dyn_clone::sealed"],[715,"core::any"],[716,"jf_relation::constraint_system"],[717,"core::fmt"],[718,"core::result"],[719,"core::hash"],[720,"alloc::boxed"],[721,"alloc::sync"],[722,"alloc::rc"],[723,"alloc::vec"],[724,"jf_relation"],[725,"ark_ec::pairing"],[726,"jf_plonk::circuit::plonk_verifier::structs"],[727,"core::clone"],[728,"ark_ff::fields::prime"],[729,"core::cmp"],[730,"jf_relation::gadgets::ecc::conversion"],[731,"ark_ec::models::short_weierstrass"],[732,"ark_ec::models::short_weierstrass::affine"],[733,"jf_relation::gadgets::ecc"],[734,"jf_relation::gadgets::ultraplonk::mod_arith"],[735,"jf_rescue"],[736,"ark_ec::models::twisted_edwards"],[737,"core::error"],[738,"std::io::error"],[739,"jf_pcs::errors"],[740,"ark_serialize::error"],[741,"alloc::string"],[742,"rand_core"],[743,"core::option"],[744,"jf_plonk::proof_system::snark"],[745,"core::iter::traits::iterator"],[746,"core::marker"],[747,"ark_ff::fields"],[748,"serde::de"],[749,"ark_serialize"],[750,"std::io"],[751,"serde::ser"],[752,"tagged_base64"],[753,"jf_plonk::transcript::rescue"],[754,"jf_pcs::structs"],[755,"jf_plonk::transcript::solidity"],[756,"jf_plonk::transcript::standard"]],"i":"``l000000`000`0000000`00000000`0`0000`````BnBdBb2121212121212121212121222111212121212121211121121212121`K`0000000000000000`Eh000000000Ej`111`101010101101010101011001111111010101010101010101010Kb`00`00Gf0`000000000000001010`00011000``GhKd010100101`1111001010101010101001001010101101````````````G`HfFhHjHlFfHnClI`876543210876543210876543210GjGl:98765432:98765432:98765432:98765432:98765432:98765432387:98765432:98765432:8:987654323:9876543283:98765432:::999888777666555444333222::988765432:988765432:8010:9876:98765432:98765432:98765432:98765432:98765432833833:7:3:1Kf121;4;9;:9876543;:9876543;4;;9;:9876543;9;;;;:9998876543;:9876543;:98765436;:987654388;````JfJjJl02100021Jn3131321320320320320320320320320132013203203203203201320320320320320","f":"````{{bd}f}{b{{b{h}}}}{{{b{j}}}{{b{jh}}}}{b{{b{c}}}{}}{{{b{j}}}{{b{jc}}}{}}`{{{b{l}}}l}{{b{b{jc}}}f{}}{bf}`{n{{b{c}}}{}}{n{{b{jc}}}{}}{nf}{{{b{l}}{b{l}}}A`}{{b{b{c}}}A`{}}00`{{{b{l}}{b{jAb}}}{{Af{fAd}}}}{cc{}}{{{b{l}}{b{jc}}}fAh}{{}n}{{}c{}}{{{Aj{c}}}{{Aj{h}}}{}}{{{Al{c}}}{{Al{h}}}{}}{{{An{c}}}{{An{h}}}{}}`{bc{}}`{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bB`}7`````{{bd}f}0{{{b{jBb}}{b{{Bf{{Bd{c}}}}}}{b{{Bf{{Bd{c}}}}}}}{{Af{{Bh{{Bd{c}}}}Bj}}}Bl}{b{{b{h}}}}0{{{b{j}}}{{b{jh}}}}0{b{{b{c}}}{}}0{{{b{j}}}{{b{jc}}}{}}0{{{b{{Bn{c}}}}}{{Bn{c}}}{C`Cb}}{{{b{{Bd{c}}}}}{{Bd{c}}}{C`Bl}}{{b{b{jc}}}f{}}0{bf}0{n{{b{c}}}{}}0{n{{b{jc}}}{}}0{nf}0{{{b{{Bn{c}}}}{b{{Bn{c}}}}}A`{CdCb}}{{{b{{Bd{c}}}}{b{{Bd{c}}}}}A`{CdBl}}{{b{b{c}}}A`{}}00000{{{b{{Bn{c}}}}{b{jAb}}}Cf{ChCb}}{{{b{{Bd{c}}}}{b{jAb}}}Cf{ChBl}}{cc{}}0{{}n}0{{}c{}}0{{{Aj{c}}}{{Aj{h}}}{}}0{{{Al{c}}}{{Al{h}}}{}}0{{{An{c}}}{{An{h}}}{}}0{{{b{j{Cj{c}}}}{b{{Cl{g}}}}}{{Af{{Bd{g}}Bj}}}{CbCn}{{Db{}{{D`{c}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}Bl}}{{{b{j{Cj{c}}}}{b{{Dh{c}}}}{b{{Dh{c}}}}{b{{Bf{{Bd{g}}}}}}{b{{Bf{{Dj{c}}}}}}{b{{Bn{c}}}}Dl}{{Af{{E`{DnDn}}Bj}}}{EbCn}{{Db{}{{D`{}}}}Ed}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}Bl}}{bc{}}0{{{b{{Bd{c}}}}}{{Bh{Dl}}}Bl}{c{{Af{e}}}{}{}}0{{}{{Af{c}}}{}}0{bB`}0::`{b{{b{h}}}}{{{b{j}}}{{b{jh}}}}{b{{b{c}}}{}}{{{b{j}}}{{b{jc}}}{}}{n{{b{c}}}{}}{n{{b{jc}}}{}}{nf}{cc{}}{{}n}{{}c{}}{{{Aj{c}}}{{Aj{h}}}{}}{{{Al{c}}}{{Al{h}}}{}}{{{An{c}}}{{An{h}}}{}}?>=3`````````````````````<<;;{b{{b{Ef}}}};;::998877{{{b{Eh}}{b{jAb}}}Cf}0{{{b{Ej}}{b{jAb}}}Cf}0{ElEh}{BjEh}{EnEh}{F`Eh}{FbEh}={EjEh}>==<<;;::99{bFd}0{c{{Af{e}}}{}{}}0{{}{{Af{c}}}{}}0{bB`}0{{}c{}}0```````{b{{b{h}}}}{{{b{j}}}{{b{jh}}}}`{{{b{jc}}{b{{Bf{{b{e}}}}}}{b{{Bf{{b{{Ff{k}}}}}}}}}{{Af{{Fh{k}}Eh}}}{FjFl}Fn{EbCn}{{Db{}{{D`{}}}}}{{Bl{}{{D`{g}}{Dd{{Df{i}}}}}}}}{{{b{{Bf{{b{{Cl{g}}}}}}}}{b{{Bf{{b{Bf}}}}}}{b{{Bf{{b{{G`{g}}}}}}}}{b{{Bf{{Gd{{Bh{Gb}}}}}}}}}{{Af{fEh}}}{EbCn}{{Db{}{{D`{}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}}}{b{{b{c}}}{}}{{{b{j}}}{{b{jc}}}{}}{n{{b{c}}}{}}{n{{b{jc}}}{}}{nf}{cc{}}{{}n};{{{Aj{c}}}{{Aj{h}}}{}}{{{Al{c}}}{{Al{h}}}{}}{{{An{c}}}{{An{h}}}{}}{{}{{Gf{g}}}{EbCn}{{Db{}{{D`{c}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}}}{{{b{c}}{b{e}}}{{Af{{E`{gi}}k}}}{}Fn{}{}{}}0{{{b{jc}}{b{e}}{b{g}}{Gd{{Bh{Gb}}}}}{{Af{ik}}}{FjFl}Fn{}{}{}}0`{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bB`}{{n{b{jc}}}{{Af{eg}}}{FlFj}{}{}}{{{b{c}}{b{Bf}}{b{e}}{Gd{{Bh{Gb}}}}}{{Af{fg}}}{}{}{}}0{{{b{{Bf{{b{{Cl{g}}}}}}}}{b{{Bf{{b{Bf}}}}}}{b{{Fh{g}}}}}{{Af{fEh}}}{EbCn}{{Db{}{{D`{}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}}}{{}c{}}``{{bd}f}{{{b{{Bf{{b{{Cl{c}}}}}}}}{b{{Bf{{b{{Cl{c}}}}}}}}}{{Af{{Bh{{Cl{c}}}}Eh}}}Bl}{b{{b{h}}}}0{{{b{j}}}{{b{jh}}}}0{{{b{jc}}{b{{Bf{{Gh{i}}}}}}{b{{Bf{{Gh{i}}}}}}}{{Af{{Fh{i}}Eh}}}{FjFl}{EbCn}{{Db{}{{D`{}}}}}{{Bl{}{{D`{e}}{Dd{{Df{g}}}}}}}}{b{{b{c}}}{}}0{{{b{j}}}{{b{jc}}}{}}0{{{b{jc}}{b{{Gj{i}}}}n}{{Af{{E`{{Fh{i}}{Bh{{Cl{i}}}}{Bh{{Cl{i}}}}}}Eh}}}{FjFl}{EbCn}{{Db{}{{D`{e}}}}}{{Bl{}{{D`{e}}{Dd{{Df{g}}}}}}}}{{{b{j{Gh{c}}}}}{{b{jCj}}}Bl}{{{b{{Gh{c}}}}}{{Gh{c}}}{C`Bl}}{{b{b{jc}}}f{}}{bf}{{{b{{Gl{c}}}}}{{Af{A`Eh}}}Bl}{n{{b{c}}}{}}0{n{{b{jc}}}{}}0{nf}0{cc{}}0{{}n}0{{}c{}}0{{{Aj{c}}}{{Aj{h}}}{}}0{{{Al{c}}}{{Al{h}}}{}}{{{An{c}}}{{An{h}}}{}}0{{bb{b{{Bf{{Cl{g}}}}}}{b{Bf}}{b{{Fh{g}}}}}{{Af{E`Eh}}}{EbCn}{{Db{}{{D`{}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}}}{{{b{{Gj{g}}}}CjGn}{{Af{{Gh{g}}Eh}}}{EbCn}{{Db{}{{D`{c}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}}}{bc{}}{c{{Af{e}}}{}{}}0{{}{{Af{c}}}{}}0{bB`}0{{{b{{Gh{c}}}}}{{b{{Cl{c}}}}}Bl}::````````````{{bd}f}00000000{b{{b{h}}}}00000000{{{b{j}}}{{b{jh}}}}00000000{e{{Af{fF`}}}Bl{{Hb{}{{H`{{b{{G`{c}}}}}}}}Hd}}{e{{Af{fF`}}}Bl{{Hb{}{{H`{{b{{Hf{c}}}}}}}}Hd}}{e{{Af{fF`}}}Bl{{Hb{}{{H`{{b{{Fh{c}}}}}}}}Hd}}{e{{Af{fF`}}}Hh{{Hb{}{{H`{{b{{Hj{c}}}}}}}}Hd}}{e{{Af{fF`}}}Hh{{Hb{}{{H`{{b{{Hl{c}}}}}}}}Hd}}{e{{Af{fF`}}}Bl{{Hb{}{{H`{{b{{Ff{c}}}}}}}}Hd}}{e{{Af{fF`}}}Bl{{Hb{}{{H`{{b{{Hn{c}}}}}}}}Hd}}{e{{Af{fF`}}}Bl{{Hb{}{{H`{{b{{Cl{c}}}}}}}}Hd}}{e{{Af{fF`}}}Bl{{Hb{}{{H`{{b{{I`{c}}}}}}}}Hd}}``{b{{b{c}}}{}}00000000{{{b{j}}}{{b{jc}}}{}}00000000{{{b{{G`{c}}}}}{{Af{fF`}}}Bl}{{{b{{Hf{c}}}}}{{Af{fF`}}}Bl}{{{b{{Fh{c}}}}}{{Af{fF`}}}Bl}{{{b{{Hj{c}}}}}{{Af{fF`}}}Hh}{{{b{{Hl{c}}}}}{{Af{fF`}}}Hh}{{{b{{Ff{c}}}}}{{Af{fF`}}}Bl}{{{b{{Hn{c}}}}}{{Af{fF`}}}Bl}{{{b{{Cl{c}}}}}{{Af{fF`}}}Bl}{{{b{{I`{c}}}}}{{Af{fF`}}}Bl}{{{b{{G`{c}}}}}{{G`{c}}}{C`Bl}}{{{b{{Hf{c}}}}}{{Hf{c}}}{C`Bl}}{{{b{{Fh{c}}}}}{{Fh{c}}}{C`Bl}}{{{b{{Hj{c}}}}}{{Hj{c}}}{C`Hh}}{{{b{{Hl{c}}}}}{{Hl{c}}}{C`Hh}}{{{b{{Ff{c}}}}}{{Ff{c}}}{C`Bl}}{{{b{{Hn{c}}}}}{{Hn{c}}}{C`Bl}}{{{b{{Cl{c}}}}}{{Cl{c}}}{C`Bl}}{{{b{{I`{c}}}}}{{I`{c}}}{C`Bl}}{{b{b{jc}}}f{}}00000000{bf}00000000{{{b{{Cl{g}}}}}{{Bh{c}}}Cn{{Db{}{{D`{c}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}}}{{{b{{Fh{g}}}}{b{j{Cj{c}}}}n{Gd{c}}}{{Af{{Bn{c}}Eh}}}{EbCn}{{Db{}{{D`{c}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}Bl}}{{}{{Hj{c}}}Hh}{n{{b{c}}}{}}00000000{n{{b{jc}}}{}}00000000{c{{Af{{G`{e}}}}}IbBl}{c{{Af{{Fh{e}}}}}IbBl}{{cIdIf}{{Af{{G`{e}}F`}}}IhBl}{{cIdIf}{{Af{{Hf{e}}F`}}}IhBl}{{cIdIf}{{Af{{Fh{e}}F`}}}IhBl}{{cIdIf}{{Af{{Hj{e}}F`}}}IhHh}{{cIdIf}{{Af{{Hl{e}}F`}}}IhHh}{{cIdIf}{{Af{{Ff{e}}F`}}}IhBl}{{cIdIf}{{Af{{Hn{e}}F`}}}IhBl}{{cIdIf}{{Af{{Cl{e}}F`}}}IhBl}{{cIdIf}{{Af{{I`{e}}F`}}}IhBl}`{nf}00000000{n{{Fh{c}}}Bl}{{nn}{{Cl{c}}}Bl}{{{b{{G`{c}}}}{b{{G`{c}}}}}A`{CdBl}}{{{b{{Hf{c}}}}{b{{Hf{c}}}}}A`{CdBl}}{{{b{{Fh{c}}}}{b{{Fh{c}}}}}A`{CdBl}}{{{b{{Hj{c}}}}{b{{Hj{c}}}}}A`{CdHh}}{{{b{{Hl{c}}}}{b{{Hl{c}}}}}A`{CdHh}}{{{b{{Ff{c}}}}{b{{Ff{c}}}}}A`{CdBl}}{{{b{{Hn{c}}}}{b{{Hn{c}}}}}A`{CdBl}}{{{b{{Cl{c}}}}{b{{Cl{c}}}}}A`{CdBl}}{{{b{{I`{c}}}}{b{{I`{c}}}}}A`{CdBl}}{{b{b{c}}}A`{}}00000000000000000000000000{{{b{{G`{c}}}}{b{jAb}}}Cf{ChBl}}{{{b{{G`{c}}}}{b{jAb}}}CfBl}{{{b{{Hf{c}}}}{b{jAb}}}Cf{ChBl}}{{{b{{Fh{c}}}}{b{jAb}}}Cf{ChBl}}{{{b{{Fh{c}}}}{b{jAb}}}CfBl}{{{b{{Hj{c}}}}{b{jAb}}}Cf{ChHh}}{{{b{{Hl{c}}}}{b{jAb}}}Cf{ChHh}}{{{b{{Ff{c}}}}{b{jAb}}}Cf{ChBl}}{{{b{{Hn{c}}}}{b{jAb}}}Cf{ChBl}}{{{b{{Cl{c}}}}{b{jAb}}}Cf{ChBl}}{{{b{{I`{c}}}}{b{jAb}}}Cf{ChBl}}{cc{}}00{{{G`{c}}}{{Fh{c}}}Bl}111111{{{b{Ij}}}{{Af{{G`{c}}e}}}Bl{}}{{{b{Ij}}}{{Af{{Fh{c}}e}}}Bl{}}```{{{b{{G`{c}}}}{b{je}}}fBlAh}{{{b{{Hf{c}}}}{b{je}}}fBlAh}{{{b{{Fh{c}}}}{b{je}}}fBlAh}{{{b{{Hj{c}}}}{b{je}}}f{IlHh}Ah}{{{b{{Hl{c}}}}{b{je}}}f{IlHh}Ah}{{}n}00000000{{}c{}}00000000{{{Aj{c}}}{{Aj{h}}}{}}00000000{{{Al{c}}}{{Al{h}}}{}}00000000{{{An{c}}}{{An{h}}}{}}00000000{{{b{{Fh{c}}}}}A`Bl}``{{{b{{Fh{c}}}}}nBl}``````````````{{{b{{G`{c}}}}e}AfBlIn}{{{b{{Fh{c}}}}e}AfBlIn}{{{b{{G`{c}}}}eId}{{Af{fF`}}}BlJ`}{{{b{{Hf{c}}}}eId}{{Af{fF`}}}BlJ`}{{{b{{Fh{c}}}}eId}{{Af{fF`}}}BlJ`}{{{b{{Hj{c}}}}eId}{{Af{fF`}}}HhJ`}{{{b{{Hl{c}}}}eId}{{Af{fF`}}}HhJ`}{{{b{{Ff{c}}}}eId}{{Af{fF`}}}BlJ`}{{{b{{Hn{c}}}}eId}{{Af{fF`}}}BlJ`}{{{b{{Cl{c}}}}eId}{{Af{fF`}}}BlJ`}{{{b{{I`{c}}}}eId}{{Af{fF`}}}BlJ`}{{{b{{G`{c}}}}Id}nBl}{{{b{{Hf{c}}}}Id}nBl}{{{b{{Fh{c}}}}Id}nBl}{{{b{{Hj{c}}}}Id}nHh}{{{b{{Hl{c}}}}Id}nHh}{{{b{{Ff{c}}}}Id}nBl}{{{b{{Hn{c}}}}Id}nBl}{{{b{{Cl{c}}}}Id}nBl}{{{b{{I`{c}}}}Id}nBl}```{{}Fd}0{bc{}}00000000{bFd}0{Bh{{Af{{G`{e}}g}}}{{Db{}{{D`{}}{Jb{}}}}}{{Bl{}{{Dd{{Df{c}}}}}}}{}}{{{b{Jd}}}{{Af{{G`{c}}e}}}Bl{}}{Jd{{Af{{G`{c}}e}}}Bl{}}{c{{Af{e}}}{}{}}00{Jd{{Af{{Fh{c}}e}}}Bl{}}{{{b{Jd}}}{{Af{{Fh{c}}e}}}Bl{}}2{{{Bh{c}}}{{Af{{Hj{c}}e}}}Hh{}}33333{{}{{Af{c}}}{}}00000000{bB`}00000000`{{}c{}}00000000```````{{{b{j{Jf{c}}}}{b{{Bf{Gb}}}}{b{{Jh{g}}}}}{{Af{fEh}}}{EbCn}{{Db{}{{D`{c}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}}}{{{b{jJj}}{b{{Bf{Gb}}}}{b{{Jh{g}}}}}{{Af{fEh}}}Cb{{Db{}{{D`{c}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}}}{{{b{jJl}}{b{{Bf{Gb}}}}{b{{Jh{g}}}}}{{Af{fEh}}}{}{{Db{}{{D`{c}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}}}{{{b{jJl}}{b{{Bf{Gb}}}}{b{{Bf{{Jh{g}}}}}}}{{Af{fEh}}}{}{{Db{}{{D`{}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}}}{{{b{j{Jf{c}}}}{b{{Bf{Gb}}}}b}{{Af{fEh}}}{EbCn}}{{{b{jJj}}{b{{Bf{Gb}}}}b}{{Af{fEh}}}}{{{b{jJl}}{b{{Bf{Gb}}}}b}{{Af{fEh}}}}{{{b{jJl}}{b{{Bf{Gb}}}}{b{Bf}}}{{Af{fEh}}}}{{{b{jJl}}{b{{Bf{Gb}}}}{b{{Bf{Gb}}}}}{{Af{fEh}}}}{{{b{j{Jf{c}}}}{b{{Bf{Gb}}}}{b{{Bf{Gb}}}}}{{Af{fEh}}}{EbCn}}{{{b{jJj}}{b{{Bf{Gb}}}}{b{{Bf{Gb}}}}}{{Af{fEh}}}}{{{b{jJn}}{b{{Bf{Gb}}}}{b{{Bf{Gb}}}}}{{Af{fEh}}}}{{{b{j{Jf{c}}}}{b{Hl}}}{{Af{fEh}}}{EbCn}}{{{b{jJl}}{b{Hl}}}{{Af{fEh}}}}{{{b{j{Jf{c}}}}{b{Hj}}}{{Af{fEh}}}{EbCn}}{{{b{jJl}}{b{Hj}}}{{Af{fEh}}}}{{{b{j{Jf{c}}}}{b{{Cl{g}}}}{b{Bf}}}{{Af{fEh}}}{EbCn}{{Db{}{{D`{c}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}}}{{{b{jJj}}{b{{Cl{g}}}}{b{Bf}}}{{Af{fEh}}}Cb{{Db{}{{D`{c}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}}}{{{b{jJl}}{b{{Cl{g}}}}{b{Bf}}}{{Af{fEh}}}{}{{Db{}{{D`{c}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}}}{b{{b{h}}}}00{{{b{j}}}{{b{jh}}}}00{b{{b{c}}}{}}00{{{b{j}}}{{b{jc}}}{}}00{n{{b{c}}}{}}00{n{{b{jc}}}{}}00{nf}00{cc{}}00{{{b{jJl}}{b{{Bf{Gb}}}}}{{Af{Eh}}}}{{{b{j{Jf{c}}}}{b{{Bf{Gb}}}}}{{Af{Eh}}}{EbCn}}{{{b{jJj}}{b{{Bf{Gb}}}}}{{Af{Eh}}}}{{{b{jJn}}{b{{Bf{Gb}}}}}{{Af{Eh}}}}{{{b{jJl}}{b{{Bf{{b{{Bf{Gb}}}}}}}}}{{Af{BhEh}}}}{{}n}00{{}c{}}00{{{Aj{c}}}{{Aj{h}}}{}}00{{{Al{c}}}{{Al{h}}}{}}00{{{An{c}}}{{An{h}}}{}}00{{{b{{Bf{Gb}}}}}Jl}{{{b{{Bf{Gb}}}}}{{Jf{c}}}{EbCn}}{{{b{{Bf{Gb}}}}}Jj}{{{b{{Bf{Gb}}}}}Jn}{c{{Af{e}}}{}{}}00{{}{{Af{c}}}{}}00{bB`}00:::","D":"AFh","p":[[1,"reference"],[5,"Private",714],[1,"unit"],[10,"Any",715],[0,"mut"],[6,"PlonkType",0,716],[1,"usize"],[1,"bool"],[5,"Formatter",717],[5,"Error",717],[6,"Result",718],[10,"Hasher",719],[5,"Box",720],[5,"Arc",721],[5,"Rc",722],[5,"TypeId",715],[10,"BatchableCircuit",39],[5,"VerifyingKeyVar",39],[1,"slice"],[5,"Vec",723],[6,"CircuitError",724],[10,"Pairing",725],[5,"BatchProofVar",39,726],[10,"Clone",727],[10,"PrimeField",728],[10,"PartialEq",729],[8,"Result",717],[10,"Debug",717],[5,"PlonkCircuit",716],[5,"VerifyingKey",271],[10,"SWToTEConParam",730],[17,"BaseField"],[10,"SWCurveConfig",731],[17,"G1Affine"],[5,"Affine",732],[5,"TEPoint",733],[5,"FpElemVar",734],[8,"Variable",716],[5,"PointVariable",733],[1,"tuple"],[10,"RescueParameter",735],[10,"TECurveConfig",736],[10,"Error",737],[6,"PlonkError",119],[6,"SnarkError",119],[5,"Error",738],[6,"PCSError",739],[6,"SerializationError",740],[6,"RescueError",735],[5,"String",741],[5,"ProvingKey",271],[5,"BatchProof",271],[10,"CryptoRng",742],[10,"RngCore",742],[10,"Arithmetization",716],[5,"Proof",271],[1,"u8"],[6,"Option",743],[5,"PlonkKzgSnark",186,744],[5,"Instance",223],[8,"UniversalSrs",271],[8,"OpenKey",271],[6,"MergeableCircuitType",716],[17,"Item"],[10,"Iterator",745],[10,"Send",746],[5,"PlookupProof",271],[10,"Field",747],[5,"ProofEvaluations",271],[5,"PlookupEvaluations",271],[5,"PlookupProvingKey",271],[5,"PlookupVerifyingKey",271],[10,"Deserializer",748],[6,"Compress",749],[6,"Validate",749],[10,"Read",750],[1,"str"],[10,"Hash",719],[10,"Serializer",751],[10,"Write",750],[17,"ScalarField"],[5,"TaggedBase64",752],[5,"RescueTranscript",631,753],[5,"Commitment",754],[5,"SolidityTranscript",631,755],[10,"PlonkTranscript",631],[5,"StandardTranscript",631,756],[5,"RescueTranscriptVar",100],[10,"UniversalSNARK",186],[5,"BatchArgument",223],[8,"CommitKey",271]],"r":[[0,119],[1,716],[39,726],[187,744],[632,753],[633,755],[634,756]],"b":[[154,"impl-Debug-for-PlonkError"],[155,"impl-Display-for-PlonkError"],[156,"impl-Debug-for-SnarkError"],[157,"impl-Display-for-SnarkError"],[158,"impl-From%3CError%3E-for-PlonkError"],[159,"impl-From%3CCircuitError%3E-for-PlonkError"],[160,"impl-From%3CPCSError%3E-for-PlonkError"],[161,"impl-From%3CSerializationError%3E-for-PlonkError"],[162,"impl-From%3CRescueError%3E-for-PlonkError"],[164,"impl-From%3CSnarkError%3E-for-PlonkError"],[455,"impl-Debug-for-Proof%3CE%3E"],[456,"impl-Display-for-Proof%3CE%3E"],[458,"impl-Debug-for-BatchProof%3CE%3E"],[459,"impl-Display-for-BatchProof%3CE%3E"],[585,"impl-TryFrom%3CVec%3C%3CE+as+Pairing%3E::BaseField%3E%3E-for-Proof%3CE%3E"],[586,"impl-TryFrom%3C%26TaggedBase64%3E-for-Proof%3CE%3E"],[587,"impl-TryFrom%3CTaggedBase64%3E-for-Proof%3CE%3E"],[591,"impl-TryFrom%3CTaggedBase64%3E-for-BatchProof%3CE%3E"],[592,"impl-TryFrom%3C%26TaggedBase64%3E-for-BatchProof%3CE%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABYCPAABAAAABQAEAAsAAgAPAAYAFwAAABkAAQAcAAIAIAAAACIAAwArAAEALgAdAE4AAQBSAAUAWgABAF0ABwBmAAYAbgAAAHAABgCMABcApQAAAKcAAQCrAA8AwgABAMcABADNAAAAzwACANgAAgDdAAAA3wAAAOIAAADkAAMA6QADAO8AAgDzAAUA+wABAP8ABAAGAQYADgEBABwBIwBCATUAegEdAJkBCACkAS4A1gEAAN0BAQDiAQ0A+QEaACYCEwA9Ai0AbAIIAH0CAACAAgEAhwIBAIoCAACMAgEAjwIUAKkCAQCsAgIAsgIIAL8CCwA="}],["jf_prf",{"t":"RRRKRMN","n":["Error","Input","Output","PRF","Seed","evaluate","evaluate_with_rand_seed"],"q":[[0,"jf_prf"],[7,"core::result"],[8,"core::borrow"],[9,"rand_core"]],"i":"A`00`000","f":"`````{{ei}{{b{km}}}{}{{d{c}}}{}{{d{g}}}{}{}}{{{h{fc}}g}{{b{{j{ik}}m}}}{ln}{}{{d{e}}}{}{}{}}","D":"A`","p":[[6,"Result",7],[10,"Borrow",8],[0,"mut"],[1,"reference"],[1,"tuple"],[10,"RngCore",9],[10,"CryptoRng",9],[10,"PRF",0]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],["jf_relation",{"t":"GPPPPPPPPPPPPPPNNNNNCCNNNNNNCCNNNNNNNNNNSSSHKFKIGFGPPPPIINNNNMNNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNMNNNNNNNNNMNMNNNNNMNNNMNNNNNNNNMNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNMNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNMNNNNNNNNNMNMNNMNMNMNMNNNNMNNNNMNMNMNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNTFKTKTNNNNNNNNNNNCNNHNNNNNNMCHNNNNCNTKTFTKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHCFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFFFFFFFKFFFFFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["CircuitError","DomainCreationError","FieldAlgebraError","GateCheckFailure","IndexError","InternalError","LookupUnsupported","ModifyFinalizedCircuit","NotSupported","ParameterError","PubInputLenMismatch","UnfinalizedCircuit","UnsupportedCurve","VarIndexOutOfBound","WrongPlonkType","as_any","as_any_mut","as_error_source","borrow","borrow_mut","constants","constraint_system","deref","deref_mut","drop","fmt","","from","gadgets","gates","init","into","into_any","into_any_arc","into_any_rc","to_string","try_from","try_into","type_id","vzip","GATE_WIDTH","N_MUL_SELECTORS","N_TURBO_PLONK_SELECTORS","compute_coset_representatives","Arithmetization","BoolVar","Circuit","GateId","MergeableCircuitType","PlonkCircuit","PlonkType","TurboPlonk","TypeA","TypeB","UltraPlonk","Variable","WireId","__clone_box","","","","add","","add_constant","add_constant_gate","add_gate","","add_range_check_variable","as_any","","","","as_any_mut","","","","binary_emulated_sw_point_vars_select","binary_emulated_te_point_vars_select","binary_point_vars_select","borrow","","","","borrow_mut","","","","check_circuit_satisfiability","","check_var_bound","check_vars_bound","clone","","","","clone_into","","","","clone_to_uninit","","","","compute_extended_permutation_polynomials","","compute_key_table_polynomial","","compute_lookup_prod_polynomial","","compute_lookup_sorted_vec_polynomials","","compute_merged_lookup_table","","compute_prod_permutation_polynomial","","compute_pub_input_polynomial","","compute_q_dom_sep_polynomial","","compute_range_table_polynomial","","compute_selector_polynomials","","compute_table_dom_sep_polynomial","","compute_wire_polynomials","","conditional_select","conditional_select_emulated","create_boolean_variable","create_constant_emulated_sw_point_variable","create_constant_emulated_te_point_variable","create_constant_emulated_variable","create_constant_point_variable","create_constant_variable","","create_emulated_sw_point_variable","create_emulated_te_point_variable","create_emulated_variable","create_point_variable","create_public_boolean_variable","create_public_emulated_sw_point_variable","create_public_emulated_te_point_variable","create_public_emulated_variable","create_public_point_variable","create_public_variable","","create_table_and_lookup_variables","create_variable","","default","deref","","","","deref_mut","","","","drop","","","","ecc_add","emulated_add","emulated_add_constant","emulated_add_constant_gate","emulated_add_gate","emulated_mul","emulated_mul_constant","emulated_mul_constant_gate","emulated_mul_gate","emulated_sub","emulated_sub_constant","emulated_sw_ecc_add","emulated_sw_ecc_add_gate","emulated_sw_point_witness","emulated_te_ecc_add","emulated_te_ecc_add_gate","emulated_te_point_witness","emulated_witness","enforce_bool","","enforce_constant","","enforce_emulated_sw_point_equal","enforce_emulated_te_point_equal","enforce_emulated_var_equal","enforce_equal","","enforce_false","enforce_geq","enforce_geq_constant","enforce_gt","enforce_gt_constant","enforce_in_range","enforce_leq","enforce_leq_constant","enforce_lt","enforce_lt_constant","enforce_on_curve","enforce_point_equal","enforce_true","eq","","equivalent","","","","","","eval_domain_size","","false_var","finalize_for_arithmetization","finalize_for_mergeable_circuit","fixed_base_scalar_mul","fmt","","","","from","","","","","gen_quad_poly","glv_mul","hash","","init","","","","insert_gate","into","","","","into_any","","","","into_any_arc","","","into_any_rc","","","","inverse_point","is_emulated_sw_point_equal","is_emulated_te_point_equal","is_emulated_var_equal","is_emulated_var_zero","is_equal","is_geq","is_geq_constant","is_gt","is_gt_constant","is_in_range","is_leq","is_leq_constant","is_lt","is_lt_constant","is_neutral_point","is_point_equal","is_zero","lc","lc_gate","logic_and","logic_and_all","logic_neg","logic_or","logic_or_gate","merge","mod_add","mod_add_constant","mod_add_vec","mod_mul","mod_mul_constant","mod_negate","msm","msm_with_var_scalar_length","mul","","mul_add","mul_add_gate","mul_constant","mul_constant_gate","mul_gate","","neutral_point_variable","new_turbo_plonk","new_ultra_plonk","non_native_linear_gen","non_native_power_11_gate","non_native_power_11_gen","non_native_power_5_gen","non_zero_gate","num_gates","","num_inputs","","num_range_blocks","num_vars","","num_wire_types","","one","","pad_gates","","point_witness","power_11_gate","power_11_gen","public_input","","quad_poly_gate","range_bit_len","range_size","set_variable_public","","srs_size","","sub","","sub_gate","","sum","support_lookup","","to_owned","","","","true_var","truncate","truncate_gate","try_from","","","","try_into","","","","type_id","","","","unpack","variable_base_binary_scalar_mul","variable_base_scalar_mul","vzip","","","","witness","","witness_mut","zero","","B","EmulatedVariable","EmulationConfig","NUM_LIMBS","SerializableEmulatedStruct","T","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","ecc","fmt","from","from_emulated_field","init","into","into_any","into_any_arc","into_any_rc","native_vars","serialize_to_native_elements","test_utils","to_emulated_field","to_owned","try_from","try_into","type_id","ultraplonk","vzip","BETA","MultiScalarMultiplicationCircuit","NEG_ALPHA","PointVariable","S","SWToTEConParam","TEPoint","__clone_box","","as_any","","as_any_mut","","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","default","deref","","deref_mut","","drop","","emulated","eq","","equivalent","","","","","","fmt","","from","","","","","get_x","","get_y","","init","","into","","into_any","","into_any_arc","","into_any_rc","","inverse","msm","msm_with_var_scalar_length","serialize_to_native_elements","to_owned","","try_from","","try_into","","type_id","","vzip","","EmulatedSWPointVariable","EmulatedTEPointVariable","SWPoint","__clone_box","","","as_any","","","as_any_mut","","","batch_check","borrow","","","borrow_mut","","","check","clone","","","clone_into","","","clone_to_uninit","","","default","deref","","","deref_mut","","","deserialize_with_mode","drop","","","eq","equivalent","","","fmt","","","from","","","","init","","","into","","","into_any","","","into_any_arc","","","into_any_rc","","","serialize_to_native_elements","serialize_with_mode","serialized_size","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","test_variable_independence_for_circuit","mod_arith","FpElem","FpElemVar","__clone_box","","as_any","","as_any_mut","","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","components","","convert_to_var","default","","deref","","deref_mut","","drop","","enforce_equal","eq","","equivalent","","","","","","field_elem","fmt","","from","","init","","into","","into_any","","into_any_arc","","into_any_rc","","new","new_from_field_element","new_from_fp_elem","new_unchecked","one","param_m","","to_owned","","try_from","","try_into","","two_power_m","","type_id","","vzip","","witness","witness_fp_elem","zero","AdditionGate","BoolGate","CondSelectGate","ConstantAdditionGate","ConstantGate","ConstantMultiplicationGate","CurvePointXAdditionGate","CurvePointYAdditionGate","EdwardsCurveEquationGate","EqualityGate","FifthRootGate","Gate","IoGate","LinCombGate","LogicOrGate","LogicOrOutputGate","LookupGate","MulAddGate","MultiplicationGate","PaddingGate","QuadPolyGate","QuaternaryPointSelectXGate","QuaternaryPointSelectYGate","SubtractionGate","__clone_box","","","","","","","","","","","","","","","","","","","","","","","as_any","","","","","","","","","","","","","","","","","","","","","","","as_any_mut","","","","","","","","","","","","","","","","","","","","","","","borrow","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","deref","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","downcast","downcast_mut","downcast_rc","downcast_ref","drop","","","","","","","","","","","","","","","","","","","","","","","fmt","","","","","","","","","","","","","from","","","","","","","","","","","","","","","","","","","","","","","init","","","","","","","","","","","","","","","","","","","","","","","into","","","","","","","","","","","","","","","","","","","","","","","into_any","","","","","","","","","","","","","","","","","","","","","","","into_any_arc","","","","","","","","","","","","","","","","","","","","","","","into_any_rc","","","","","","","","","","","","","","","","","","","","","","","is","name","","","","","","","","","","","","","","","","","","","","","","","","q_c","","","","","","","q_dom_sep","","q_ecc","","","","q_hash","","q_lc","","","","","","","","","","","","","q_lookup","","q_mul","","","","","","","","","","","","","q_o","","","","","","","","","","","","","","","","","","","","table_dom_sep","","table_key","","to_owned","","","","","","","","","","","","","","","","","","","","","","","try_from","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","vzip","","","","","","","","","","","","","","","","","","","","","",""],"q":[[0,"jf_relation"],[40,"jf_relation::constants"],[44,"jf_relation::constraint_system"],[363,"jf_relation::gadgets"],[399,"jf_relation::gadgets::ecc"],[473,"jf_relation::gadgets::ecc::emulated"],[557,"jf_relation::gadgets::test_utils"],[558,"jf_relation::gadgets::ultraplonk"],[559,"jf_relation::gadgets::ultraplonk::mod_arith"],[634,"jf_relation::gates"],[1273,"core::any"],[1274,"core::error"],[1275,"core::fmt"],[1276,"alloc::boxed"],[1277,"alloc::sync"],[1278,"alloc::rc"],[1279,"alloc::string"],[1280,"core::result"],[1281,"core::option"],[1282,"alloc::vec"],[1283,"ark_ff::fields::prime"],[1284,"dyn_clone::sealed"],[1285,"ark_ff::fields::fft_friendly"],[1286,"jf_relation::gadgets::ecc::emulated::short_weierstrass"],[1287,"jf_relation::gadgets::emulated"],[1288,"jf_relation::gadgets::ecc::emulated::twisted_edwards"],[1289,"ark_ff::fields"],[1290,"core::clone"],[1291,"ark_poly::polynomial::univariate::dense"],[1292,"ark_ec::models::twisted_edwards::affine"],[1293,"ark_ec::models::twisted_edwards"],[1294,"core::hash"],[1295,"core::cmp"],[1296,"ark_ec::models::twisted_edwards::group"],[1297,"ark_ec::models::short_weierstrass::affine"],[1298,"jf_relation::gadgets::ecc::conversion"],[1299,"ark_ec::models::short_weierstrass"],[1300,"jf_relation::gadgets::ecc::msm"],[1301,"ark_serialize::error"],[1302,"core::iter::traits::iterator"],[1303,"core::marker"],[1304,"ark_serialize"],[1305,"std::io"],[1306,"core::default"],[1307,"jf_relation::gates::arithmetic"],[1308,"jf_relation::gates::ecc"],[1309,"jf_relation::gates::logic"],[1310,"jf_relation::gates::lookup"]],"i":"`n000000000000000000``000000``0000000000```````````CnD`01``C`21BlBh11101124312431111243124310111243124312431Dd202020202020202020202022212222122222122221221223542354235422222222222222222221212222122222222222222545554440212223542Bj465333654653346534653465465333333333333333333333333333333333332333332333333333232332323232333323333231323233234653233465346534653333465323323Cd``0`0Dj0000000000`00`000000Fd``1111`1Fl`0`0``E`Ch101010101010101101010`101110001011110101010101010101G`022121212121```DnCbCf210210221021022102102102210210221022222102210210210210210210222210210210210210````FbF`10101010101010100101010100101110001101010101010101000010101010101010000````````````````````````HdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`HdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`HdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`HdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`HdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`HdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`HdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`HdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`HdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`HdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`En000HdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`EnHdHfHhHjHlHnI`IbIdIf<;9876543210IhIjIlInJ`JbJdJfJhJjJlJnK`HdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`HdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`HdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`HdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`HdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`En0HdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`EnHdHh?;76242;:92If3Hf2HjHnIbIhIjInJfJhJjJl>Jn?HlI`9Il8J`JbJd:987EnHdHfHhHj:Hn:IbIdIfIhIj>In=<JfJhJl>Jn?0>=<;Hl;I`;:987Il7J`JbJd98Jj87K`HdHfHhHj;Hn;IbIdIfIhIj?In?>=JfJh>JlJn?>=<;Hl;I`;:987Il7J`JbJd98Jj87K`HdHfHhHj;Hn;IbIdIfIhIj?In?>=JfJh>JlJn?>=<;Hl;I`;:987Il7J`JbJd98Jj87K`","f":"```````````````{b{{b{d}}}}{{{b{f}}}{{b{fd}}}}{b{{b{h}}}}{b{{b{c}}}{}}{{{b{f}}}{{b{fc}}}{}}``{j{{b{c}}}{}}{j{{b{fc}}}{}}{jl}{{{b{n}}{b{fA`}}}Ab}0{cc{}}``{{}j}{{}c{}}{{{Ad{c}}}{{Ad{d}}}{}}{{{Af{c}}}{{Af{d}}}{}}{{{Ah{c}}}{{Ah{d}}}{}}{bAj}{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{bAn}7```{{j{B`{j}}}{{Bb{c}}}Bd}`````````````{{bBf}l}000{{{b{fBh}}BjBj}{{Al{Bjn}}}}{{{b{f{Bl{c}}}}BjBj}{{Al{Bjn}}}Bn}{{{b{f{Bl{c}}}}Bj{b{c}}}{{Al{Bjn}}}Bd}{{{b{f{Bl{c}}}}BjcBj}{{Al{ln}}}Bd}{{{b{fBh}}BjBjBj}{{Al{ln}}}}{{{b{f{Bl{c}}}}BjBjBj}{{Al{ln}}}Bn}{{{b{f{Bl{c}}}}Bj}{{Al{ln}}}Bn}{b{{b{d}}}}000{{{b{f}}}{{b{fd}}}}000{{{b{f{Bl{c}}}}C`{b{{Cb{e}}}}{b{{Cb{e}}}}}{{Al{{Cb{e}}n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}C`{b{{Cf{e}}}}{b{{Cf{e}}}}}{{Al{{Cf{e}}n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}C`{b{Ch}}{b{Ch}}}{{Al{Chn}}}Bd}{b{{b{c}}}{}}000{{{b{f}}}{{b{fc}}}{}}000{{{b{Bh}}{b{{Cj{c}}}}}{{Al{ln}}}Cl}{{{b{{Bl{c}}}}{b{{Cj{c}}}}}{{Al{ln}}}Bn}{{{b{{Bl{c}}}}Bj}{{Al{ln}}}Bn}{{{b{{Bl{c}}}}{b{{Cj{Bj}}}}}{{Al{ln}}}Bn}{{{b{C`}}}C`}{{{b{Cn}}}Cn}{{{b{D`}}}D`}{{{b{{Bl{c}}}}}{{Bl{c}}}{BnDb}}{{b{b{fc}}}l{}}000{bl}000{{{b{Dd}}}{{Al{{Bb{{Df{c}}}}n}}}Bn}{{{b{{Bl{c}}}}}{{Al{{Bb{{Df{c}}}}n}}}Bd}{{{b{Dd}}}{{Al{{Df{c}}n}}}Bn}{{{b{{Bl{c}}}}}{{Al{{Df{c}}n}}}Bd}{{{b{Dd}}{b{c}}{b{c}}{b{c}}{b{{Cj{c}}}}{b{{Cj{c}}}}}{{Al{{Df{c}}n}}}Bn}{{{b{{Bl{c}}}}{b{c}}{b{c}}{b{c}}{b{{Cj{c}}}}{b{{Cj{c}}}}}{{Al{{Df{c}}n}}}Bd}{{{b{Dd}}c{b{{Cj{c}}}}}{{Al{{Dh{{Bb{c}}{Df{c}}{Df{c}}}}n}}}Bn}{{{b{{Bl{c}}}}c{b{{Cj{c}}}}}{{Al{{Dh{{Bb{c}}{Df{c}}{Df{c}}}}n}}}Bd}{{{b{Dd}}c}{{Al{{Bb{c}}n}}}Bn}{{{b{{Bl{c}}}}c}{{Al{{Bb{c}}n}}}Bd}{{{b{Dd}}{b{c}}{b{c}}}{{Al{{Df{c}}n}}}Bn}{{{b{{Bl{c}}}}{b{c}}{b{c}}}{{Al{{Df{c}}n}}}Bd}989898;:98;:{{{b{f{Bl{c}}}}C`BjBj}{{Al{Bjn}}}Bd}{{{b{f{Bl{c}}}}C`{b{{Dj{e}}}}{b{{Dj{e}}}}}{{Al{{Dj{e}}n}}}Bd{{Cd{c}}}}{{{b{fBh}}Dl}{{Al{C`n}}}}{{{b{f{Bl{c}}}}{Dn{e}}}{{Al{{Cb{e}}n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}{E`{e}}}{{Al{{Cf{e}}n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}e}{{Al{{Dj{e}}n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}{E`{c}}}{{Al{Chn}}}Bd}{{{b{fBh}}c}{{Al{Bjn}}}Cl}{{{b{f{Bl{c}}}}c}{{Al{Bjn}}}Bn}54326543210{{{b{f{Bl{c}}}}{b{{Cj{{Dh{BjBjBj}}}}}}{b{{Cj{{Dh{BjBj}}}}}}}{{Al{ln}}}Bd}21{{}{{Bl{c}}}Bn}{j{{b{c}}}{}}000{j{{b{fc}}}{}}000{jl}000{{{b{f{Bl{c}}}}{b{Ch}}{b{Ch}}}{{Al{Chn}}}Bd}{{{b{f{Bl{c}}}}{b{{Dj{e}}}}{b{{Dj{e}}}}}{{Al{{Dj{e}}n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}{b{{Dj{e}}}}e}{{Al{{Dj{e}}n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}{b{{Dj{e}}}}e{b{{Dj{e}}}}}{{Al{ln}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}{b{{Dj{e}}}}{b{{Dj{e}}}}{b{{Dj{e}}}}}{{Al{ln}}}Bd{{Cd{c}}}}321032{{{b{f{Bl{c}}}}{b{{Cb{e}}}}{b{{Cb{e}}}}e}{{Al{{Cb{e}}n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}{b{{Cb{e}}}}{b{{Cb{e}}}}{b{{Cb{e}}}}e}{{Al{ln}}}Bd{{Cd{c}}}}{{{b{{Bl{c}}}}{b{{Cb{e}}}}}{{Al{{Dn{e}}n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}{b{{Cf{e}}}}{b{{Cf{e}}}}e}{{Al{{Cf{e}}n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}{b{{Cf{e}}}}{b{{Cf{e}}}}{b{{Cf{e}}}}e}{{Al{ln}}}Bd{{Cd{c}}}}{{{b{{Bl{c}}}}{b{{Cf{e}}}}}{{Al{{E`{e}}n}}}Bd{{Cd{c}}}}{{{b{{Bl{c}}}}{b{{Dj{e}}}}}{{Al{en}}}Bd{{Cd{c}}}}{{{b{fBh}}Bj}{{Al{ln}}}}{{{b{f{Bl{c}}}}Bj}{{Al{ln}}}Bn}{{{b{fBh}}Bjc}{{Al{ln}}}Cl}{{{b{f{Bl{c}}}}Bjc}{{Al{ln}}}Bn}{{{b{f{Bl{c}}}}{b{{Cb{e}}}}{b{{Cb{e}}}}}{{Al{ln}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}{b{{Cf{e}}}}{b{{Cf{e}}}}}{{Al{ln}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}{b{{Dj{e}}}}{b{{Dj{e}}}}}{{Al{ln}}}Bd{{Cd{c}}}}{{{b{fBh}}BjBj}{{Al{ln}}}}{{{b{f{Bl{c}}}}BjBj}{{Al{ln}}}Bn}{{{b{f{Bl{c}}}}Bj}{{Al{ln}}}Bd}{{{b{f{Bl{c}}}}BjBj}{{Al{ln}}}{BdBd}}{{{b{f{Bl{c}}}}Bjc}{{Al{ln}}}{BdBd}}10{{{b{f{Bl{c}}}}Bjj}{{Al{ln}}}Bd}2121{{{b{f{Bl{c}}}}{b{Ch}}}{{Al{ln}}}Bd}{{{b{f{Bl{c}}}}{b{Ch}}{b{Ch}}}{{Al{ln}}}Bd}5{{{b{Cn}}{b{Cn}}}Dl}{{{b{D`}}{b{D`}}}Dl}{{b{b{c}}}Dl{}}00000{{{b{Dd}}}{{Al{jn}}}}{{{b{{Bl{c}}}}}{{Al{jn}}}Bd}{{{b{Bh}}}C`}{{{b{f{Bl{c}}}}}{{Al{ln}}}Bd}{{{b{f{Bl{c}}}}D`}{{Al{ln}}}Bd}{{{b{f{Bl{c}}}}Bj{b{{Eb{e}}}}}{{Al{Chn}}}Bd{{Ef{}{{Ed{c}}}}}}{{{b{C`}}{b{fA`}}}Ab}{{{b{Cn}}{b{fA`}}}Ab}{{{b{D`}}{b{fA`}}}Ab}{{{b{{Bl{c}}}}{b{fA`}}}Ab{BnEh}}{C`Bj}{cc{}}000{{{b{f{Bl{c}}}}{b{{Ej{Bj}}}}{b{{Ej{c}}}}{b{{Ej{c}}}}c}{{Al{Bjn}}}Bd}{{{b{f{Bl{c}}}}Bj{b{Ch}}}{{Al{Chn}}}Bd}{{{b{Cn}}{b{fc}}}lEl}{{{b{D`}}{b{fc}}}lEl}{{}j}000{{{b{f{Bl{c}}}}{b{{Ej{Bj}}}}{Ad{En}}}{{Al{ln}}}Bn}{{}c{}}000{{{Ad{c}}}{{Ad{d}}}{}}000{{{Af{c}}}{{Af{d}}}{}}00{{{Ah{c}}}{{Ah{d}}}{}}000{{{b{f{Bl{c}}}}{b{Ch}}}{{Al{Chn}}}Bd}{{{b{f{Bl{c}}}}{b{{Cb{e}}}}{b{{Cb{e}}}}}{{Al{C`n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}{b{{Cf{e}}}}{b{{Cf{e}}}}}{{Al{C`n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}{b{{Dj{e}}}}{b{{Dj{e}}}}}{{Al{C`n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}{b{{Dj{e}}}}}{{Al{C`n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}BjBj}{{Al{C`n}}}Bd}{{{b{f{Bl{c}}}}BjBj}{{Al{C`n}}}{BdBd}}{{{b{f{Bl{c}}}}Bjc}{{Al{C`n}}}{BdBd}}10{{{b{f{Bl{c}}}}Bjj}{{Al{C`n}}}Bd}2121{{{b{f{Bl{c}}}}{b{Ch}}}{{Al{C`n}}}Bd}{{{b{f{Bl{c}}}}{b{Ch}}{b{Ch}}}{{Al{C`n}}}Bd}{{{b{f{Bl{c}}}}Bj}{{Al{C`n}}}Bd}{{{b{f{Bl{c}}}}{b{{Ej{Bj}}}}{b{{Ej{c}}}}}{{Al{Bjn}}}Bd}{{{b{f{Bl{c}}}}{b{{Ej{Bj}}}}{b{{Ej{c}}}}}{{Al{ln}}}Bd}{{{b{f{Bl{c}}}}C`C`}{{Al{C`n}}}Bd}{{{b{f{Bl{c}}}}{b{{Cj{C`}}}}}{{Al{C`n}}}Bd}{{{b{f{Bl{c}}}}C`}{{Al{C`n}}}Bd}2{{{b{f{Bl{c}}}}C`C`}{{Al{ln}}}Bd}{{{b{{Bl{c}}}}{b{{Bl{c}}}}}{{Al{{Bl{c}}n}}}Bd}{{{b{f{Bl{c}}}}{b{{F`{c}}}}{b{{F`{c}}}}{b{{Fb{c}}}}}{{Al{{F`{c}}n}}}Bd}{{{b{f{Bl{c}}}}{b{{F`{c}}}}{b{{Fb{c}}}}{b{{Fb{c}}}}}{{Al{{F`{c}}n}}}Bd}{{{b{f{Bl{c}}}}{b{{Cj{{F`{c}}}}}}{b{{Fb{c}}}}}{{Al{{F`{c}}n}}}Bd}21{{{b{f{Bl{c}}}}{b{{F`{c}}}}{b{c}}}{{Al{{F`{c}}n}}}Bd}{{{b{f{Bl{c}}}}{b{{Cj{Ch}}}}{b{{Cj{Bj}}}}}{{Al{Chn}}}Bd}{{{b{f{Bl{c}}}}{b{{Cj{Ch}}}}{b{{Cj{Bj}}}}j}{{Al{Chn}}}Bd}{{{b{fBh}}BjBj}{{Al{Bjn}}}}{{{b{f{Bl{c}}}}BjBj}{{Al{Bjn}}}Bn}>={{{b{f{Bl{c}}}}Bj{b{c}}}{{Al{Bjn}}}Bd}{{{b{f{Bl{c}}}}BjcBj}{{Al{ln}}}Bd}{{{b{fBh}}BjBjBj}{{Al{ln}}}}{{{b{f{Bl{c}}}}BjBjBj}{{Al{ln}}}Bn}{{{b{{Bl{c}}}}}ChBd}{{}{{Bl{c}}}Bn}{j{{Bl{c}}}Bn}{{{b{f{Bl{c}}}}{b{{Cj{{F`{c}}}}}}{b{{Cj{{Fb{c}}}}}}{b{{Fb{c}}}}}{{Al{{F`{c}}n}}}Bd}{{{b{f{Bl{c}}}}{b{{F`{c}}}}{b{{F`{c}}}}}{{Al{ln}}}Bd}{{{b{f{Bl{c}}}}{b{{F`{c}}}}}{{Al{{F`{c}}n}}}Bd}0{{{b{f{Bl{c}}}}Bj}{{Al{ln}}}Bd}{{{b{Bh}}}j}{{{b{{Bl{c}}}}}jBn}10{{{b{{Bl{c}}}}}{{Al{jn}}}Bd}2121{{{b{Bh}}}Bj}{{{b{{Bl{c}}}}}BjBn}{{{b{fBh}}j}l}{{{b{f{Bl{c}}}}j}lBn}{{{b{{Bl{c}}}}{b{Ch}}}{{Al{{E`{c}}n}}}Bd}{{{b{f{Bl{c}}}}BjBj}{{Al{ln}}}Bd}{{{b{f{Bl{c}}}}Bj}{{Al{Bjn}}}Bd}{{{b{Bh}}}{{Al{{Bb{c}}n}}}Cl}{{{b{{Bl{c}}}}}{{Al{{Bb{c}}n}}}Bn}{{{b{f{Bl{c}}}}{b{{Ej{Bj}}}}{b{{Ej{c}}}}{b{{Ej{c}}}}cc}{{Al{ln}}}Bd}{{{b{{Bl{c}}}}}{{Al{jn}}}Bn}0{{{b{fBh}}Bj}{{Al{ln}}}}{{{b{f{Bl{c}}}}Bj}{{Al{ln}}}Bn}{{{b{Dd}}}{{Al{jn}}}}>{{{b{fBh}}BjBj}{{Al{Bjn}}}}{{{b{f{Bl{c}}}}BjBj}{{Al{Bjn}}}Bn}{{{b{fBh}}BjBjBj}{{Al{ln}}}}{{{b{f{Bl{c}}}}BjBjBj}{{Al{ln}}}Bn}{{{b{f{Bl{c}}}}{b{{Cj{Bj}}}}}{{Al{Bjn}}}Bd}{{{b{Bh}}}Dl}{{{b{{Bl{c}}}}}DlBn}{bc{}}000{{{b{Bh}}}C`}{{{b{f{Bl{c}}}}Bjj}{{Al{Bjn}}}Bd}{{{b{f{Bl{c}}}}BjBjj}{{Al{ln}}}Bd}{c{{Al{e}}}{}{}}000{{}{{Al{c}}}{}}000{bAn}000{{{b{f{Bl{c}}}}Bjj}{{Al{{Bb{C`}}n}}}Bd}{{{b{f{Bl{c}}}}{b{{Cj{C`}}}}{b{Ch}}}{{Al{Chn}}}Bd}{{{b{f{Bl{c}}}}Bj{b{Ch}}}{{Al{Chn}}}Bd}{{}c{}}000{{{b{Bh}}Bj}{{Al{cn}}}Cl}{{{b{{Bl{c}}}}Bj}{{Al{cn}}}Bn}{{{b{f{Bl{c}}}}Bj}{{b{fc}}}Bn}{{{b{Bh}}}Bj}{{{b{{Bl{c}}}}}BjBn}``````{{bBf}l}{b{{b{d}}}}{{{b{f}}}{{b{fd}}}}{b{{b{c}}}{}}{{{b{f}}}{{b{fc}}}{}}{{{b{{Dj{c}}}}}{{Dj{c}}}{DbBd}}{{b{b{fc}}}l{}}{bl}{j{{b{c}}}{}}{j{{b{fc}}}{}}{jl}`{{{b{{Dj{c}}}}{b{fA`}}}Ab{EhBd}}{cc{}}{e{{Bb{c}}}Bd{{Cd{c}}}}{{}j}{{}c{}}{{{Ad{c}}}{{Ad{d}}}{}}{{{Af{c}}}{{Af{d}}}{}}{{{Ah{c}}}{{Ah{d}}}{}}{{{b{{Dj{c}}}}}{{Bb{Bj}}}Bd}{{{b{Fd}}}{{Bb{c}}}Bd}`{{{b{{Cj{c}}}}}{{Al{en}}}Bd{{Cd{c}}}}{bc{}}{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{bAn}`:```````{{bBf}l}0{b{{b{d}}}}0{{{b{f}}}{{b{fd}}}}0{b{{b{c}}}{}}0{{{b{f}}}{{b{fc}}}{}}0{{{b{{E`{c}}}}}{{E`{c}}}{DbBd}}{{{b{Ch}}}Ch}{{b{b{fc}}}l{}}0{bl}0{{}{{E`{c}}}Bd}{j{{b{c}}}{}}0{j{{b{fc}}}{}}0{jl}0`{{{b{{E`{c}}}}{b{{E`{c}}}}}Dl{FfBd}}{{{b{Ch}}{b{Ch}}}Dl}{{b{b{c}}}Dl{}}00000{{{b{{E`{c}}}}{b{fA`}}}Ab{EhBd}}{{{b{Ch}}{b{fA`}}}Ab}{{{Eb{e}}}{{E`{c}}}Bd{{Ef{}{{Ed{c}}}}}}{{{Fh{e}}}{{E`{c}}}Bd{{Ef{}{{Ed{c}}}}}}{cc{}}{{{Fj{e}}}{{E`{c}}}{BdFl}{{Fn{}{{Ed{c}}}}}}1{{{b{{E`{c}}}}}cBd}{{{b{Ch}}}Bj}10{{}j}0{{}c{}}0{{{Ad{c}}}{{Ad{d}}}{}}0{{{Af{c}}}{{Af{d}}}{}}0{{{Ah{c}}}{{Ah{d}}}{}}0{{{b{{E`{c}}}}}{{E`{c}}}Bd}{{{b{fG`}}{b{{Cj{Ch}}}}{b{{Cj{Bj}}}}}{{Al{Chn}}}}{{{b{fG`}}{b{{Cj{Ch}}}}{b{{Cj{Bj}}}}j}{{Al{Chn}}}}{{{b{{E`{e}}}}}{{Bb{c}}}Bd{{Cd{c}}}}{bc{}}0{c{{Al{e}}}{}{}}0{{}{{Al{c}}}{}}0{bAn}0;;```{{bBf}l}00{b{{b{d}}}}00{{{b{f}}}{{b{fd}}}}00{e{{Al{lGb}}}Bd{{Gf{}{{Gd{{b{{Dn{c}}}}}}}}Gh}}{b{{b{c}}}{}}00{{{b{f}}}{{b{fc}}}{}}00{{{b{{Dn{c}}}}}{{Al{lGb}}}Bd}{{{b{{Dn{c}}}}}{{Dn{c}}}{DbBd}}{{{b{{Cb{c}}}}}{{Cb{c}}}{DbBd}}{{{b{{Cf{c}}}}}{{Cf{c}}}{DbBd}}{{b{b{fc}}}l{}}00{bl}00{{}{{Dn{c}}}Bd}{j{{b{c}}}{}}00{j{{b{fc}}}{}}00{{cGjGl}{{Al{{Dn{e}}Gb}}}GnBd}{jl}00{{{b{{Dn{c}}}}{b{{Dn{c}}}}}Dl{FfBd}}{{b{b{c}}}Dl{}}00{{{b{{Dn{c}}}}{b{fA`}}}Ab{EhBd}}{{{b{{Cb{c}}}}{b{fA`}}}Ab{EhBd}}{{{b{{Cf{c}}}}{b{fA`}}}Ab{EhBd}}{{{Fj{e}}}{{Dn{c}}}Bd{{Fn{}{{Ed{c}}}}}}{cc{}}00{{}j}00{{}c{}}00{{{Ad{c}}}{{Ad{d}}}{}}00{{{Af{c}}}{{Af{d}}}{}}00{{{Ah{c}}}{{Ah{d}}}{}}00{{{b{{Dn{e}}}}}{{Bb{c}}}Bd{{Cd{c}}}}{{{b{{Dn{c}}}}eGj}{{Al{lGb}}}BdH`}{{{b{{Dn{c}}}}Gj}jBd}{bc{}}00{c{{Al{e}}}{}{}}00{{}{{Al{c}}}{}}00{bAn}00:::{{{Bl{c}}{Bl{c}}}{{Al{ln}}}Bd}```{{bBf}l}0{b{{b{d}}}}0{{{b{f}}}{{b{fd}}}}0{b{{b{c}}}{}}0{{{b{f}}}{{b{fc}}}{}}0{{{b{{Fb{c}}}}}{{Fb{c}}}{DbBd}}{{{b{{F`{c}}}}}{{F`{c}}}{DbBd}}{{b{b{fc}}}l{}}0{bl}0{{{b{{Fb{c}}}}}{{Dh{cc}}}Bd}{{{b{{F`{c}}}}}{{Dh{BjBj}}}Bd}{{{b{{F`{c}}}}{b{f{Bl{c}}}}}{{Al{Bjn}}}Bd}{{}{{Fb{c}}}{HbBd}}{{}{{F`{c}}}{HbBd}}{j{{b{c}}}{}}0{j{{b{fc}}}{}}0{jl}0{{{b{{F`{c}}}}{b{f{Bl{c}}}}{b{{F`{c}}}}}{{Al{ln}}}Bd}{{{b{{Fb{c}}}}{b{{Fb{c}}}}}Dl{FfBd}}{{{b{{F`{c}}}}{b{{F`{c}}}}}Dl{FfBd}}{{b{b{c}}}Dl{}}00000{{{b{{Fb{c}}}}}cBd}{{{b{{Fb{c}}}}{b{fA`}}}Ab{EhBd}}{{{b{{F`{c}}}}{b{fA`}}}Ab{EhBd}}{cc{}}0{{}j}0{{}c{}}0{{{Ad{c}}}{{Ad{d}}}{}}0{{{Af{c}}}{{Af{d}}}{}}0{{{Ah{c}}}{{Ah{d}}}{}}0{{{b{c}}j{B`{c}}}{{Al{{Fb{c}}n}}}Bd}{{{b{f{Bl{c}}}}{b{c}}j{B`{c}}}{{Al{{F`{c}}n}}}Bd}{{{b{f{Bl{c}}}}{b{{Fb{c}}}}j{B`{c}}}{{Al{{F`{c}}n}}}Bd}{{{b{f{Bl{c}}}}Bjj{B`{c}}}{{Al{{F`{c}}n}}}Bd}{{{b{{Bl{c}}}}j{B`{c}}}{{F`{c}}}Bd}{{{b{{Fb{c}}}}}jBd}{{{b{{F`{c}}}}}jBd}{bc{}}0{c{{Al{e}}}{}{}}0{{}{{Al{c}}}{}}0{{{b{{Fb{c}}}}}cBd}{{{b{{F`{c}}}}}cBd}{bAn}0{{}c{}}0{{{b{{F`{c}}}}{b{{Bl{c}}}}}{{Al{cn}}}Bd}{{{b{{F`{c}}}}{b{{Bl{c}}}}}{{Al{{Fb{c}}n}}}Bd};````````````````````````{{bBf}l}0000000000000000000000{b{{b{d}}}}0000000000000000000000{{{b{f}}}{{b{fd}}}}0000000000000000000000{b{{b{c}}}{}}0000000000000000000000{{{b{f}}}{{b{fc}}}{}}0000000000000000000000{{{b{{Hd{c}}}}}{{Hd{c}}}{DbCl}}{{{b{Hf}}}Hf}{{{b{{Hh{c}}}}}{{Hh{c}}}{DbCl}}{{{b{Hj}}}Hj}{{{b{Hl}}}Hl}{{{b{{Hn{c}}}}}{{Hn{c}}}Db}{{{b{I`}}}I`}{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{If}}}If}{{{b{{Ih{c}}}}}{{Ih{c}}}{DbCl}}{{{b{{Ij{c}}}}}{{Ij{c}}}{DbCl}}{{{b{{Il{c}}}}}{{Il{c}}}{DbCl}}{{{b{In}}}In}{{{b{{J`{c}}}}}{{J`{c}}}Ef}{{{b{{Jb{c}}}}}{{Jb{c}}}Ef}{{{b{{Jd{c}}}}}{{Jd{c}}}Ef}{{{b{{Jf{c}}}}}{{Jf{c}}}{DbBd}}{{{b{{Jh{c}}}}}{{Jh{c}}}{DbBd}}{{{b{Jj}}}Jj}{{{b{Jl}}}Jl}{{{b{{Jn{c}}}}}{{Jn{c}}}{DbCl}}{{{b{K`}}}K`}{{b{b{fc}}}l{}}0000000000000000000000{bl}0000000000000000000000{j{{b{c}}}{}}0000000000000000000000{j{{b{fc}}}{}}0000000000000000000000{{{Ad{En}}}{{Al{{Ad{e}}{Ad{En}}}}}{dCl}{{En{c}}}}{{{b{fEn}}}{{B`{{b{fe}}}}}{dCl}{{En{c}}}}{{{Ah{En}}}{{Al{{Ah{e}}{Ah{En}}}}}{dCl}{{En{c}}}}{{{b{En}}}{{B`{{b{e}}}}}{dCl}{{En{c}}}}{jl}0000000000000000000000{{{b{En}}{b{fA`}}}Ab}{{{b{{Hd{c}}}}{b{fA`}}}Ab{EhCl}}{{{b{Hf}}{b{fA`}}}Ab}{{{b{{Hh{c}}}}{b{fA`}}}Ab{EhCl}}{{{b{Hj}}{b{fA`}}}Ab}{{{b{Hl}}{b{fA`}}}Ab}{{{b{{Hn{c}}}}{b{fA`}}}AbEh}{{{b{I`}}{b{fA`}}}Ab}{{{b{Ib}}{b{fA`}}}Ab}{{{b{Id}}{b{fA`}}}Ab}{{{b{If}}{b{fA`}}}Ab}{{{b{{Jn{c}}}}{b{fA`}}}Ab{EhCl}}{{{b{K`}}{b{fA`}}}Ab}{cc{}}0000000000000000000000{{}j}0000000000000000000000{{}c{}}0000000000000000000000{{{Ad{c}}}{{Ad{d}}}{}}0000000000000000000000{{{Af{c}}}{{Af{d}}}{}}0000000000000000000000{{{Ah{c}}}{{Ah{d}}}{}}0000000000000000000000{{{b{En}}}Dl}{{{b{En}}}{{b{Kb}}}}{{{b{{Hd{c}}}}}{{b{Kb}}}Cl}{{{b{Hf}}}{{b{Kb}}}}{{{b{{Hh{c}}}}}{{b{Kb}}}Cl}{{{b{Hj}}}{{b{Kb}}}}{{{b{Hl}}}{{b{Kb}}}}{{{b{{Hn{c}}}}}{{b{Kb}}}Cl}{{{b{I`}}}{{b{Kb}}}}{{{b{Ib}}}{{b{Kb}}}}{{{b{Id}}}{{b{Kb}}}}{{{b{If}}}{{b{Kb}}}}{{{b{{Ih{c}}}}}{{b{Kb}}}Cl}{{{b{{Ij{c}}}}}{{b{Kb}}}Cl}{{{b{{Il{c}}}}}{{b{Kb}}}Cl}{{{b{In}}}{{b{Kb}}}}{{{b{{J`{e}}}}}{{b{Kb}}}Bd{{Ef{}{{Ed{c}}}}}}{{{b{{Jb{e}}}}}{{b{Kb}}}Bd{{Ef{}{{Ed{c}}}}}}{{{b{{Jd{e}}}}}{{b{Kb}}}Bd{{Ef{}{{Ed{c}}}}}}{{{b{{Jf{c}}}}}{{b{Kb}}}Bd}{{{b{{Jh{c}}}}}{{b{Kb}}}Bd}{{{b{Jj}}}{{b{Kb}}}}{{{b{Jl}}}{{b{Kb}}}}{{{b{{Jn{c}}}}}{{b{Kb}}}Cl}{{{b{K`}}}{{b{Kb}}}}{{{b{En}}}cCl}{{{b{{Hd{c}}}}}cCl}{{{b{{Hh{c}}}}}cCl}{{{b{{Ih{c}}}}}cCl}{{{b{{J`{e}}}}}cBd{{Ef{}{{Ed{c}}}}}}{{{b{{Jh{c}}}}}cBd}{{{b{Jj}}}cCl}6{{{b{{Jn{c}}}}}cCl}73{{{b{{Jb{e}}}}}cBd{{Ef{}{{Ed{c}}}}}}{{{b{{Jd{e}}}}}cBd{{Ef{}{{Ed{c}}}}}}{{{b{En}}}{{Ej{c}}}Cl}{{{b{If}}}{{Ej{c}}}Cl}1{{{b{Hf}}}{{Ej{c}}}Cl}{{{b{{Hh{c}}}}}{{Ej{c}}}Cl}{{{b{Hj}}}{{Ej{c}}}Cl}{{{b{{Hn{c}}}}}{{Ej{c}}}Cl}{{{b{Ib}}}{{Ej{c}}}Cl}{{{b{{Ih{c}}}}}{{Ej{c}}}Cl}{{{b{{Ij{c}}}}}{{Ej{c}}}Cl}{{{b{In}}}{{Ej{c}}}Cl}{{{b{{Jf{c}}}}}{{Ej{c}}}Bd}{{{b{{Jh{c}}}}}{{Ej{c}}}Bd}{{{b{Jj}}}{{Ej{c}}}Cl}{{{b{Jl}}}{{Ej{c}}}Cl}{{{b{En}}}cCl}{{{b{{Jn{c}}}}}cCl}?{{{b{Hl}}}{{Ej{c}}}Cl}{{{b{I`}}}{{Ej{c}}}Cl}:{{{b{{Il{c}}}}}{{Ej{c}}}Cl}9{{{b{{J`{e}}}}}{{Ej{c}}}Bd{{Ef{}{{Ed{c}}}}}}{{{b{{Jb{e}}}}}{{Ej{c}}}Bd{{Ef{}{{Ed{c}}}}}}{{{b{{Jd{e}}}}}{{Ej{c}}}Bd{{Ef{}{{Ed{c}}}}}};:987{{{b{{Hd{c}}}}}cCl}{{{b{Hf}}}cCl}{{{b{{Hh{c}}}}}cCl}{{{b{Hj}}}cCl}{{{b{Hl}}}cCl}{{{b{{Hn{c}}}}}cCl}{{{b{I`}}}cCl}{{{b{Ib}}}cCl}{{{b{Id}}}cCl}{{{b{If}}}cCl}{{{b{{Ih{c}}}}}cCl}{{{b{{Ij{c}}}}}cCl}{{{b{{Il{c}}}}}cCl}{{{b{In}}}cCl}{{{b{{Jb{e}}}}}cBd{{Ef{}{{Ed{c}}}}}}{{{b{{Jd{e}}}}}cBd{{Ef{}{{Ed{c}}}}}}{{{b{{Jf{c}}}}}cBd}{{{b{{Jh{c}}}}}cBd}{{{b{Jl}}}cCl}{{{b{En}}}cCl}{{{b{{Jn{c}}}}}cCl}10{bc{}}0000000000000000000000{c{{Al{e}}}{}{}}0000000000000000000000{{}{{Al{c}}}{}}0000000000000000000000{bAn}0000000000000000000000{{}c{}}0000000000000000000000","D":"BMl","p":[[1,"reference"],[10,"Any",1273],[0,"mut"],[10,"Error",1274],[1,"usize"],[1,"unit"],[6,"CircuitError",0],[5,"Formatter",1275],[8,"Result",1275],[5,"Box",1276],[5,"Arc",1277],[5,"Rc",1278],[5,"String",1279],[6,"Result",1280],[5,"TypeId",1273],[6,"Option",1281],[5,"Vec",1282],[10,"PrimeField",1283],[5,"Private",1284],[10,"Circuit",44],[8,"Variable",44],[5,"PlonkCircuit",44],[10,"FftField",1285],[5,"BoolVar",44],[5,"EmulatedSWPointVariable",473,1286],[10,"EmulationConfig",363,1287],[5,"EmulatedTEPointVariable",473,1288],[5,"PointVariable",399],[1,"slice"],[10,"Field",1289],[6,"PlonkType",44],[6,"MergeableCircuitType",44],[10,"Clone",1290],[10,"Arithmetization",44],[5,"DensePolynomial",1291],[1,"tuple"],[5,"EmulatedVariable",363,1287],[1,"bool"],[5,"SWPoint",473,1286],[5,"TEPoint",399],[5,"Affine",1292],[17,"BaseField"],[10,"TECurveConfig",1293],[10,"Debug",1275],[1,"array"],[10,"Hasher",1294],[10,"Gate",634],[5,"FpElemVar",559],[5,"FpElem",559],[10,"SerializableEmulatedStruct",363,1287],[10,"PartialEq",1295],[5,"Projective",1296],[5,"Affine",1297],[10,"SWToTEConParam",399,1298],[10,"SWCurveConfig",1299],[10,"MultiScalarMultiplicationCircuit",399,1300],[6,"SerializationError",1301],[17,"Item"],[10,"Iterator",1302],[10,"Send",1303],[6,"Compress",1304],[6,"Validate",1304],[10,"Read",1305],[10,"Write",1305],[10,"Default",1306],[5,"ConstantGate",634,1307],[5,"AdditionGate",634,1307],[5,"ConstantAdditionGate",634,1307],[5,"SubtractionGate",634,1307],[5,"MultiplicationGate",634,1307],[5,"ConstantMultiplicationGate",634,1307],[5,"BoolGate",634,1307],[5,"EqualityGate",634,1307],[5,"IoGate",634,1307],[5,"FifthRootGate",634,1307],[5,"QuadPolyGate",634,1307],[5,"LinCombGate",634,1307],[5,"MulAddGate",634,1307],[5,"CondSelectGate",634,1307],[5,"EdwardsCurveEquationGate",634,1308],[5,"CurvePointXAdditionGate",634,1308],[5,"CurvePointYAdditionGate",634,1308],[5,"QuaternaryPointSelectXGate",634,1308],[5,"QuaternaryPointSelectYGate",634,1308],[5,"LogicOrGate",634,1309],[5,"LogicOrOutputGate",634,1309],[5,"LookupGate",634,1310],[5,"PaddingGate",634],[1,"str"]],"r":[[364,1287],[365,1287],[367,1287],[383,1287],[392,1287],[400,1300],[404,1298],[473,1286],[474,1288],[475,1286],[634,1307],[635,1307],[636,1307],[637,1307],[638,1307],[639,1307],[640,1308],[641,1308],[642,1308],[643,1307],[644,1307],[646,1307],[647,1307],[648,1309],[649,1309],[650,1310],[651,1307],[652,1307],[654,1307],[655,1308],[656,1308],[657,1307]],"b":[[25,"impl-Display-for-CircuitError"],[26,"impl-Debug-for-CircuitError"],[440,"impl-From%3CAffine%3CP%3E%3E-for-TEPoint%3CF%3E"],[441,"impl-From%3CProjective%3CP%3E%3E-for-TEPoint%3CF%3E"],[443,"impl-From%3CAffine%3CP%3E%3E-for-TEPoint%3CF%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAIsDWQAQAAQAFwAEAB8AAAAhAAcAOgADAD8AAABDAAAARQAHAFAABwBZAAAAXAALAGkAAABrAAAAbQAAAG8AAABxAAAAcwAAAHUAAAB3AAAAeQAAAHsAAAB9AAAAfwAAAIgAAACTAAAAlgANALcAAAC5AAAAvgAAAMwABwDVAAAA2gAEAOUABQDwAAoAGwEBAB4BAAAkAQAALgEAADABAAAzAQAANQEAADkBAAA+AQAAQwEAAEUBAABHAQAASQEAAEwBBABUAQsAYwEDAGgBAAByAQoAfgEAAIEBAACDAQIAigEDAI8BAACXARYArwELALwBAADCAQEAxgEFAM8BCgDdASwADQICABMCGgAyAg8ARQIHAE4CBwBXAgEAWwIBAF8CBQBsAgUAdAIDAJMC5QB9AyMAuAMWAOYDRAAtBBYARQQFAEwEAABOBAIAUgQAAFQECwBhBAAAYwQLAHAEEgCEBAAAhgRzAA=="}],["jf_rescue",{"t":"TTSTTTTFPFSGFKFSNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["A","A_INV","CRHF_RATE","INIT_VEC_LE","KEY_INJECTION_LE","MDS_LE","PERMUTATION_ROUND_KEYS","PRP","ParameterError","Permutation","ROUNDS","RescueError","RescueMatrix","RescueParameter","RescueVector","STATE_SIZE","as_error_source","borrow","","","","","borrow_mut","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","commitment","crhf","default","","","deref","","","","","deref_mut","","","","","drop","","","","","elems","eq","","equivalent","","","","eval","fmt","","","","","","from","","","","","","","","","init","","","","","init_vec_ref","into","","","","","is_empty","key_injection_vec_ref","key_schedule","len","linear","mds_matrix_ref","","non_linear","prf","prp","prp_with_round_keys","round_keys_ref","sponge","to_owned","","","","to_string","try_from","","","","","try_into","","","","","type_id","","","","","vec","vzip","","","","","zero","FixedLengthRescueCommitment","borrow","borrow_mut","clone","clone_into","clone_to_uninit","commit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","init","into","to_owned","try_from","try_into","type_id","verify","vzip","FixedLengthRescueCRHF","RescueCRHF","VariableLengthRescueCRHF","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","deref","","","deref_mut","","","drop","","","evaluate","","fmt","","","from","","","init","","","into","","","sponge_no_padding","sponge_with_bit_padding","sponge_with_zero_padding","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","RescuePRF","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","evaluate","fmt","from","init","into","to_owned","try_from","try_into","type_id","vzip","RescueSponge","absorb","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","fmt","fork","from","from_state","init","into","into_state","new","squeeze_bits","squeeze_bytes","squeeze_field_elements","squeeze_field_elements_with_sizes","squeeze_native_field_elements","squeeze_native_field_elements_with_sizes","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"jf_rescue"],[133,"jf_rescue::commitment"],[157,"jf_rescue::crhf"],[216,"jf_rescue::prf"],[235,"jf_rescue::sponge"],[265,"core::error"],[266,"core::clone"],[267,"core::default"],[268,"alloc::vec"],[269,"ark_ff::fields::prime"],[270,"core::cmp"],[271,"core::fmt"],[272,"core::marker"],[273,"alloc::string"],[274,"core::result"],[275,"core::any"],[276,"core::option"],[277,"core::borrow"],[278,"ark_crypto_primitives::sponge::absorb"],[279,"ark_crypto_primitives::sponge"]],"i":"Af0`0000`An```````00hlnA`43210321032103210``310432104321043210343443304432104333221004321014321021123103`110`321044321043210432102432103`Cf0000000000000000000000```ClCnD`21021021021021021021010210210210210222210210210210210`Db00000000000000000`Dd0000000000000000000000000000","f":"````````````````{b{{b{d}}}}{b{{b{c}}}{}}0000{{{b{f}}}{{b{fc}}}{}}0000{{{b{{h{c}}}}}{{h{c}}}j}{{{b{{l{c}}}}}{{l{c}}}j}{{{b{{n{c}}}}}{{n{c}}}j}{{{b{{A`{c}}}}}{{A`{c}}}j}{{b{b{fc}}}Ab{}}000{bAb}000``{{}{{h{c}}}Ad}{{}{{n{c}}}Af}{{}{{A`{c}}}Af}{Ah{{b{c}}}{}}0000{Ah{{b{fc}}}{}}0000{AhAb}0000{{{b{{h{c}}}}}{{Aj{c}}}Al}{{{b{An}}{b{An}}}B`}{{{b{{h{c}}}}{b{{h{c}}}}}B`Bb}{{b{b{c}}}B`{}}000{{{b{{A`{c}}}}{b{{h{c}}}}}{{h{c}}}Af}{{{b{An}}{b{fBd}}}Bf}0{{{b{{h{c}}}}{b{fBd}}}BfBh}{{{b{{l{c}}}}{b{fBd}}}BfBh}{{{b{{n{c}}}}{b{fBd}}}BfBh}{{{b{{A`{c}}}}{b{fBd}}}BfBh}{cc{}}0{{{b{{Bj{c}}}}}{{h{c}}}Bl}{{{b{{Bn{c}}}}}{{h{c}}}Bl}2{{{b{{Bj{{h{c}}}}}}}{{l{c}}}Al}3{{{n{c}}}{{A`{c}}}Af}4{{}Ah}0000{{{b{{n{c}}}}}{{b{{h{c}}}}}Af}{{}c{}}0000{{{b{{l{c}}}}}B`Al}{{{b{{n{c}}}}}{{b{{Bn{{h{c}}}}}}}Af}{{{b{{n{c}}}}{b{{h{c}}}}}{{Aj{{h{c}}}}}Af}{{{b{{l{c}}}}}AhAl}{{{b{f{h{c}}}}{b{{l{c}}}}{b{{h{c}}}}}AbAl}{{{b{{n{c}}}}}{{b{{l{c}}}}}Af}{{{b{{A`{c}}}}}{{b{{l{c}}}}}Af}{{{b{f{h{c}}}}{b{{l{c}}}}{b{{h{c}}}}}AbAf}`{{{b{{n{c}}}}{b{{h{c}}}}{b{{h{c}}}}}{{h{c}}}Af}{{{b{{n{c}}}}{b{{Bn{{h{c}}}}}}{b{{h{c}}}}}{{h{c}}}Af}{{{b{{A`{c}}}}}{{b{{Bn{{h{c}}}}}}}Af}`{bc{}}000{bC`}{c{{Cb{e}}}{}{}}0000{{}{{Cb{c}}}{}}0000{bCd}0000{{{b{{l{c}}}}Ah}{{h{c}}}Al}{{}c{}}0000{{}{{h{c}}}Al}`{b{{b{c}}}{}}{{{b{f}}}{{b{fc}}}{}}{{{b{{Cf{c}}}}}{{Cf{c}}}{jAf}}{{b{b{fc}}}Ab{}}{bAb}{{e{Ch{{b{g}}}}}{{Cb{ik}}}{}{{Cj{c}}}{}{}{}}{{}{{Cf{c}}}{AdAf}}{Ah{{b{c}}}{}}{Ah{{b{fc}}}{}}{AhAb}{{{b{{Cf{c}}}}{b{{Cf{c}}}}}B`{BbAf}}{{b{b{c}}}B`{}}0{{{b{{Cf{c}}}}{b{fBd}}}Bf{BhAf}}{cc{}}{{}Ah}{{}c{}}{bc{}}{c{{Cb{e}}}{}{}}{{}{{Cb{c}}}{}}{bCd}{{e{Ch{{b{g}}}}{b{i}}}{{Cb{{Cb{AbAb}}k}}}{}{{Cj{c}}}{}{}{}}5```{b{{b{c}}}{}}00{{{b{f}}}{{b{fc}}}{}}00{{{b{{Cl{c}}}}}{{Cl{c}}}{jAf}}{{{b{{Cn{c}}}}}{{Cn{c}}}{jAf}}{{{b{{D`{c}}}}}{{D`{c}}}{jAf}}{{b{b{fc}}}Ab{}}00{bAb}00{Ah{{b{c}}}{}}00{Ah{{b{fc}}}{}}00{AhAb}00{e{{Cb{gi}}}{}{{Cj{c}}}{}{}}0{{{b{{Cl{c}}}}{b{fBd}}}Bf{BhAf}}{{{b{{Cn{c}}}}{b{fBd}}}Bf{BhAf}}{{{b{{D`{c}}}}{b{fBd}}}Bf{BhAf}}{cc{}}00{{}Ah}00{{}c{}}00{{{b{{Bn{c}}}}Ah}{{Cb{{Aj{c}}An}}}Af}{{{b{{Bn{c}}}}Ah}{{Aj{c}}}Af}0{bc{}}00{c{{Cb{e}}}{}{}}00{{}{{Cb{c}}}{}}00{bCd}00666`{b{{b{c}}}{}}{{{b{f}}}{{b{fc}}}{}}{{{b{{Db{c}}}}}{{Db{c}}}{jAf}}{{b{b{fc}}}Ab{}}{bAb}{Ah{{b{c}}}{}}{Ah{{b{fc}}}{}}{AhAb}{{ei}{{Cb{km}}}{}{{Cj{c}}}{}{{Cj{g}}}{}{}}{{{b{{Db{c}}}}{b{fBd}}}Bf{BhAf}}{cc{}}{{}Ah}{{}c{}}{bc{}}{c{{Cb{e}}}{}{}}{{}{{Cb{c}}}{}}{bCd}4`{{{b{f{Dd{c}}}}{b{e}}}Ab{AfAl}Df}{b{{b{c}}}{}}{{{b{f}}}{{b{fc}}}{}}{{{b{{Dd{c}}}}}{{Dd{c}}}{jAf}}{{b{b{fc}}}Ab{}}{bAb}{{}{{Dd{c}}}{AdAf}}{Ah{{b{c}}}{}}{Ah{{b{fc}}}{}}{AhAb}{{{b{{Dd{c}}}}{b{fBd}}}Bf{BhAf}}{{{b{{Dd{c}}}}{b{{Bn{Dh}}}}}{{Dd{c}}}{AfAl}}{cc{}}{{c{b{e}}}{{Dd{g}}}{}{}Af}{{}Ah}{{}c{}}{{{Dd{c}}}eAf{}}{{{b{c}}}{{Dd{e}}}{}{AfAl}}{{{b{f{Dd{c}}}}Ah}{{Aj{B`}}}{AfAl}}{{{b{f{Dd{c}}}}Ah}{{Aj{Dh}}}{AfAl}}{{{b{f{Dd{c}}}}Ah}{{Aj{e}}}{AfAl}Al}{{{b{f{Dd{c}}}}{b{{Bn{Dj}}}}}{{Aj{e}}}{AfAl}Al}{{{b{f{Dd{c}}}}Ah}{{Aj{c}}}Af}{{{b{f{Dd{c}}}}{b{{Bn{Dj}}}}}{{Aj{c}}}Af}{bc{}}{c{{Cb{e}}}{}{}}{{}{{Cb{c}}}{}}{bCd}<","D":"In","p":[[1,"reference"],[10,"Error",265],[0,"mut"],[5,"RescueVector",0],[10,"Clone",266],[5,"RescueMatrix",0],[5,"PRP",0],[5,"Permutation",0],[1,"unit"],[10,"Default",267],[10,"RescueParameter",0],[1,"usize"],[5,"Vec",268],[10,"PrimeField",269],[6,"RescueError",0],[1,"bool"],[10,"PartialEq",270],[5,"Formatter",271],[8,"Result",271],[10,"Debug",271],[1,"array"],[10,"Copy",272],[1,"slice"],[5,"String",273],[6,"Result",274],[5,"TypeId",275],[5,"FixedLengthRescueCommitment",133],[6,"Option",276],[10,"Borrow",277],[5,"RescueCRHF",157],[5,"FixedLengthRescueCRHF",157],[5,"VariableLengthRescueCRHF",157],[5,"RescuePRF",216],[5,"RescueSponge",235],[10,"Absorb",278],[1,"u8"],[6,"FieldElementSize",279]],"r":[],"b":[[67,"impl-Display-for-RescueError"],[68,"impl-Debug-for-RescueError"],[75,"impl-From%3C%26%5BF;+STATE_SIZE%5D%3E-for-RescueVector%3CF%3E"],[76,"impl-From%3C%26%5BF%5D%3E-for-RescueVector%3CF%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAALoAGAARABYAKgARAD0ABQBEAAUATAABAE8AAABRAAAAUwAEAGsAEwCAAAQAhwANAJYAAACYAAUAoQAXALsAAgDBAAIAygAOANoACQDlAAAA5wAEAO4ACQD6AAEA/QAAAAUBBAA="}],["jf_signature",{"t":"KTRPRRGKRPRMMNNCNNNNNNNMMMMNNNNMNSSSSSSSSCSSSSSSS","n":["AggregateableSignatureSchemes","CS_ID","MessageUnit","ParameterError","PublicParameter","Signature","SignatureError","SignatureScheme","SigningKey","VerificationError","VerificationKey","aggregate","aggregate_verify","borrow","borrow_mut","constants","eq","equivalent","fmt","","from","","into","key_gen","multi_sig_verify","param_gen","sign","to_string","try_from","try_into","type_id","verify","vzip","BLS_SIG_COMPRESSED_PK_SIZE","BLS_SIG_COMPRESSED_SIGNATURE_SIZE","BLS_SIG_PK_SIZE","BLS_SIG_SIGNATURE_SIZE","BLS_SIG_SK_SIZE","CS_ID_BLS_BN254","CS_ID_BLS_MIN_SIG","CS_ID_SCHNORR","tag","BLS_SIG","BLS_SIGNING_KEY","BLS_VER_KEY","SCHNORR_KEY_PAIR","SCHNORR_SIG","SCHNORR_SIGNING_KEY","SCHNORR_VER_KEY"],"q":[[0,"jf_signature"],[33,"jf_signature::constants"],[42,"jf_signature::constants::tag"],[49,"core::result"],[50,"core::convert"],[51,"core::fmt"],[52,"blst"],[53,"rand_core"],[54,"core::option"],[55,"alloc::string"],[56,"core::any"]],"i":"`Bd0f11``101Bf011`11111112022111121````````````````","f":"```````````{{{b{c}}{b{{d{e}}}}{b{{d{g}}}}}{{h{gf}}}{}{}{}}{{{b{c}}{b{{d{e}}}}{b{{d{i}}}}{b{k}}}{{h{jf}}}{}{}{}{{l{{d{g}}}}}{}}{b{{b{c}}}{}}{{{b{n}}}{{b{nc}}}{}}`{{{b{f}}{b{f}}}A`}{{b{b{c}}}A`{}}{{{b{f}}{b{nAb}}}Ad}0{cc{}}{Aff}{{}c{}}{{{b{c}}{b{ne}}}{{h{{Ah{gi}}f}}}{}{AjAl}{}{}}{{{b{c}}{b{{d{e}}}}{b{{d{g}}}}{b{i}}}{{h{jf}}}{}{}{}{}}{{{An{{b{nc}}}}}{{h{ef}}}{AjAl}{}}{{{b{c}}{b{e}}i{b{nk}}}{{h{mf}}}{}{}{}{{l{{d{g}}}}}{AjAl}{}}{bB`}{c{{h{e}}}{}{}}{{}{{h{c}}}{}}{bBb}{{{b{c}}{b{e}}i{b{k}}}{{h{jf}}}{}{}{}{{l{{d{g}}}}}{}}9````````````````","D":"Dl","p":[[1,"reference"],[1,"slice"],[6,"SignatureError",0],[6,"Result",49],[1,"unit"],[10,"AsRef",50],[0,"mut"],[1,"bool"],[5,"Formatter",51],[8,"Result",51],[6,"BLST_ERROR",52],[1,"tuple"],[10,"CryptoRng",53],[10,"RngCore",53],[6,"Option",54],[5,"String",55],[5,"TypeId",56],[10,"SignatureScheme",0],[10,"AggregateableSignatureSchemes",0]],"r":[],"b":[[18,"impl-Debug-for-SignatureError"],[19,"impl-Display-for-SignatureError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAsABQAOAAEAEQADABYAAAAcAAMAIQAAAA=="}],["jf_utils",{"t":"FNNHHCHHNNNQQNHHHHHHNNHHNNHHCCNHQQQQNNNNHHHHFNNNNNNNNNNNHHHNNNNN","n":["CanonicalBytes","borrow","borrow_mut","bytes_from_field_elements","bytes_to_field_elements","canonical","challenge_bit_len","compute_len_to_next_multiple","deref","deref_mut","deserialize","deserialize_canonical_bytes","","drop","field_bit_len","field_byte_len","field_switching","fq_to_fr","fq_to_fr_with_mask","fr_to_fq","from","","hadamard_product","hash_to_field","init","into","multi_pairing","pad_with_zeros","par_utils","reed_solomon_code","serialize","test_rng","test_serde_default","","to_bytes","","try_from","try_into","type_id","vzip","deserialize","serialize","parallelizable_chunks","parallelizable_slice_iter","RSCodeError","as_error_source","borrow","borrow_mut","deref","deref_mut","drop","fmt","","from","init","into","reed_solomon_erasure_decode","reed_solomon_erasure_decode_rou","reed_solomon_erasure_encode","to_string","try_from","try_into","type_id","vzip"],"q":[[0,"jf_utils"],[40,"jf_utils::canonical"],[42,"jf_utils::par_utils"],[44,"jf_utils::reed_solomon_code"],[64,"alloc::vec"],[65,"ark_ff::fields"],[66,"core::borrow"],[67,"jf_utils::serialize"],[68,"core::result"],[69,"serde::de"],[70,"ark_ff::fields::prime"],[71,"ark_serialize"],[72,"alloc::string"],[73,"core::convert"],[74,"ark_ec::pairing"],[75,"serde::ser"],[76,"rand::rngs::std"],[77,"core::any"],[78,"core::slice::iter"],[79,"core::error"],[80,"core::fmt"],[81,"core::iter::traits::collect"],[82,"ark_poly::domain::radix2"],[83,"ark_ff::fields::fft_friendly"],[84,"core::iter::traits::iterator"],[85,"jf_utils::conversion"],[86,"jf_utils::multi_pairing"],[87,"jf_utils::serialize::canonical"]],"i":"`Ab0`````000``0``````00``00````0`````0000`````Cd0000000000```00000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{e{{h{f}}}j{{n{{l{c}}}}}}{c{{h{e}}}{{n{{l{f}}}}}j}`{{}A`}{{A`A`}A`}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{c{{Ad{Ab}}}Af}``{A`Ah}55{{{b{c}}}eAjAj}{{{b{c}}}{}Aj}1{bcAj}{cAbAl}{cc{}}{{ei}{{Ad{{h{g}}An}}}{}{{B`{{l{c}}}}}{}{{B`{{l{g}}}}}}{ce{{B`{{l{f}}}}}Aj}<{{}c{}}{{{b{l}}{b{l}}}{{Bb{c}}}Bd}{{{b{d{h{c}}}}A`}Ahj}``{{{b{Ab}}c}AdBf}{{}Bh}````{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bBj}7{c{{Ad{e}}}AfBl}{{{b{c}}e}AdAlBf}{{{b{{l{c}}}}A`}{{Bn{c}}}{}}{{{b{{l{c}}}}}{{C`{c}}}{}}`{b{{b{Cb}}}}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{A`Ah}{{{b{Cd}}{b{dCf}}}Ch}0{cc{}}{{}A`}{{}c{}}{{cA`}{{Ad{{h{e}}Cd}}}Cjj}{{cA`{b{{Cl{e}}}}}{{Ad{{h{e}}Cd}}}CjCn}{{cA`}{{`{{Db{}{{D`{e}}}}}}}Cjj}{bAn}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bBj}7","D":"Bn","p":[[1,"reference"],[0,"mut"],[1,"u8"],[5,"Vec",64],[10,"Field",65],[1,"slice"],[10,"Borrow",66],[1,"usize"],[5,"CanonicalBytes",0,67],[6,"Result",68],[10,"Deserializer",69],[1,"unit"],[10,"PrimeField",70],[10,"CanonicalSerialize",71],[5,"String",72],[10,"AsRef",73],[5,"PairingOutput",74],[10,"Pairing",74],[10,"Serializer",75],[5,"StdRng",76],[5,"TypeId",77],[10,"CanonicalDeserialize",71],[5,"Chunks",78],[5,"Iter",78],[10,"Error",79],[5,"RSCodeError",44],[5,"Formatter",80],[8,"Result",80],[10,"IntoIterator",81],[5,"Radix2EvaluationDomain",82],[10,"FftField",83],[17,"Item"],[10,"Iterator",84]],"r":[[0,67],[3,85],[4,85],[5,67],[16,85],[17,85],[18,85],[19,85],[23,85],[26,86],[40,87],[41,87]],"b":[[51,"impl-Display-for-RSCodeError"],[52,"impl-Debug-for-RSCodeError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACkACgACAAEABwAKABUAAAAZAAAAHAAAAB8AAwAlAAcALgAHADcAAAA8AAQA"}],["jf_vid",{"t":"PRRPPPRFGIKNCNNNNNNNNNNNNOMONNNNNMNNNNNNNNNNNMMMNNNNNNNNNNNMCCMNONNNNNNNNMNNIFFKFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNCNNCNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFNNNNNNNNOONNNNNNNNNMOMONNNNNKRMM","n":["Argument","Commit","Common","Err","Internal","Ok","Share","VidDisperse","VidError","VidResult","VidScheme","__clone_box","advz","as_any","","as_any_mut","","as_error_source","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","commit","commit_only","common","deref","","deref_mut","","deserialize","disperse","drop","","eq","equivalent","","","fmt","","","from","","get_multiplicity","get_num_storage_nodes","get_payload_byte_len","hash","init","","into","","into_any","","into_any_arc","","into_any_rc","","is_consistent","payload_prover","precomputable","recover_payload","serialize","shares","to_owned","to_string","try_from","","try_into","","type_id","","verify_share","vzip","","Advz","AdvzInternal","Common","MaybeGPU","Share","__clone_box","","","as_any","","","as_any_mut","","","batch_check","borrow","","","borrow_mut","","","check","clone","","","clone_into","","","clone_to_uninit","","","commit_only","commit_only_precompute","deref","","","deref_mut","","","deserialize","","deserialize_with_mode","disperse","disperse_precompute","drop","","","eq","","","equivalent","","","","","","","","","fmt","","","from","","","get_multiplicity","get_num_storage_nodes","get_payload_byte_len","hash","","init","","","into","","","into_any","","","into_any_arc","","","into_any_rc","","","is_consistent","kzg_batch_commit","","new","","payload_proof","","payload_prover","payload_verify","","precomputable","recover_payload","serialize","","serialize_with_mode","serialized_size","to_owned","","","try_from","","","try_into","","","type_id","","","verify_share","vzip","","","with_multiplicity","","LargeRangeProof","SmallRangeProof","__clone_box","","as_any","","as_any_mut","","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","deserialize","","drop","","eq","","equivalent","","","","","","fmt","","from","","init","","into","","into_any","","into_any_arc","","into_any_rc","","serialize","","to_owned","","try_from","","try_into","","type_id","","vzip","","PrecomputeData","__clone_box","as_any","as_any_mut","batch_check","borrow","borrow_mut","check","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","deserialize_with_mode","drop","eq","equivalent","","","fmt","from","hash","init","into","into_any","into_any_arc","into_any_rc","serialize","serialize_with_mode","serialized_size","to_owned","try_from","try_into","type_id","vzip","PayloadProver","Statement","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","clone_to_uninit","commit","common","deref","deref_mut","drop","from","init","into","into_any","into_any_arc","into_any_rc","payload_proof","payload_subslice","payload_verify","range","to_owned","try_from","try_into","type_id","vzip","Precomputable","PrecomputeData","commit_only_precompute","disperse_precompute"],"q":[[0,"jf_vid"],[76,"jf_vid::advz"],[195,"jf_vid::advz::payload_prover"],[255,"jf_vid::advz::precomputable"],[291,"jf_vid::payload_prover"],[321,"jf_vid::precomputable"],[325,"dyn_clone::sealed"],[326,"core::any"],[327,"core::error"],[328,"core::marker"],[329,"core::clone"],[330,"core::fmt"],[331,"serde::de"],[332,"core::cmp"],[333,"core::hash"],[334,"serde::ser"],[335,"tagged_base64"],[336,"core::convert"],[337,"core::result"],[338,"alloc::boxed"],[339,"alloc::sync"],[340,"alloc::rc"],[341,"alloc::vec"],[342,"alloc::string"],[343,"ark_serialize::error"],[344,"ark_ec::pairing"],[345,"jf_merkle_tree::hasher"],[346,"core::iter::traits::iterator"],[347,"ark_serialize"],[348,"std::io"],[349,"ark_poly::polynomial::univariate::dense"],[350,"core::borrow"],[351,"core::ops::range"]],"i":"DfA`0Aj201````n`03033030300002003030203000003303222003030303032``20003030303203`````FhFjFb210210021021002102102102221021010022210210222111000210210222102102102102102102GdGh0444`44`43222432432432432443204``GnH`10101010101010101010101011100010101010101010101010101010`Hj0000000000000000000000000000000000``Hb000000000000000000Hl10111111`I`00","f":"```````````{{bd}f}`{b{{b{h}}}}0{{{b{j}}}{{b{jh}}}}0{b{{b{l}}}}{b{{b{c}}}{}}0{{{b{j}}}{{b{jc}}}{}}0{{{b{{n{c}}}}}{{n{c}}}{A`Ab}}{{b{b{jc}}}f{}}{bf}`{{{b{j{A`{}{{Ad{c}}{Af{e}}{Ah{g}}}}}}i}{{Aj{c}}}{AlAnB`BbBdBfBhBjBl{C`{{b{Bn}}}}{Cb{Bn}}}{AlAnBbBdBfBhBjBl}{AlAnBbBdBfBhBjBl}{{Ch{{Cf{Cd}}}}}}`{Cj{{b{c}}}{}}0{Cj{{b{jc}}}{}}0{c{{Cl{{n{e}}}}}Cn{A`Ab}}{{{b{j{A`{}{{Ad{c}}{Af{e}}{Ah{g}}}}}}i}{{Aj{{n{{A`{}{{Ad{c}}{Af{e}}{Ah{g}}}}}}}}}{AlAnB`BbBdBfBhBjBl{C`{{b{Bn}}}}{Cb{Bn}}}{AlAnBbBdBfBhBjBl}{AlAnBbBdBfBhBjBl}{{Ch{{Cf{Cd}}}}}}{Cjf}0{{{b{{n{c}}}}{b{{n{c}}}}}D`{A`Ab}}{{b{b{c}}}D`{}}00{{{b{{n{c}}}}{b{jDb}}}Dd{A`Ab}}{{{b{Df}}{b{jDb}}}Dd}0{cc{}}0{{{b{c}}}Dh{}}00{{{b{{n{c}}}}{b{je}}}f{A`Ab}Dj}{{}Cj}0{{}c{}}0{{{Dl{c}}}{{Dl{h}}}{}}0{{{Dn{c}}}{{Dn{h}}}{}}0{{{E`{c}}}{{E`{h}}}{}}0{{{b{c}}{b{e}}}{{Aj{f}}}{}{}}``{{{b{{A`{}{{Ad{c}}{Af{e}}{Ah{g}}}}}}{b{{Cf{e}}}}{b{g}}}{{Aj{{Eb{Cd}}}}}{AlAnB`BbBdBfBhBjBl{C`{{b{Bn}}}}{Cb{Bn}}}{AlAnBbBdBfBhBjBl}{AlAnBbBdBfBhBjBl}}{{{b{{n{c}}}}e}Cl{A`Ab}Ed}`{bc{}}{bEf}{c{{Cl{e}}}{}{}}0{{}{{Cl{c}}}{}}0{bEh}0{{{b{{A`{}{{Ad{c}}{Af{e}}{Ah{g}}}}}}{b{e}}{b{g}}{b{c}}}{{Aj{{Cl{ff}}}}}{AlAnB`BbBdBfBhBjBl{C`{{b{Bn}}}}{Cb{Bn}}}{AlAnBbBdBfBhBjBl}{AlAnBbBdBfBhBjBl}}<<`````{{bd}f}00{b{{b{h}}}}00{{{b{j}}}{{b{jh}}}}00{g{{Cl{fEj}}}ElEn{{Fd{}{{F`{{b{{Fb{ce}}}}}}}}Ff}}{b{{b{c}}}{}}00{{{b{j}}}{{b{jc}}}{}}00{{{b{{Fb{ce}}}}}{{Cl{fEj}}}ElEn}{{{b{{Fh{ceg}}}}}{{Fh{ceg}}}{ElAl}Al{BlAl}}{{{b{{Fj{ce}}}}}{{Fj{ce}}}ElEn}{{{b{{Fb{ce}}}}}{{Fb{ce}}}ElEn}{{b{b{jc}}}f{}}00{bf}00{{{b{j{Fh{ceg}}}}i}{{Aj{k}}}ElEnBl{{Ch{{Cf{Cd}}}}}{}}{{{b{{Fh{ceg}}}}i}{{Aj{{Fl{km}}}}}ElEnBl{{Ch{{Cf{Cd}}}}}{}{}}{Cj{{b{c}}}{}}00{Cj{{b{jc}}}{}}00{c{{Cl{{Fj{eg}}}}}CnElEn}{c{{Cl{{Fb{eg}}}}}CnElEn}{{cFnG`}{{Cl{{Fb{eg}}Ej}}}GbElEn}{{{b{j{Fh{ceg}}}}i}{{Aj{{n{{Fh{ceg}}}}}}}ElEnBl{{Ch{{Cf{Cd}}}}}}{{{b{{Fh{ceg}}}}i{b{k}}}{{Aj{{n{{Fh{ceg}}}}}}}ElEnBl{{Ch{{Cf{Cd}}}}}{}}{Cjf}00{{{b{{Fh{ceg}}}}{b{{Fh{ceg}}}}}D`{ElBf}Bf{BlBf}}{{{b{{Fj{ce}}}}{b{{Fj{ce}}}}}D`ElEn}{{{b{{Fb{ce}}}}{b{{Fb{ce}}}}}D`ElEn}{{b{b{c}}}D`{}}00000000{{{b{{Fh{ceg}}}}{b{jDb}}}Dd{ElAn}An{BlAn}}{{{b{{Fj{ce}}}}{b{jDb}}}DdElEn}{{{b{{Fb{ce}}}}{b{jDb}}}DdElEn}{cc{}}00{{{b{c}}}Dh{}}00{{{b{{Fj{ce}}}}{b{jg}}}fElEnDj}{{{b{{Fb{ce}}}}{b{jg}}}fElEnDj}{{}Cj}00{{}c{}}00{{{Dl{c}}}{{Dl{h}}}{}}00{{{Dn{c}}}{{Dn{h}}}{}}00{{{E`{c}}}{{E`{h}}}{}}00{{{b{c}}{b{e}}}{{Aj{f}}}{}{}}{{{b{jGd}}{b{{Cf{Gf}}}}}{{Aj{Eb}}}}{{{b{j{Gh{ce}}}}{b{{Cf{Gf}}}}}{{Aj{Eb}}}El{}}{{DhDhc}{{Aj{{Gh{eg}}}}}GjEl{}}{{DhDhc}{{Aj{{Fh{egf}}}}}GjEl{}}{{{b{{Fh{ceg}}}}i{Gl{Cj}}}{{Aj{Gn}}}ElEnBl{{Ch{{Cf{Cd}}}}}}{{{b{{Fh{ceg}}}}i{Gl{Cj}}}{{Aj{H`}}}ElEnBl{{Ch{{Cf{Cd}}}}}}`{{{b{{Fh{ceg}}}}{Hb{{Fh{ceg}}}}{b{Gn}}}{{Aj{{Cl{ff}}}}}ElEnBl}{{{b{{Fh{ceg}}}}{Hb{{Fh{ceg}}}}{b{H`}}}{{Aj{{Cl{ff}}}}}ElEnBl}`{{{b{{Fh{ceg}}}}{b{{Cf{i}}}}{b{k}}}{{Aj{{Eb{Cd}}}}}ElEnBl{}{}}{{{b{{Fj{ce}}}}g}ClElEnEd}{{{b{{Fb{ce}}}}g}ClElEnEd}{{{b{{Fb{ce}}}}gFn}{{Cl{fEj}}}ElEnHd}{{{b{{Fb{ce}}}}Fn}CjElEn}{bc{}}00{c{{Cl{e}}}{}{}}00{{}{{Cl{c}}}{}}00{bEh}00{{{b{{Fh{ceg}}}}{b{i}}{b{k}}{b{m}}}{{Aj{{Cl{ff}}}}}ElEnBl{}{}{}}{{}c{}}00{{DhDhDhc}{{Aj{{Gh{eg}}}}}GjEl{}}{{DhDhDhc}{{Aj{{Fh{egf}}}}}GjEl{}}``{{bd}f}0{b{{b{h}}}}0{{{b{j}}}{{b{jh}}}}0{b{{b{c}}}{}}0{{{b{j}}}{{b{jc}}}{}}0{{{b{{Gn{c}}}}}{{Gn{c}}}Al}{{{b{{H`{c}}}}}{{H`{c}}}Al}{{b{b{jc}}}f{}}0{bf}0{Cj{{b{c}}}{}}0{Cj{{b{jc}}}{}}0{c{{Cl{{Gn{e}}}}}Cn{HfHh}}{c{{Cl{{H`{e}}}}}Cn{HfHh}}{Cjf}0{{{b{{Gn{c}}}}{b{{Gn{c}}}}}D`Bf}{{{b{{H`{c}}}}{b{{H`{c}}}}}D`Bf}{{b{b{c}}}D`{}}00000{{{b{{Gn{c}}}}{b{jDb}}}DdAn}{{{b{{H`{c}}}}{b{jDb}}}DdAn}{cc{}}0{{}Cj}0{{}c{}}0{{{Dl{c}}}{{Dl{h}}}{}}0{{{Dn{c}}}{{Dn{h}}}{}}0{{{E`{c}}}{{E`{h}}}{}}0{{{b{{Gn{c}}}}e}Cl{HfHh}Ed}{{{b{{H`{c}}}}e}Cl{HfHh}Ed}{bc{}}0{c{{Cl{e}}}{}{}}0{{}{{Cl{c}}}{}}0{bEh}099`{{bd}f}{b{{b{h}}}}{{{b{j}}}{{b{jh}}}}{e{{Cl{fEj}}}El{{Fd{}{{F`{{b{{Hj{c}}}}}}}}Ff}}{b{{b{c}}}{}}{{{b{j}}}{{b{jc}}}{}}{{{b{{Hj{c}}}}}{{Cl{fEj}}}El}{{{b{{Hj{c}}}}}{{Hj{c}}}{ElAl}}{{b{b{jc}}}f{}}{bf}{Cj{{b{c}}}{}}{Cj{{b{jc}}}{}}{c{{Cl{{Hj{e}}}}}CnEl}{{cFnG`}{{Cl{{Hj{e}}Ej}}}GbEl}{Cjf}{{{b{{Hj{c}}}}{b{{Hj{c}}}}}D`{ElBf}}{{b{b{c}}}D`{}}00{{{b{{Hj{c}}}}{b{jDb}}}Dd{ElAn}}{cc{}}{{{b{{Hj{c}}}}{b{je}}}fElDj}{{}Cj}{{}c{}}{{{Dl{c}}}{{Dl{h}}}{}}{{{Dn{c}}}{{Dn{h}}}{}}{{{E`{c}}}{{E`{h}}}{}}{{{b{{Hj{c}}}}e}ClElEd}{{{b{{Hj{c}}}}eFn}{{Cl{fEj}}}ElHd}{{{b{{Hj{c}}}}Fn}CjEl}{bc{}}{c{{Cl{e}}}{}{}}{{}{{Cl{c}}}{}}{bEh}:``{{bd}f}{b{{b{h}}}}{{{b{j}}}{{b{jh}}}}{b{{b{c}}}{}}{{{b{j}}}{{b{jc}}}{}}{{{b{{Hb{c}}}}}{{Hb{c}}}A`}{{b{b{jc}}}f{}}{bf}``{Cj{{b{c}}}{}}{Cj{{b{jc}}}{}}{Cjf}{cc{}}{{}Cj}{{}c{}}{{{Dl{c}}}{{Dl{h}}}{}}{{{Dn{c}}}{{Dn{h}}}{}}{{{E`{c}}}{{E`{h}}}{}}{{{b{Hl}}c{Gl{Cj}}}{{Aj{e}}}{{Ch{{Cf{Cd}}}}}{AlAnBdBfBjBb}}`{{{b{Hl}}{Hb{Hl}}{b{c}}}{{Aj{{Cl{ff}}}}}{AlAnBdBfBjBb}}`{bc{}}{c{{Cl{e}}}{}{}}{{}{{Cl{c}}}{}}{bEh}9``{{{b{{I`{}{{Hn{c}}}}}}e}{{Aj{{Fl{gc}}}}}{AlAnBdBfBhBlBjBb}{{Ch{{Cf{Cd}}}}}{}}{{{b{{I`{}{{Hn{c}}}}}}e{b{c}}}{{Aj{{n{{I`{}{{Hn{c}}}}}}}}}{AlAnBdBfBhBlBjBb}{{Ch{{Cf{Cd}}}}}}","D":"Hn","p":[[1,"reference"],[5,"Private",325],[1,"unit"],[10,"Any",326],[0,"mut"],[10,"Error",327],[5,"VidDisperse",0],[10,"VidScheme",0],[10,"Sized",328],[17,"Commit"],[17,"Share"],[17,"Common"],[8,"VidResult",0],[10,"Clone",329],[10,"Debug",330],[10,"Display",330],[10,"DeserializeOwned",331],[10,"Eq",332],[10,"PartialEq",332],[10,"Hash",333],[10,"Serialize",334],[10,"Sync",328],[5,"TaggedBase64",335],[10,"TryFrom",336],[10,"Into",336],[1,"u8"],[1,"slice"],[10,"AsRef",336],[1,"usize"],[6,"Result",337],[10,"Deserializer",331],[1,"bool"],[5,"Formatter",330],[8,"Result",330],[6,"VidError",0],[1,"u32"],[10,"Hasher",333],[5,"Box",338],[5,"Arc",339],[5,"Rc",340],[5,"Vec",341],[10,"Serializer",334],[5,"String",342],[5,"TypeId",326],[6,"SerializationError",343],[10,"Pairing",344],[10,"HasherDigest",345],[17,"Item"],[5,"Common",76],[10,"Iterator",346],[10,"Send",328],[5,"AdvzInternal",76],[5,"Share",76],[1,"tuple"],[6,"Compress",347],[6,"Validate",347],[10,"Read",348],[10,"MaybeGPU",76],[5,"DensePolynomial",349],[8,"Advz",76],[10,"Borrow",350],[5,"Range",351],[5,"SmallRangeProof",195],[5,"LargeRangeProof",195],[5,"Statement",291],[10,"Write",348],[10,"CanonicalSerialize",347],[10,"CanonicalDeserialize",347],[5,"PrecomputeData",255],[10,"PayloadProver",291],[17,"PrecomputeData"],[10,"Precomputable",321]],"r":[],"b":[[41,"impl-Debug-for-VidError"],[42,"impl-Display-for-VidError"],[166,"impl-PayloadProver%3CSmallRangeProof%3C%3CUnivariateKzgPCS%3CE%3E+as+PolynomialCommitmentScheme%3E::Proof%3E%3E-for-AdvzInternal%3CE,+H,+T%3E"],[167,"impl-PayloadProver%3CLargeRangeProof%3C%3CUnivariateKzgPCS%3CE%3E+as+PolynomialCommitmentScheme%3E::Evaluation%3E%3E-for-AdvzInternal%3CE,+H,+T%3E"],[169,"impl-PayloadProver%3CSmallRangeProof%3C%3CUnivariateKzgPCS%3CE%3E+as+PolynomialCommitmentScheme%3E::Proof%3E%3E-for-AdvzInternal%3CE,+H,+T%3E"],[170,"impl-PayloadProver%3CLargeRangeProof%3C%3CUnivariateKzgPCS%3CE%3E+as+PolynomialCommitmentScheme%3E::Evaluation%3E%3E-for-AdvzInternal%3CE,+H,+T%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAP4AGwAMAAAADgALAB0ABAAjAAgAMQACADYABQBAAAAAQgAHAEsAAQBSADgAjgAHAJkACQCkAAAApwABAKoAAQCtABQAxgAhAOoAAQDuABEAAQETABYBAQAZAQoAJgEHADABAgA0AQAANgECAD0BBAA="}],["jf_vrf",{"t":"RRRRRRRKCNMMMMMGFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Error","Input","Output","Proof","PublicKey","PublicParameter","SecretKey","Vrf","blsvrf","evaluate","key_gen","param_gen","proof_to_hash","prove","verify","BLSVRFCipherSuite","BLSVRFError","BLSVRFScheme","VRF_BLS_12_381_SHA256","VRF_BLS_12_381_SHA512","as_error_source","borrow","","","borrow_mut","","","deref","","","deref_mut","","","drop","","","fmt","","","from","","","init","","","into","","","key_gen","new","param_gen","proof_to_hash","prove","to_string","try_from","","","try_into","","","type_id","","","verify","vzip","",""],"q":[[0,"jf_vrf"],[15,"jf_vrf::blsvrf"],[67,"core::result"],[68,"core::fmt"],[69,"core::clone"],[70,"core::marker"],[71,"serde::de"],[72,"serde::ser"],[73,"core::cmp"],[74,"zeroize"],[75,"core::error"],[76,"rand_core"],[77,"core::option"],[78,"alloc::string"],[79,"core::any"]],"i":"Ab000000``000000```Cj0D`Db210210210210212110210210210000010210210210021","f":"`````````{{{Ad{b{Ab{}{{d{c}}{f{e}}{h{g}}{j{i}}{l{k}}{n{m}}{A`{o}}}}}}{Ad{c}}{Ad{g}}{Ad{k}}{Ad{bAa}}}{{Af{mo}}}{}{AhAjAlAnB`BbBdBf}{AhAjAlAnBhB`BbBdBf}{AhAjAlAnB`BbBdBf}{AhAjAlAnB`BbBdBf}{AhAjAlAnB`BbBdBf}Bj{BlBn}}{{{Ad{{Ab{}{{d{c}}{f{e}}{h{g}}{j{i}}{l{k}}{n{m}}{A`{o}}}}}}{Ad{c}}{Ad{bAa}}}{{Af{{C`{ge}}o}}}{}{AhAjAlAnB`BbBdBf}{AhAjAlAnBhB`BbBdBf}{AhAjAlAnB`BbBdBf}{AhAjAlAnB`BbBdBf}{AhAjAlAnB`BbBdBf}Bj{BlBn}}{{{Ad{{Ab{}{{d{c}}{f{e}}{h{g}}{j{i}}{l{k}}{n{m}}{A`{o}}}}}}{Cb{{Ad{bAa}}}}}{{Af{co}}}{}{AhAjAlAnB`BbBdBf}{AhAjAlAnBhB`BbBdBf}{AhAjAlAnB`BbBdBf}{AhAjAlAnB`BbBdBf}{AhAjAlAnB`BbBdBf}Bj{BlBn}}{{{Ad{b{Ab{}{{d{c}}{f{e}}{h{g}}{j{i}}{l{k}}{n{m}}{A`{o}}}}}}{Ad{c}}{Ad{i}}}{{Af{mo}}}{}{AhAjAlAnB`BbBdBf}{AhAjAlAnBhB`BbBdBf}{AhAjAlAnB`BbBdBf}{AhAjAlAnB`BbBdBf}{AhAjAlAnB`BbBdBf}Bj}{{{Ad{{Ab{}{{d{c}}{f{e}}{h{g}}{j{i}}{l{k}}{n{m}}{A`{o}}}}}}{Ad{c}}{Ad{g}}{Ad{k}}{Ad{bAa}}}{{Af{io}}}{}{AhAjAlAnB`BbBdBf}{AhAjAlAnBhB`BbBdBf}{AhAjAlAnB`BbBdBf}{AhAjAlAnB`BbBdBf}{AhAjAlAnB`BbBdBf}Bj{BlBn}}{{{Ad{b{Ab{}{{d{c}}{f{e}}{h{g}}{j{i}}{l{k}}{n{m}}{A`{o}}}}}}{Ad{c}}{Ad{i}}{Ad{e}}{Ad{k}}}{{Af{{C`{Cd{Cb{m}}}}o}}}{}{AhAjAlAnB`BbBdBf}{AhAjAlAnBhB`BbBdBf}{AhAjAlAnB`BbBdBf}{AhAjAlAnB`BbBdBf}{AhAjAlAnB`BbBdBf}Bj}`````{Ad{{Ad{Bj}}}}{Ad{{Ad{c}}}{}}00{{{Ad{b}}}{{Ad{bc}}}{}}00{Cf{{Ad{c}}}{}}00{Cf{{Ad{bc}}}{}}00{CfCh}00{{{Ad{Cj}}{Ad{bCl}}}Cn}{{{Ad{D`}}{Ad{bCl}}}Cn}0{cc{}}00{{}Cf}00{{}c{}}00{{{Ad{Db}}{Ad{c}}{Ad{be}}}{{Af{{C`{gi}}D`}}}{}{BlBn}{}{}}{CjDb}{{{Ad{Db}}{Cb{{Ad{bc}}}}}{{Af{eD`}}}{BlBn}{}}{{{Ad{bDb}}{Ad{c}}{Ad{e}}}{{Af{gD`}}}{}{}{}}{{{Ad{Db}}{Ad{c}}{Ad{e}}{Ad{g}}{Ad{bi}}}{{Af{kD`}}}{}{}{}{BlBn}{}}{AdDd}{c{{Af{e}}}{}{}}00{{}{{Af{c}}}{}}00{AdDf}00{{{Ad{bDb}}{Ad{c}}{Ad{e}}{Ad{g}}{Ad{i}}}{{Af{{C`{Cd{Cb{k}}}}D`}}}{}{}{}{}{}}:::","D":"Db","p":[[0,"mut"],[17,"PublicParameter"],[17,"PublicKey"],[17,"SecretKey"],[17,"Proof"],[17,"Input"],[17,"Output"],[17,"Error"],[10,"Vrf",0],[1,"reference"],[6,"Result",67],[10,"Debug",68],[10,"Clone",69],[10,"Send",70],[10,"Sync",70],[10,"Deserialize",71],[10,"Serialize",72],[10,"PartialEq",73],[10,"Eq",73],[10,"Zeroize",74],[10,"Error",75],[10,"CryptoRng",76],[10,"RngCore",76],[1,"tuple"],[6,"Option",77],[1,"bool"],[1,"usize"],[1,"unit"],[6,"BLSVRFCipherSuite",15],[5,"Formatter",68],[8,"Result",68],[5,"BLSVRFError",15],[5,"BLSVRFScheme",15],[5,"String",78],[5,"TypeId",79]],"r":[],"b":[[37,"impl-Debug-for-BLSVRFError"],[38,"impl-Display-for-BLSVRFError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACIABAAVABIAKwACADYACQBBAAIA"}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[2926,495,293,3877,25062,14009,20099,479,31099,7228,2130,3385,11335,3440]}