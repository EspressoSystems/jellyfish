var searchIndex = new Map(JSON.parse('[\
["jf_aead",{"t":"FFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["AEADError","Ciphertext","EncKey","KeyPair","batch_check","batch_check","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","check","check","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","decrypt","default","default","deserialize","deserialize","deserialize","deserialize_with_mode","deserialize_with_mode","deserialize_with_mode","enc_key","enc_key_ref","encrypt","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","generate","hash","hash","hash","into","into","into","into","partial_cmp","serialize","serialize","serialize","serialize_with_mode","serialize_with_mode","serialize_with_mode","serialized_size","serialized_size","serialized_size","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip"],"q":[[0,"jf_aead"],[91,"ark_serialize::error"],[92,"core::result"],[93,"core::iter::traits::iterator"],[94,"core::marker"],[95,"core::cmp"],[96,"alloc::vec"],[97,"serde::de"],[98,"ark_serialize"],[99,"std::io"],[100,"rand_core"],[101,"core::fmt"],[102,"core::hash"],[103,"core::option"],[104,"serde::ser"],[105,"alloc::string"],[106,"core::any"]],"i":[0,0,0,0,5,9,11,12,5,9,11,12,5,9,11,5,9,11,12,5,9,11,12,5,9,12,5,11,5,11,5,9,11,5,9,5,5,11,11,12,5,9,11,12,12,5,9,11,11,12,5,9,5,11,12,9,11,12,5,9,12,11,5,9,11,5,9,11,5,9,11,12,5,9,12,11,12,5,9,11,12,5,9,11,12,5,9,11,12,5,9],"f":"````{c{{f{bd}}}{{n{}{{h{{l{j}}}}}}A`}}{c{{f{bd}}}{{n{}{{h{{l{Ab}}}}}}A`}}{{{l{c}}}{{l{e}}}{}{}}000{{{l{Adc}}}{{l{Ade}}}{}{}}000{{{l{Af}}}{{f{bd}}}}{{{l{j}}}{{f{bd}}}}{{{l{Ab}}}{{f{bd}}}}{{{l{Af}}}Af}{{{l{Ah}}}Ah}{{{l{j}}}j}{{{l{Ab}}}Ab}{{{l{c}}{l{Ade}}}b{}{}}000{{{l{Ah}}{l{Ah}}}Aj}{{{l{j}}{l{Ab}}{l{{An{Al}}}}}{{f{{B`{Al}}Ah}}}}{{}Af}{{}j}{c{{f{Af}}}Bb}{c{{f{j}}}Bb}{c{{f{Ab}}}Bb}{{cBdBf}{{f{Afd}}}Bh}{{cBdBf}{{f{jd}}}Bh}{{cBdBf}{{f{Abd}}}Bh}{{{l{j}}}Af}{{{l{j}}}{{l{Af}}}}{{{l{Af}}c{l{{An{Al}}}}{l{{An{Al}}}}}{{f{AbAh}}}{BjBl}}{{{l{Af}}{l{Af}}}Bn}{{{l{Ah}}{l{Ah}}}Bn}{{{l{j}}{l{j}}}Bn}{{{l{Ab}}{l{Ab}}}Bn}{{{l{Af}}{l{AdC`}}}Cb}{{{l{Ah}}{l{AdC`}}}Cb}0{{{l{j}}{l{AdC`}}}Cb}{{{l{Ab}}{l{AdC`}}}Cb}{cc{}}{{{Cd{Al}}}Af}111{{{l{Adc}}}j{BjBl}}{{{l{Af}}{l{Adc}}}bCf}{{{l{Ah}}{l{Adc}}}bCf}{{{l{Ab}}{l{Adc}}}bCf}{ce{}{}}000{{{l{Ah}}{l{Ah}}}{{Ch{Aj}}}}{{{l{Af}}c}fCj}{{{l{j}}c}fCj}{{{l{Ab}}c}fCj}{{{l{Af}}cBd}{{f{bd}}}Cl}{{{l{j}}cBd}{{f{bd}}}Cl}{{{l{Ab}}cBd}{{f{bd}}}Cl}{{{l{Af}}Bd}Cn}{{{l{j}}Bd}Cn}{{{l{Ab}}Bd}Cn}{{{l{c}}}e{}{}}000{{{l{c}}}D`{}}{c{{f{e}}}{}{}}0000000{{{l{c}}}Db{}}000>>>>","D":"Bd","p":[[1,"unit"],[6,"SerializationError",91],[6,"Result",92],[17,"Item"],[5,"KeyPair",0],[1,"reference"],[10,"Iterator",93],[10,"Send",94],[5,"Ciphertext",0],[0,"mut"],[5,"EncKey",0],[5,"AEADError",0],[6,"Ordering",95],[1,"u8"],[1,"slice"],[5,"Vec",96],[10,"Deserializer",97],[6,"Compress",98],[6,"Validate",98],[10,"Read",99],[10,"RngCore",100],[10,"CryptoRng",100],[1,"bool"],[5,"Formatter",101],[8,"Result",101],[1,"array"],[10,"Hasher",102],[6,"Option",103],[10,"Serializer",104],[10,"Write",99],[1,"usize"],[5,"String",105],[5,"TypeId",106]],"r":[],"b":[[43,"impl-Display-for-AEADError"],[44,"impl-Debug-for-AEADError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEkABgAFABUAHAAHACcACAAxAAAANgACAD0AHgA="}],\
["jf_commitment",{"t":"KRRRRMM","n":["CommitmentScheme","Error","Input","Output","Randomness","commit","verify"],"q":[[0,"jf_commitment"],[7,"core::option"],[8,"core::result"],[9,"core::borrow"]],"i":[0,6,6,6,6,6,6],"f":"`````{{e{d{{b{g}}}}}{{f{ik}}}{}{{h{c}}}{}{}{}}{{e{d{{b{g}}}}{b{i}}}{{f{{f{jj}}k}}}{}{{h{c}}}{}{}{}}","D":"n","p":[[1,"reference"],[6,"Option",7],[6,"Result",8],[10,"Borrow",9],[1,"unit"],[10,"CommitmentScheme",0]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAEA"}],\
["jf_crhf",{"t":"KRRRM","n":["CRHF","Error","Input","Output","evaluate"],"q":[[0,"jf_crhf"],[5,"core::result"],[6,"core::borrow"]],"i":[0,3,3,3,3],"f":"````{e{{b{gi}}}{}{{d{c}}}{}{}}","D":"l","p":[[6,"Result",5],[10,"Borrow",6],[10,"CRHF",0]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["jf_elgamal",{"t":"FFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Ciphertext","EncKey","KeyPair","ParameterError","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","batch_check","batch_check","batch_check","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","check","check","clone","clone","clone","clone_into","clone_into","clone_into","decrypt","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize_with_mode","deserialize_with_mode","deserialize_with_mode","deterministic_encrypt","drop","drop","drop","drop","enc_key","enc_key_ref","encrypt","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_scalars","generate","hash","hash","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","rand","serialize_with_mode","serialize_with_mode","serialize_with_mode","serialized_size","serialized_size","serialized_size","to_owned","to_owned","to_owned","to_scalars","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","zeroize"],"q":[[0,"jf_elgamal"],[127,"dyn_clone::sealed"],[128,"core::any"],[129,"ark_serialize::error"],[130,"core::result"],[131,"ark_ec::models::twisted_edwards"],[132,"core::iter::traits::iterator"],[133,"core::marker"],[134,"alloc::vec"],[135,"jf_rescue"],[136,"ark_serialize"],[137,"std::io"],[138,"rand_core"],[139,"core::fmt"],[140,"core::hash"],[141,"alloc::boxed"],[142,"alloc::sync"],[143,"alloc::rc"],[144,"rand::rng"],[145,"alloc::string"]],"i":[0,0,0,0,10,13,14,26,10,13,14,26,10,13,14,10,13,14,26,10,13,14,26,10,13,14,10,13,14,10,13,14,10,13,14,13,10,26,10,13,14,26,10,13,14,10,13,14,10,26,10,13,14,13,13,10,10,13,14,10,10,10,14,14,14,26,26,10,13,14,26,10,13,14,14,13,10,14,26,10,13,14,26,10,13,14,26,10,13,14,26,10,13,14,26,10,13,14,10,10,13,14,10,13,14,10,13,14,14,26,26,10,13,14,26,10,13,14,26,10,13,14,26,10,13,14,10],"f":"````{{{b{c}}d}f{}}00{{{b{c}}}{{b{h}}}{}}000{{{b{jc}}}{{b{jh}}}{}}000{e{{n{fl}}}A`{{Af{}{{Ab{{b{{Ad{c}}}}}}}}Ah}}{e{{n{fl}}}A`{{Af{}{{Ab{{b{{Aj{c}}}}}}}}Ah}}{e{{n{fl}}}A`{{Af{}{{Ab{{b{{Al{c}}}}}}}}Ah}}{{{b{c}}}{{b{e}}}{}{}}000{{{b{jc}}}{{b{je}}}{}{}}000{{{b{{Ad{c}}}}}{{n{fl}}}A`}{{{b{{Aj{c}}}}}{{n{fl}}}A`}{{{b{{Al{c}}}}}{{n{fl}}}A`}{{{b{{Ad{c}}}}}{{Ad{c}}}A`}{{{b{{Aj{c}}}}}{{Aj{c}}}A`}{{{b{{Al{c}}}}}{{Al{c}}}A`}{{{b{c}}{b{je}}}f{}{}}00{{{b{{Aj{e}}}}{b{{Al{e}}}}}{{An{c}}}B`{{A`{}{{Bb{c}}}}}}{{}{{Ad{c}}}A`}{Bd{{b{c}}}{}}000{Bd{{b{jc}}}{}}000{{cBfBh}{{n{{Ad{e}}l}}}BjA`}{{cBfBh}{{n{{Aj{e}}l}}}BjA`}{{cBfBh}{{n{{Al{e}}l}}}BjA`}{{{b{{Ad{e}}}}{b{{Bl{c}}}}}{{Al{e}}}B`{{A`{}{{Bb{c}}}}}}{Bdf}000{{{b{{Aj{c}}}}}{{Ad{c}}}A`}{{{b{{Aj{c}}}}}{{b{{Ad{c}}}}}A`}{{{b{{Ad{e}}}}{b{jg}}{b{Bl}}}{{Al{e}}}B`{{A`{}{{Bb{c}}}}}{BnC`}}{{{b{{Ad{c}}}}{b{{Ad{c}}}}}CbA`}{{{b{{Aj{c}}}}{b{{Aj{c}}}}}CbA`}{{{b{{Al{c}}}}{b{{Al{c}}}}}CbA`}{{{b{c}}{b{e}}}Cb{}{}}00000{{{b{Cd}}{b{jCf}}}Ch}0{{{b{{Ad{c}}}}{b{jCf}}}ChA`}{{{b{{Aj{c}}}}{b{jCf}}}ChA`}{{{b{{Al{c}}}}{b{jCf}}}ChA`}{cc{}}000{{{b{Bl}}}{{n{{Al{c}}Cd}}}A`}{{{b{jc}}}{{Aj{e}}}{BnC`}A`}{{{b{{Ad{c}}}}{b{je}}}fA`Cj}{{{b{{Al{c}}}}{b{je}}}fA`Cj}{{}Bd}000{ce{}{}}000{{{Cl{c}}}{{Cl{h}}}{}}000{{{Cn{c}}}{{Cn{h}}}{}}000{{{D`{c}}}{{D`{h}}}{}}000{{{b{jc}}}{{Ad{e}}}{DbC`Dd}A`}{{{b{{Ad{c}}}}eBf}{{n{fl}}}A`Df}{{{b{{Aj{c}}}}eBf}{{n{fl}}}A`Df}{{{b{{Al{c}}}}eBf}{{n{fl}}}A`Df}{{{b{{Ad{c}}}}Bf}BdA`}{{{b{{Aj{c}}}}Bf}BdA`}{{{b{{Al{c}}}}Bf}BdA`}{{{b{c}}}e{}{}}00{{{b{{Al{c}}}}}AnA`}{{{b{c}}}Dh{}}{c{{n{e}}}{}{}}0000000{{{b{c}}}Dj{}}000????{{{b{j{Ad{c}}}}}fA`}","D":"Bj","p":[[1,"reference"],[5,"Private",127],[1,"unit"],[10,"Any",128],[0,"mut"],[6,"SerializationError",129],[6,"Result",130],[10,"TECurveConfig",131],[17,"Item"],[5,"EncKey",0],[10,"Iterator",132],[10,"Send",133],[5,"KeyPair",0],[5,"Ciphertext",0],[5,"Vec",134],[10,"RescueParameter",135],[17,"BaseField"],[1,"usize"],[6,"Compress",136],[6,"Validate",136],[10,"Read",137],[1,"slice"],[10,"CryptoRng",138],[10,"RngCore",138],[1,"bool"],[5,"ParameterError",0],[5,"Formatter",139],[8,"Result",139],[10,"Hasher",140],[5,"Box",141],[5,"Arc",142],[5,"Rc",143],[10,"Rng",144],[10,"Sized",133],[10,"Write",137],[5,"String",145],[5,"TypeId",128]],"r":[],"b":[[65,"impl-Debug-for-ParameterError"],[66,"impl-Display-for-ParameterError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAGoABwAFAB4AJQALADIAAwA5AA0ATQAFAFcAFQBuABEA"}],\
["jf_merkle_tree",{"t":"TKRRRKKRKKKRGRKEKKRRPPPKKKNCNNNNMNNMNNMMMNNNNNCCNNNNNMNMNCMMQQQQNNNNNMCMCCMMMNNMCMMNMNMNNNMMCNMMNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPGPPNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNNNNNNRRIKFIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRFKRRRKRKKRNNNNNNNNNNNNNNNNNNNNNMMMMNNNNNNNNNNNMMNNNNNNNNMNMNNEPEEPEEPEPIEEGIFEEEFIIIIFFEEENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQQNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["ARITY","AppendableMerkleTreeScheme","BatchMembershipProof","BatchNonMembershipProof","Commitment","DigestAlgorithm","Element","Element","ForgetableMerkleTreeScheme","ForgetableUniversalMerkleTreeScheme","Index","Index","LookupResult","MembershipProof","MerkleCommitment","MerkleTreeError","MerkleTreeScheme","NodeValue","NodeValue","NonMembershipProof","NotFound","NotInMemory","Ok","PersistentUniversalMerkleTreeScheme","ToTraversalPath","UniversalMerkleTreeScheme","__clone_box","append_only","as_any","as_any_mut","borrow","borrow_mut","capacity","clone","clone_into","commitment","deref","deref_mut","digest","digest","digest_leaf","drop","eq","equivalent","equivalent","equivalent","errors","examples","expect_not_found","expect_not_in_memory","expect_ok","extend","fmt","forget","from","from_commitment","hash","hasher","height","height","impl_forgetable_merkle_tree_scheme","impl_merkle_tree_scheme","impl_to_traversal_path_biguint","impl_to_traversal_path_primitives","init","into","into_any","into_any_arc","into_any_rc","iter","light_weight","lookup","macros","namespaced_merkle_tree","non_membership_remember","non_membership_verify","num_leaves","persistent_remove","persistent_update","persistent_update_with","prelude","push","remember","remove","size","to_owned","to_traversal_path","try_from","try_into","type_id","universal_forget","universal_lookup","universal_merkle_tree","update","update_with","verify","vzip","MerkleTree","__clone_box","as_any","as_any_mut","borrow","borrow_mut","capacity","clone","clone_into","commitment","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","extend","fmt","forget","from","from_commitment","from_elems","hash","height","init","into","into_any","into_any_arc","into_any_rc","into_iter","into_iter","iter","lookup","new","num_leaves","push","remember","serialize","to_owned","try_from","try_into","type_id","verify","vzip","DigestError","ExceedCapacity","ExistingLeaf","ForgottenLeaf","InconsistentStructureError","MerkleTreeError","NotFound","ParametersError","as_any","as_any_mut","as_error_source","borrow","borrow_mut","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","init","into","into_any","into_any_arc","into_any_rc","to_string","try_from","try_into","type_id","vzip","Interval","IntervalMerkleTree","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","from","hash","init","into","into_any","into_any_arc","into_any_rc","to_owned","try_from","try_into","type_id","vzip","Bar","Foo","GenericHasherMerkleTree","HasherDigest","HasherDigestAlgorithm","HasherMerkleTree","HasherNode","__clone_box","as_any","as_any","as_any_mut","as_any_mut","as_ref","borrow","borrow","borrow_mut","borrow_mut","check","clone","clone_into","cmp","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize_with_mode","digest","digest_leaf","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from_str","hash","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","partial_cmp","serialize","serialize_with_mode","serialized_size","tag","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","LightWeightMerkleTree","__clone_box","as_any","as_any_mut","borrow","borrow_mut","capacity","clone","clone_into","commitment","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","extend","fmt","forget","from","from_commitment","from_elems","hash","height","init","into","into_any","into_any_arc","into_any_rc","into_iter","into_iter","iter","lookup","new","num_leaves","push","remember","serialize","to_owned","try_from","try_into","type_id","verify","vzip","BindNamespace","Leaf","NMT","Namespace","Namespace","Namespace","NamespaceId","NamespaceProof","NamespaceProof","Namespaced","NamespacedMerkleTreeScheme","Node","__clone_box","as_any","as_any_mut","borrow","borrow_mut","capacity","clone","clone_into","commitment","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","extend","fmt","from","from_elems","generate_namespaced_commitment","get_namespace","get_namespace_leaves","get_namespace_proof","get_namespace_proof","hash","height","init","into","into_any","into_any_arc","into_any_rc","iter","leaves","lookup","max","min","new","num_leaves","push","serialize","to_owned","try_from","try_into","type_id","verify","verify","verify_namespace_proof","verify_namespace_proof","vzip","AppendableMerkleTreeScheme","Branch","DigestAlgorithm","Element","Empty","ForgetableMerkleTreeScheme","ForgetableUniversalMerkleTreeScheme","ForgettenSubtree","Index","Leaf","LightWeightSHA3MerkleTree","LookupResult","MerkleCommitment","MerkleNode","MerklePath","MerkleProof","MerkleTree","MerkleTreeScheme","NodeValue","RescueHash","RescueLightWeightMerkleTree","RescueMerkleTree","RescueSparseMerkleTree","SHA3MerkleTree","Sha3Digest","Sha3Node","ToTraversalPath","UniversalMerkleTree","UniversalMerkleTreeScheme","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize_with_mode","digest","digest","digest","digest_leaf","digest_leaf","digest_leaf","drop","drop","drop","drop","drop","elem","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","generate_namespaced_commitment","hash","hash","hash","hash","impl_to_traversal_path_biguint","impl_to_traversal_path_primitives","index","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","new","partial_cmp","pos","proof","serialize","serialize","serialize_with_mode","serialized_size","to_owned","to_owned","to_owned","to_owned","to_owned","tree_height","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","children","elem","pos","value","value","value","UniversalMerkleTree","__clone_box","as_any","as_any_mut","borrow","borrow_mut","capacity","clone","clone_into","commitment","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","forget","from","from_commitment","from_kv_set","hash","height","init","into","into_any","into_any_arc","into_any_rc","into_iter","into_iter","iter","lookup","new","non_membership_remember","non_membership_verify","num_leaves","persistent_update_with","remember","serialize","to_owned","try_from","try_into","type_id","universal_forget","universal_lookup","update_with","verify","vzip"],"q":[[0,"jf_merkle_tree"],[97,"jf_merkle_tree::append_only"],[143,"jf_merkle_tree::errors"],[177,"jf_merkle_tree::examples"],[205,"jf_merkle_tree::hasher"],[275,"jf_merkle_tree::light_weight"],[321,"jf_merkle_tree::namespaced_merkle_tree"],[384,"jf_merkle_tree::prelude"],[574,"jf_merkle_tree::prelude::MerkleNode"],[580,"jf_merkle_tree::universal_merkle_tree"],[630,"dyn_clone::sealed"],[631,"core::any"],[632,"num_bigint::biguint"],[633,"core::clone"],[634,"core::cmp"],[635,"core::hash"],[636,"core::result"],[637,"core::borrow"],[638,"core::iter::traits::collect"],[639,"core::fmt"],[640,"alloc::boxed"],[641,"alloc::sync"],[642,"alloc::rc"],[643,"core::option"],[644,"core::ops::function"],[645,"alloc::vec"],[646,"serde::de"],[647,"ark_serialize"],[648,"serde::ser"],[649,"core::error"],[650,"jf_rescue"],[651,"alloc::string"],[652,"ark_ff::fields"],[653,"crypto_common"],[654,"digest::digest"],[655,"ark_serialize::error"],[656,"std::io"],[657,"tagged_base64"],[658,"core::iter::traits::exact_size"],[659,"jf_merkle_tree::internal"],[660,"core::convert"]],"i":[12,0,12,44,12,0,0,12,0,0,0,12,0,12,0,0,0,0,12,44,21,21,21,0,0,0,21,0,21,21,21,21,12,21,21,12,21,21,54,20,54,21,21,21,21,21,0,0,21,21,21,29,21,36,21,36,21,0,20,12,0,0,0,0,21,21,21,21,21,12,0,12,0,0,41,44,12,46,46,46,0,29,36,44,20,21,50,21,21,21,41,44,0,44,44,12,21,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,24,24,24,24,24,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,72,72,0,0,0,0,0,64,99,64,99,64,64,99,64,99,64,64,64,64,64,64,99,64,99,64,64,64,99,99,99,64,64,64,64,64,64,64,99,64,64,64,64,99,64,99,64,99,64,99,64,99,64,64,64,64,64,64,64,64,99,64,64,64,99,64,99,64,99,64,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,0,84,0,0,84,80,87,0,87,0,0,84,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,81,80,84,87,77,77,77,77,77,77,77,77,77,77,77,78,78,77,77,77,77,77,77,77,77,84,77,87,77,77,0,91,0,0,91,0,0,91,0,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,92,93,89,95,91,92,93,89,95,91,92,93,89,95,89,91,92,93,89,95,91,92,93,89,95,89,91,92,93,89,95,91,92,93,89,95,89,89,91,92,93,89,95,91,92,93,89,95,91,92,89,93,93,95,93,93,95,91,92,93,89,95,92,91,92,93,89,95,91,91,91,92,92,92,93,93,93,89,89,89,95,95,95,91,92,93,89,95,91,92,93,89,95,95,91,92,89,95,0,0,92,91,92,93,89,95,91,92,93,89,95,91,92,93,89,95,91,92,93,89,95,91,92,93,89,95,92,89,92,92,91,92,89,89,91,92,93,89,95,92,91,92,93,89,95,91,92,93,89,95,91,92,93,89,95,91,92,93,89,95,100,101,101,100,101,102,0,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98],"f":"``````````````````````````{{{b{c}}d}f{}}`{{{b{c}}}{{b{h}}}{}}{{{b{jc}}}{{b{jh}}}{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{jc}}}{{b{je}}}{}{}}{{{b{{Ah{}{{l{c}}{n{e}}{A`{g}}{Ab{i}}{Ad{k}}{Af{m}}}}}}}AjAlAnB`{BbBdBf}Bb{{Bh{g}}}}{{{b{{Bj{ceg}}}}}{{Bj{ceg}}}BbBbBb}{{{b{c}}{b{je}}}f{}{}}{{{b{{Ah{}{{l{c}}{n{e}}{A`{g}}{Ab{i}}{Ad{k}}{Af{m}}}}}}}mAlAnB`{BbBdBf}Bb{{Bh{g}}}}{Bl{{b{c}}}{}}{Bl{{b{jc}}}{}}{{{b{{Bn{c}}}}}{{Cb{cC`}}}B`}{{{b{Bh}}}cB`}{{{b{c}}{b{e}}}{{Cb{gC`}}}AnAlB`}{Blf}{{{b{{Bj{ceg}}}}{b{{Bj{ceg}}}}}CdCfCfCf}{{{b{c}}{b{e}}}Cd{}{}}00``{{{Bj{ceg}}}{{Cb{gC`}}}{}{}{}}{{{Bj{ceg}}}{{Cb{fC`}}}{}{}{}}{{{Bj{ceg}}}{{Cb{{Ch{ce}}C`}}}{}{}{}}{{{b{jCj}}g}{{Cb{fC`}}}{}{{Cl{c}}}{{D`{}{{Cn{e}}}}}}{{{b{{Bj{ceg}}}}{b{jDb}}}DdDfDfDf}{{{b{jDh}}e}{{Bj{gif}}}{}{{Cl{c}}}{}{}}{cc{}}{eDh{}{{Cl{c}}}}{{{b{{Bj{ceg}}}}{b{ji}}}fBfBfBfDj}`{{{b{Bh}}}Bl}{{{b{{Ah{}{{l{c}}{n{e}}{A`{g}}{Ab{i}}{Ad{k}}{Af{m}}}}}}}BlAlAnB`{BbBdBf}Bb{{Bh{g}}}}````{{}Bl}{ce{}{}}{{{Dl{c}}}{{Dl{h}}}{}}{{{Dn{c}}}{{Dn{h}}}{}}{{{E`{c}}}{{E`{h}}}{}}{{{b{{Ah{}{{l{c}}{n{e}}{A`{g}}{Ab{i}}{Ad{k}}{Af{m}}}}}}}{{`{ceg}}}AlAnB`{BbBdBf}Bb{{Bh{g}}}}`{{{b{{Ah{}{{l{c}}{n{e}}{A`{g}}{Ab{i}}{Ad{k}}{Af{m}}}}}}o}{{Bj{{b{c}}if}}}AlAnB`{BbBdBf}Bb{{Bh{g}}}{{Cl{e}}}}``{{{b{jEb}}cg}{{Cb{fC`}}}{}{}{{Cl{e}}}}{{{b{{Eh{}{{Ed{c}}{Ef{e}}}}}}ik}{{Cb{CdC`}}}{}{}{}{{Cl{g}}}{{Cl{c}}}}{{{b{{Ah{}{{l{c}}{n{e}}{A`{g}}{Ab{i}}{Ad{k}}{Af{m}}}}}}}EjAlAnB`{BbBdBf}Bb{{Bh{g}}}}{{{b{El}}c}{{Cb{ElC`}}}{}}{{{b{El}}ei}{{Cb{ElC`}}}{}{{Cl{c}}}{}{{Cl{g}}}}{{{b{El}}ei}{{Cb{ElC`}}}{}{{Cl{c}}}{}{{Fb{{En{{b{g}}}}}{{F`{{En{g}}}}}}}}`{{{b{jCj}}e}{{Cb{fC`}}}{}{{Cl{c}}}}{{{b{jDh}}eim}{{Cb{fC`}}}{}{{Cl{c}}}{}{{Cl{g}}}{}{{Cl{k}}}}{{{b{j{Eh{}{{Ed{c}}{Ef{e}}}}}}i}{{Cb{{Bj{kff}}C`}}}{}{}{}{{Cl{g}}}{}}{{{b{Bh}}}Ej}{{{b{c}}}e{}{}}{{{b{Fd}}Bl}{{Ff{Bl}}}}{c{{Cb{e}}}{}{}}0{{{b{c}}}Fh{}}{{{b{jEb}}c}{{Bj{egi}}}{}{}{}{}}{{{b{{Eh{}{{Ed{c}}{Ef{e}}}}}}i}{{Bj{{b{k}}mc}}}{}{}{}{{Cl{g}}}{}{}}`{{{b{j{Eh{}{{Ed{c}}{Ef{e}}}}}}im}{{Cb{{Bj{kff}}C`}}}{}{}{}{{Cl{g}}}{}{{Cl{k}}}}{{{b{j{Eh{}{{Ed{c}}{Ef{e}}}}}}im}{{Cb{{Bj{kff}}C`}}}{}{}{}{{Cl{g}}}{}{{Fb{{En{{b{k}}}}}{{F`{{En{k}}}}}}}}{{eim}{{Cb{{Cb{ff}}C`}}}{}{{Cl{c}}}{}{{Cl{g}}}{}{{Cl{k}}}}{ce{}{}}`{{{b{c}}d}f{}}{{{b{c}}}{{b{h}}}{}}{{{b{jc}}}{{b{jh}}}{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{jc}}}{{b{je}}}{}{}}{{{b{{Fj{cieg}}}}}AjAl{AnFd}B`{{Fl{ceg}}}}{{{b{{Fj{cieg}}}}}{{Fj{cieg}}}{AlBb}{AnBb}{B`Bb}{{Fl{ceg}}Bb}}{{{b{c}}{b{je}}}f{}{}}{{{b{{Fj{cieg}}}}}kAl{AnFd}B`{{Fl{ceg}}}{}}{Bl{{b{c}}}{}}{Bl{{b{jc}}}{}}{c{{Cb{{Fj{ekgi}}}}}Fn{AlG`Gb}{AnG`Gb}B`{{Fl{egi}}}}{Blf}{{{b{{Fj{cieg}}}}{b{{Fj{cieg}}}}}Cd{AlCf}{AnCf}{B`Cf}{{Fl{ceg}}Cf}}{{{b{c}}{b{e}}}Cd{}{}}00{{{b{j{Fj{cgEje}}}}m}{{Cb{fC`}}}AlB`{{Fl{cEje}}}{}{{Cl{i}}}{{D`{}{{Cn{k}}}}}}{{{b{{Fj{cieg}}}}{b{jDb}}}Dd{AlDf}{AnDf}{B`Df}{{Fl{ceg}}Df}}{{{b{j{Fj{cieg}}}}m}{{Bj{oAaf}}}Al{AnFd}B`{{Fl{ceg}}}{}{{Cl{k}}}{}{}}{cc{}}{e{{Fj{gmik}}}{}{{Cl{c}}}Al{AnFd}B`{{Fl{gik}}}}{{{En{Bl}}g}{{Cb{{Fj{ckEji}}C`}}}Al{{Cl{c}}}{{D`{}{{Cn{e}}}}}B`{{Fl{cEji}}}}{{{b{{Fj{cieg}}}}{b{jk}}}f{AlBf}{AnBf}{B`Bf}{{Fl{ceg}}Bf}Dj}{{{b{{Fj{cieg}}}}}BlAl{AnFd}B`{{Fl{ceg}}}}{{}Bl}{ce{}{}}{{{Dl{c}}}{{Dl{h}}}{}}{{{Dn{c}}}{{Dn{h}}}{}}{{{E`{c}}}{{E`{h}}}{}}{{{b{{Fj{cieg}}}}}kAl{AnFd}B`{{Fl{ceg}}}{}}{{{Fj{cieg}}}kAl{AnFd}B`{{Fl{ceg}}}{}}{{{b{{Fj{cieg}}}}}{{`{ceg}}}Al{AnFd}B`{{Fl{ceg}}}}{{{b{{Fj{cieg}}}}m}{{Bj{{b{o}}Aaf}}}Al{AnFd}B`{{Fl{ceg}}}{}{{Cl{k}}}{}{}}{Bl{{Fj{cieg}}}AlAnB`{{Fl{ceg}}}}{{{b{{Fj{cieg}}}}}EjAl{AnFd}B`{{Fl{ceg}}}}{{{b{j{Fj{cgEje}}}}k}{{Cb{fC`}}}AlB`{{Fl{cEje}}}{}{{Cl{i}}}}{{{b{j{Fj{cieg}}}}mAaAe}{{Cb{fC`}}}Al{AnFd}B`{{Fl{ceg}}}{}{{Cl{k}}}{}{{Cl{o}}}{}{{Cl{Ac}}}}{{{b{{Fj{cieg}}}}k}Cb{AlG`Gb}{AnG`Gb}B`{{Fl{ceg}}}Gd}{{{b{c}}}e{}{}}{c{{Cb{e}}}{}{}}0{{{b{c}}}Fh{}}{{eim}{{Cb{{Cb{ff}}C`}}}{}{{Cl{c}}}{}{{Cl{g}}}{}{{Cl{k}}}}{ce{}{}}````````{{{b{c}}}{{b{h}}}{}}{{{b{jc}}}{{b{jh}}}{}}{{{b{c}}}{{b{Gf}}}{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{jc}}}{{b{je}}}{}{}}{Bl{{b{c}}}{}}{Bl{{b{jc}}}{}}{Blf}{{{b{C`}}{b{C`}}}Cd}{{{b{c}}{b{e}}}Cd{}{}}00{{{b{C`}}{b{jDb}}}Dd}0{GhC`}{cc{}}{{}Bl}>{{{Dl{c}}}{{Dl{h}}}{}}{{{Dn{c}}}{{Dn{h}}}{}}{{{E`{c}}}{{E`{h}}}{}}{{{b{c}}}Gj{}}{c{{Cb{e}}}{}{}}0{{{b{c}}}Fh{}}{ce{}{}}``{{{b{c}}d}f{}}{{{b{c}}}{{b{h}}}{}}{{{b{jc}}}{{b{jh}}}{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{jc}}}{{b{je}}}{}{}}{{{b{{Gl{c}}}}}{{Gl{c}}}{BbGn}}{{{b{c}}{b{je}}}f{}{}}{Bl{{b{c}}}{}}{Bl{{b{jc}}}{}}{Blf}{{{b{{Gl{c}}}}{b{{Gl{c}}}}}Cd{CfGn}}{{{b{c}}{b{e}}}Cd{}{}}00{cc{}}{{{b{{Gl{c}}}}{b{je}}}f{BfGn}Dj}{{}Bl}?{{{Dl{c}}}{{Dl{h}}}{}}{{{Dn{c}}}{{Dn{h}}}{}}{{{E`{c}}}{{E`{h}}}{}}{{{b{c}}}e{}{}}{c{{Cb{e}}}{}{}}0{{{b{c}}}Fh{}}{ce{}{}}```````{{{b{c}}d}f{}}{{{b{c}}}{{b{h}}}{}}0{{{b{jc}}}{{b{jh}}}{}}0{{{b{{H`{c}}}}}{{b{{Hb{c}}}}}Hd}{{{b{c}}}{{b{e}}}{}{}}0{{{b{jc}}}{{b{je}}}{}{}}0{{{b{{H`{c}}}}}{{Cb{fHf}}}Hd}{{{b{{H`{c}}}}}{{H`{c}}}Hd}{{{b{c}}{b{je}}}f{}{}}{{{b{{H`{c}}}}{b{{H`{c}}}}}HhHd}{{}{{H`{c}}}Hd}{Bl{{b{c}}}{}}0{Bl{{b{jc}}}{}}0{c{{Cb{{H`{e}}}}}FnHd}{{cHjHl}{{Cb{{H`{e}}Hf}}}HnHd}{{{b{{Bn{{H`{c}}}}}}}{{Cb{{H`{c}}C`}}}I`}{{{b{c}}{b{e}}}{{Cb{{H`{g}}C`}}}{AnG`}{AlG`}I`}{Blf}0{{{b{{H`{c}}}}{b{{H`{c}}}}}CdHd}{{{b{c}}{b{e}}}Cd{}{}}00{{{b{{H`{c}}}}{b{jDb}}}DdHd}0{cc{}}{{{Hb{c}}}{{H`{c}}}Hd}1{{{b{Ib}}}{{Cb{{H`{c}}e}}}Hd{}}{{{b{{H`{c}}}}{b{je}}}fHdDj}{{}Bl}0{ce{}{}}0{{{Dl{c}}}{{Dl{h}}}{}}0{{{Dn{c}}}{{Dn{h}}}{}}0{{{E`{c}}}{{E`{h}}}{}}0{{{b{{H`{c}}}}{b{{H`{c}}}}}{{En{Hh}}}Hd}{{{b{{H`{c}}}}e}CbHdGd}{{{b{{H`{c}}}}eHj}{{Cb{fHf}}}HdId}{{{b{{H`{c}}}}Hj}BlHd}{{}Gj}{{{b{c}}}e{}{}}{{{b{c}}}Gj{}}{c{{Cb{e}}}{}{}}0{{{b{If}}}{{Cb{{H`{c}}e}}}Hd{}}{If{{Cb{{H`{c}}e}}}Hd{}}22{{{b{c}}}Fh{}}0>>`{{{b{c}}d}f{}}{{{b{c}}}{{b{h}}}{}}{{{b{jc}}}{{b{jh}}}{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{jc}}}{{b{je}}}{}{}}{{{b{{Ih{cieg}}}}}AjAl{AnFd}B`{{Fl{ceg}}}}{{{b{{Ih{cieg}}}}}{{Ih{cieg}}}{AlBb}{AnBb}{B`Bb}{{Fl{ceg}}Bb}}{{{b{c}}{b{je}}}f{}{}}{{{b{{Ih{cieg}}}}}kAl{AnFd}B`{{Fl{ceg}}}{}}{Bl{{b{c}}}{}}{Bl{{b{jc}}}{}}{c{{Cb{{Ih{ekgi}}}}}Fn{AlG`Gb}{AnG`Gb}B`{{Fl{egi}}}}{Blf}{{{b{{Ih{cieg}}}}{b{{Ih{cieg}}}}}Cd{AlCf}{AnCf}{B`Cf}{{Fl{ceg}}Cf}}{{{b{c}}{b{e}}}Cd{}{}}00{{{b{j{Ih{cgEje}}}}m}{{Cb{fC`}}}AlB`{{Fl{cEje}}}{}{{Cl{i}}}{{D`{}{{Cn{k}}}}}}{{{b{{Ih{cieg}}}}{b{jDb}}}Dd{AlDf}{AnDf}{B`Df}{{Fl{ceg}}Df}}{{{b{j{Ih{cieg}}}}m}{{Bj{oAaf}}}Al{AnFd}B`{{Fl{ceg}}}{}{{Cl{k}}}{}{}}{cc{}}{e{{Ih{gmik}}}{}{{Cl{c}}}Al{AnFd}B`{{Fl{gik}}}}{{{En{Bl}}g}{{Cb{{Ih{ckEji}}C`}}}Al{{Cl{c}}}{{D`{}{{Cn{e}}}}}B`{{Fl{cEji}}}}{{{b{{Ih{cieg}}}}{b{jk}}}f{AlBf}{AnBf}{B`Bf}{{Fl{ceg}}Bf}Dj}{{{b{{Ih{cieg}}}}}BlAl{AnFd}B`{{Fl{ceg}}}}{{}Bl}{ce{}{}}{{{Dl{c}}}{{Dl{h}}}{}}{{{Dn{c}}}{{Dn{h}}}{}}{{{E`{c}}}{{E`{h}}}{}}{{{Ih{cieg}}}kAl{AnFd}B`{{Fl{ceg}}}{}}{{{b{{Ih{cieg}}}}}kAl{AnFd}B`{{Fl{ceg}}}{}}{{{b{{Ih{cieg}}}}}{{`{ceg}}}Al{AnFd}B`{{Fl{ceg}}}}{{{b{{Ih{cieg}}}}m}{{Bj{{b{o}}Aaf}}}Al{AnFd}B`{{Fl{ceg}}}{}{{Cl{k}}}{}{}}{Bl{{Ih{cieg}}}AlAnB`{{Fl{ceg}}}}{{{b{{Ih{cieg}}}}}EjAl{AnFd}B`{{Fl{ceg}}}}{{{b{j{Ih{cgEje}}}}k}{{Cb{fC`}}}AlB`{{Fl{cEje}}}{}{{Cl{i}}}}{{{b{j{Ih{cieg}}}}mAaAe}{{Cb{fC`}}}Al{AnFd}B`{{Fl{ceg}}}{}{{Cl{k}}}{}{{Cl{o}}}{}{{Cl{Ac}}}}{{{b{{Ih{cieg}}}}k}Cb{AlG`Gb}{AnG`Gb}B`{{Fl{ceg}}}Gd}{{{b{c}}}e{}{}}{c{{Cb{e}}}{}{}}0{{{b{c}}}Fh{}}{{eim}{{Cb{{Cb{ff}}C`}}}{}{{Cl{c}}}{}{{Cl{g}}}{}{{Cl{k}}}}{ce{}{}}````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{h}}}{}}{{{b{jc}}}{{b{jh}}}{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{jc}}}{{b{je}}}{}{}}{{{b{{Ij{eicg}}}}}AjIl{Al{J`{}{{In{c}}}}}B`{{Fl{eEjg}}{Jb{eEjgc}}}}{{{b{{Ij{eicg}}}}}{{Ij{eicg}}}{IlBb}{Al{J`{}{{In{c}}}}Bb}{B`Bb}{{Fl{eEjg}}{Jb{eEjgc}}Bb}}{{{b{c}}{b{je}}}f{}{}}{{{b{{Ij{eicg}}}}}kIl{Al{J`{}{{In{c}}}}}B`{{Fl{eEjg}}{Jb{eEjgc}}}{}}{Bl{{b{c}}}{}}{Bl{{b{jc}}}{}}{c{{Cb{{Ij{gkei}}}}}FnIl{Al{J`{}{{In{e}}}}G`Gb}{B`G`Gb}{{Fl{gEji}}{Jb{gEjie}}}}{Blf}{{{b{{Ij{eicg}}}}{b{{Ij{eicg}}}}}Cd{IlCf}{Al{J`{}{{In{c}}}}Cf}{B`Cf}{{Fl{eEjg}}{Jb{eEjgc}}Cf}}{{{b{c}}{b{e}}}Cd{}{}}00{{{b{j{Ij{eicg}}}}o}{{Cb{fC`}}}Il{Al{J`{}{{In{c}}}}}B`{{Fl{eEjg}}{Jb{eEjgc}}}{}{{Cl{k}}}{{D`{}{{Cn{m}}}}}}{{{b{{Ij{eicg}}}}{b{jDb}}}Dd{IlDf}{Al{J`{}{{In{c}}}}Df}{B`Df}{{Fl{eEjg}}{Jb{eEjgc}}Df}}{cc{}}{{{En{Bl}}i}{{Cb{{Ij{emck}}C`}}}Il{Al{J`{}{{In{c}}}}}{{Cl{e}}}{{D`{}{{Cn{g}}}}}B`{{Fl{eEjk}}{Jb{eEjkc}}}}{{{`{ce}}}cB`Il}{{{b{{J`{}{{In{c}}}}}}}cIl}{{{b{{Jh{}{{In{c}}{Jd{e}}{Jf{g}}}}}}}{{Ff{{b{e}}}}}Il{Al{J`{}{{In{c}}}}}B`}{{{b{{Jn{}{{Jj{c}}{Jl{e}}}}}}e}cJhIl}{{{b{{Ij{eicg}}}}k}mIl{Al{J`{}{{In{c}}}}}B`{{Fl{eEjg}}{Jb{eEjgc}}Bb}{}{}}{{{b{{Ij{eicg}}}}{b{jk}}}f{IlBf}{Al{J`{}{{In{c}}}}Bf}{B`Bf}{{Fl{eEjg}}{Jb{eEjgc}}Bf}Dj}{{{b{{Ij{eicg}}}}}BlIl{Al{J`{}{{In{c}}}}}B`{{Fl{eEjg}}{Jb{eEjgc}}}}{{}Bl}{ce{}{}}{{{Dl{c}}}{{Dl{h}}}{}}{{{Dn{c}}}{{Dn{h}}}{}}{{{E`{c}}}{{E`{h}}}{}}{{{b{{Ij{eicg}}}}}{{`{kmo}}}Il{Al{J`{}{{In{c}}}}}B`{{Fl{eEjg}}{Jb{eEjgc}}}{}{}{}}{{{b{{Ij{eicg}}}}}{{`{{K`{}{{Cn{{b{e}}}}}}}}}Il{Al{J`{}{{In{c}}}}}B`{{Fl{eEjg}}{Jb{eEjgc}}}}{{{b{{Ij{eicg}}}}m}{{Bj{{b{o}}Aaf}}}Il{Al{J`{}{{In{c}}}}}B`{{Fl{eEjg}}{Jb{eEjgc}}}{}{{Cl{k}}}{}{}}{{}Il}0{Bl{{Ij{eicg}}}Il{Al{J`{}{{In{c}}}}}B`{{Fl{eEjg}}{Jb{eEjgc}}}}{{{b{{Ij{eicg}}}}}EjIl{Al{J`{}{{In{c}}}}}B`{{Fl{eEjg}}{Jb{eEjgc}}}}{{{b{j{Ij{eicg}}}}m}{{Cb{fC`}}}Il{Al{J`{}{{In{c}}}}}B`{{Fl{eEjg}}{Jb{eEjgc}}}{}{{Cl{k}}}}{{{b{{Ij{eicg}}}}k}CbIl{Al{J`{}{{In{c}}}}G`Gb}{B`G`Gb}{{Fl{eEjg}}{Jb{eEjgc}}}Gd}{{{b{c}}}e{}{}}{c{{Cb{e}}}{}{}}0{{{b{c}}}Fh{}}{{{b{{Jh{}{{In{c}}{Jd{e}}{Jf{g}}}}}}{b{{`{gc}}}}c}{{Cb{{Cb{ff}}C`}}}Il{Al{J`{}{{In{c}}}}}B`}{{eim}{{Cb{{Cb{ff}}C`}}}{}{{Cl{c}}}{}{{Cl{g}}}{}{{Cl{k}}}}{{{b{{Jn{}{{Jj{c}}{Jl{e}}}}}}{b{c}}e}{{Cb{{Cb{ff}}C`}}}JhIl}{{{b{{Ij{eicg}}}}{b{k}}m}{{Cb{{Cb{ff}}C`}}}Il{Al{J`{}{{In{c}}}}}B`{{Fl{eEjg}}{Jb{eEjgc}}Bb}{}{}}{ce{}{}}`````````````````````````````{{{b{c}}d}f{}}0000{{{b{c}}}{{b{h}}}{}}0000{{{b{jc}}}{{b{jh}}}{}}0000{{{b{Kb}}}{{b{{Bn{Kd}}}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{jc}}}{{b{je}}}{}{}}0000{{{b{Kb}}}{{Cb{fHf}}}}{{{b{{Kf{ceg}}}}}{{Kf{ceg}}}{BbAl}{BbAn}{BbB`}}{{{b{{Kh{ceg}}}}}{{Kh{ceg}}}{AlBb}{AnBb}{B`Bb}}{{{b{{Kj{c}}}}}{{Kj{c}}}{BbKl}}{{{b{Kb}}}Kb}{{{b{Kn}}}Kn}{{{b{c}}{b{je}}}f{}{}}0000{{{b{Kb}}{b{Kb}}}Hh}{{}Kb}{Bl{{b{c}}}{}}0000{Bl{{b{jc}}}{}}0000{c{{Cb{{Kf{egi}}}}}Fn{G`GbAl}{G`GbAn}B`}{c{{Cb{{Kh{egi}}}}}Fn{AlG`Gb}{AnG`Gb}B`}{{cHjHl}{{Cb{KbHf}}}Hn}{{{b{{Bn{e}}}}}{{Cb{eC`}}}An{Kl{L`{c}}}}{{{b{{Bn{c}}}}}{{Cb{cC`}}}Kl}{{{b{{Bn{Kb}}}}}{{Cb{KbC`}}}}{{{b{c}}{b{e}}}{{Cb{eC`}}}An{Kl{L`{c}}}}{{{b{Ej}}{b{{Gl{c}}}}}{{Cb{cC`}}}Kl}{{{b{c}}{b{e}}}{{Cb{KbC`}}}An{AlG`}}{Blf}0000{{{b{{Kh{ceg}}}}}{{En{{b{c}}}}}AlAnB`}{{{b{{Kf{ceg}}}}{b{{Kf{ceg}}}}}Cd{CfAl}{CfAn}{CfB`}}{{{b{{Kh{ceg}}}}{b{{Kh{ceg}}}}}Cd{AlCf}{AnCf}{B`Cf}}{{{b{{Kj{c}}}}{b{{Kj{c}}}}}Cd{CfKl}}{{{b{Kb}}{b{Kb}}}Cd}{{{b{Kn}}{b{Kn}}}Cd}{{{b{c}}{b{e}}}Cd{}{}}00000000000000{{{b{{Kf{ceg}}}}{b{jDb}}}Dd{DfAl}{DfAn}{DfB`}}{{{b{{Kh{ceg}}}}{b{jDb}}}Dd{AlDf}{AnDf}{B`Df}}{{{b{{Kj{c}}}}{b{jDb}}}Dd{DfKl}}{{{b{Kb}}{b{jDb}}}Dd}{{{b{Kn}}{b{jDb}}}Dd}{cc{}}0000{{{`{Kbc}}}KbIl}{{{b{{Kf{ceg}}}}{b{ji}}}f{BfAl}{BfAn}{BfB`}Dj}{{{b{{Kh{ceg}}}}{b{ji}}}f{AlBf}{AnBf}{B`Bf}Dj}{{{b{Kb}}{b{jc}}}fDj}{{{b{Kn}}{b{jc}}}fDj}``{{{b{{Kh{ceg}}}}}{{b{e}}}AlAnB`}{{}Bl}0000{ce{}{}}0000{{{Dl{c}}}{{Dl{h}}}{}}0000{{{Dn{c}}}{{Dn{h}}}{}}0000{{{E`{c}}}{{E`{h}}}{}}0000{{c{Lb{ecg}}}{{Kh{ecg}}}AnAlB`}{{{b{Kb}}{b{Kb}}}{{En{Hh}}}}``{{{b{{Kf{ceg}}}}i}Cb{G`GbAl}{G`GbAn}B`Gd}{{{b{{Kh{ceg}}}}i}Cb{AlG`Gb}{AnG`Gb}B`Gd}{{{b{Kb}}cHj}{{Cb{fHf}}}Id}{{{b{Kb}}Hj}Bl}{{{b{c}}}e{}{}}0000{{{b{{Kh{ceg}}}}}BlAlAnB`}{c{{Cb{e}}}{}{}}000000000{{{b{c}}}Fh{}}0000=====```````{{{b{c}}d}f{}}{{{b{c}}}{{b{h}}}{}}{{{b{jc}}}{{b{jh}}}{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{jc}}}{{b{je}}}{}{}}{{{b{{Ld{cieg}}}}}AjAl{AnFd}B`{{Fl{ceg}}}}{{{b{{Ld{cieg}}}}}{{Ld{cieg}}}{AlBb}{AnBb}{B`Bb}{{Fl{ceg}}Bb}}{{{b{c}}{b{je}}}f{}{}}{{{b{{Ld{cieg}}}}}kAl{AnFd}B`{{Fl{ceg}}}{}}{Bl{{b{c}}}{}}{Bl{{b{jc}}}{}}{c{{Cb{{Ld{ekgi}}}}}Fn{AlG`Gb}{AnG`Gb}B`{{Fl{egi}}}}{Blf}{{{b{{Ld{cieg}}}}{b{{Ld{cieg}}}}}Cd{AlCf}{AnCf}{B`Cf}{{Fl{ceg}}Cf}}{{{b{c}}{b{e}}}Cd{}{}}00{{{b{{Ld{cieg}}}}{b{jDb}}}Dd{AlDf}{AnDf}{B`Df}{{Fl{ceg}}Df}}{{{b{j{Ld{cieg}}}}m}{{Bj{oAaf}}}Al{AnFd}B`{{Fl{ceg}}}{}{{Cl{k}}}{}{}}{cc{}}{e{{Ld{gmik}}}{}{{Cl{c}}}Al{AnFd}B`{{Fl{gik}}}}{{Blm}{{Cb{{Ld{gAaco}}C`}}}{AnFd}{{Cl{c}}}Al{{Cl{g}}}{{Cl{{Ch{ei}}}}}{{D`{}{{Cn{k}}}}}B`{{Fl{gco}}}}{{{b{{Ld{cieg}}}}{b{jk}}}f{AlBf}{AnBf}{B`Bf}{{Fl{ceg}}Bf}Dj}{{{b{{Ld{cieg}}}}}BlAl{AnFd}B`{{Fl{ceg}}}}{{}Bl}{ce{}{}}{{{Dl{c}}}{{Dl{h}}}{}}{{{Dn{c}}}{{Dn{h}}}{}}{{{E`{c}}}{{E`{h}}}{}}{{{Ld{cieg}}}kAl{AnFd}B`{{Fl{ceg}}}{}}{{{b{{Ld{cieg}}}}}kAl{AnFd}B`{{Fl{ceg}}}{}}{{{b{{Ld{cieg}}}}}{{`{ceg}}}Al{AnFd}B`{{Fl{ceg}}}}{{{b{{Ld{cieg}}}}m}{{Bj{{b{o}}Aaf}}}Al{AnFd}B`{{Fl{ceg}}}{}{{Cl{k}}}{}{}}{Bl{{Ld{cieg}}}Al{AnFd}B`{{Fl{ceg}}}}{{{b{j{Ld{cieg}}}}ko}{{Cb{fC`}}}Al{AnFd}B`{{Fl{ceg}}}{}{}{{Cl{m}}}}{{{b{{Ld{cieg}}}}mAa}{{Cb{CdC`}}}Al{AnFd}B`{{Fl{ceg}}}{}{{Cl{k}}}{}{{Cl{o}}}}{{{b{{Ld{cieg}}}}}EjAl{AnFd}B`{{Fl{ceg}}}}{{{b{{Ld{cieg}}}}mAa}{{Cb{{Ld{cieg}}C`}}}Al{AnFd}B`{{Fl{ceg}}}{}{{Cl{k}}}{}{{Fb{{En{{b{o}}}}}{{F`{{En{o}}}}}}}}{{{b{j{Ld{cieg}}}}mAaAe}{{Cb{fC`}}}Al{AnFd}B`{{Fl{ceg}}}{}{{Cl{k}}}{}{{Cl{o}}}{}{{Cl{Ac}}}}{{{b{{Ld{cieg}}}}k}Cb{AlG`Gb}{AnG`Gb}B`{{Fl{ceg}}}Gd}{{{b{c}}}e{}{}}{c{{Cb{e}}}{}{}}0{{{b{c}}}Fh{}}{{{b{j{Ld{cieg}}}}k}{{Bj{moAa}}}Al{AnFd}B`{{Fl{ceg}}}{}{}{}{}}{{{b{{Ld{cieg}}}}m}{{Bj{{b{o}}AaAc}}}Al{AnFd}B`{{Fl{ceg}}}{}{{Cl{k}}}{}{}{}}{{{b{j{Ld{cieg}}}}mAa}{{Cb{{Bj{cff}}C`}}}Al{AnFd}B`{{Fl{ceg}}}{}{{Cl{k}}}{}{{Fb{{En{{b{o}}}}}{{F`{{En{o}}}}}}}}{{eim}{{Cb{{Cb{ff}}C`}}}{}{{Cl{c}}}{}{{Cl{g}}}{}{{Cl{k}}}}{ce{}{}}","D":"AFb","p":[[1,"reference"],[5,"Private",630],[1,"unit"],[10,"Any",631],[0,"mut"],[17,"Element"],[17,"Index"],[17,"NodeValue"],[17,"MembershipProof"],[17,"BatchMembershipProof"],[17,"Commitment"],[10,"MerkleTreeScheme",0],[5,"BigUint",632],[10,"Element",0],[10,"Index",0],[10,"NodeValue",0],[10,"Clone",633],[10,"Eq",634],[10,"Hash",635],[10,"MerkleCommitment",0],[6,"LookupResult",0],[1,"usize"],[1,"slice"],[6,"MerkleTreeError",143],[6,"Result",636],[1,"bool"],[10,"PartialEq",634],[1,"tuple"],[10,"AppendableMerkleTreeScheme",0],[10,"Borrow",637],[17,"Item"],[10,"IntoIterator",638],[5,"Formatter",639],[8,"Result",639],[10,"Debug",639],[10,"ForgetableMerkleTreeScheme",0],[10,"Hasher",635],[5,"Box",640],[5,"Arc",641],[5,"Rc",642],[10,"ForgetableUniversalMerkleTreeScheme",0],[17,"NonMembershipProof"],[17,"BatchNonMembershipProof"],[10,"UniversalMerkleTreeScheme",0],[1,"u64"],[10,"PersistentUniversalMerkleTreeScheme",0],[6,"Option",643],[17,"Output"],[10,"FnOnce",644],[10,"ToTraversalPath",0],[5,"Vec",645],[5,"TypeId",631],[5,"MerkleTree",97],[10,"DigestAlgorithm",0],[10,"Deserializer",646],[10,"CanonicalSerialize",647],[10,"CanonicalDeserialize",647],[10,"Serializer",648],[10,"Error",649],[6,"RescueError",650],[5,"String",651],[5,"Interval",177],[10,"Field",652],[5,"HasherNode",205],[8,"Output",653],[10,"Digest",654],[6,"SerializationError",655],[6,"Ordering",634],[6,"Compress",647],[6,"Validate",647],[10,"Read",656],[10,"HasherDigest",205],[1,"str"],[10,"Write",656],[5,"TaggedBase64",657],[5,"LightWeightMerkleTree",275],[5,"NMT",321],[10,"Namespace",321],[17,"Namespace"],[10,"Namespaced",321],[10,"BindNamespace",321],[17,"Leaf"],[17,"Node"],[10,"NamespaceProof",321],[17,"NamespaceProof"],[17,"NamespaceId"],[10,"NamespacedMerkleTreeScheme",321],[10,"ExactSizeIterator",658],[5,"Sha3Node",384],[1,"u8"],[6,"MerkleNode",384,659],[5,"MerkleProof",384,659],[5,"RescueHash",384],[10,"RescueParameter",650],[5,"Sha3Digest",384],[10,"From",660],[8,"MerklePath",384,659],[5,"UniversalMerkleTree",580],[5,"HasherDigestAlgorithm",205],[15,"Branch",574],[15,"Leaf",574],[15,"ForgettenSubtree",574]],"r":[[15,143],[384,0],[386,0],[387,0],[389,0],[390,0],[392,0],[395,0],[396,0],[397,659],[398,659],[399,659],[400,97],[401,0],[402,0],[410,0],[411,580],[412,0],[512,0],[513,0]],"b":[[128,"impl-IntoIterator-for-%26MerkleTree%3CE,+H,+I,+ARITY,+T%3E"],[129,"impl-IntoIterator-for-MerkleTree%3CE,+H,+I,+ARITY,+T%3E"],[163,"impl-Debug-for-MerkleTreeError"],[164,"impl-Display-for-MerkleTreeError"],[241,"impl-Debug-for-HasherNode%3CH%3E"],[242,"impl-Display-for-HasherNode%3CH%3E"],[267,"impl-TryFrom%3C%26TaggedBase64%3E-for-HasherNode%3CH%3E"],[268,"impl-TryFrom%3CTaggedBase64%3E-for-HasherNode%3CH%3E"],[306,"impl-IntoIterator-for-LightWeightMerkleTree%3CE,+H,+I,+ARITY,+T%3E"],[307,"impl-IntoIterator-for-%26LightWeightMerkleTree%3CE,+H,+I,+ARITY,+T%3E"],[465,"impl-DigestAlgorithm%3CF,+I,+F%3E-for-RescueHash%3CF%3E"],[466,"impl-DigestAlgorithm%3CInterval%3CF%3E,+u64,+F%3E-for-RescueHash%3CF%3E"],[468,"impl-DigestAlgorithm%3CF,+I,+F%3E-for-RescueHash%3CF%3E"],[469,"impl-DigestAlgorithm%3CInterval%3CF%3E,+u64,+F%3E-for-RescueHash%3CF%3E"],[610,"impl-IntoIterator-for-UniversalMerkleTree%3CE,+H,+I,+ARITY,+T%3E"],[611,"impl-IntoIterator-for-%26UniversalMerkleTree%3CE,+H,+I,+ARITY,+T%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAMUBOwAQAAAAGwAAAB0AAwAiAAEAJQABACoABAA1AAAAOQAAAEEAAABDAAIAVgAAAFgAAgBhAAAAYwATAHgAAAB6AAIAfgAGAIYACQCYAA4AqAAAAKoABwC0AA0AwwABAMYABwDVAB4A9QAAAPcAAwD9ABYAFQETACoBAAAsAQIAMAEGADgBCQBOARIAZwEDAGwBAwBxAQAAdQEGAH0BAAB/AQIAgwEBAIYBAQCJAQAAjAEBAJEBAgCbAUEA3gEYAPwBBAAEAgQADgIOAB4CAAAhAggAKwITAEYCEgBaAgAAXAICAGACBgBoAgkAcwIDAA=="}],\
["jf_pcs",{"t":"RRRRERRKRRRKKRMMMHMCMMNNNNNMMMMCMCCMMNMCMPPPPGPPPNNNNNNNNNNNNNNNNNNIFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNFEEEEFFFEEEEEEFFFNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOHOOOOOONNNNNNNNNNNNNNNNHOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNN","n":["BatchCommitment","BatchProof","Commitment","Evaluation","PCSError","Point","Polynomial","PolynomialCommitmentScheme","Proof","ProverParam","SRS","StructuredReferenceString","UnivariatePCS","VerifierParam","batch_commit","batch_open","batch_verify","checked_fft_size","commit","errors","extract_prover_param","extract_verifier_param","load_srs_from_file","load_srs_from_file","multi_open","multi_open_rou","multi_open_rou_eval_domain","multi_open_rou_evals","multi_open_rou_proofs","multi_point_open","multi_point_verify","multilinear_kzg","open","prelude","transcript","trim","trim","trim_fft_size","trim_with_verifier_degree","univariate_kzg","verify","InvalidParameters","InvalidProof","InvalidProver","InvalidVerifier","PCSError","SerializationError","TranscriptError","UpstreamError","as_error_source","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","init","into","to_string","try_from","try_into","type_id","vzip","MLE","MultilinearKzgBatchProof","MultilinearKzgPCS","MultilinearKzgProof","batch_check","batch_check","batch_commit","batch_open","batch_verify","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check","check","clone","clone","clone_into","clone_into","commit","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize_with_mode","deserialize_with_mode","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","hash","init","init","init","into","into","into","open","proof","proofs","q_x_commit","q_x_opens","serialize_with_mode","serialize_with_mode","serialized_size","serialized_size","to_owned","to_owned","trim","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify","vzip","vzip","vzip","Commitment","MLE","MultilinearKzgBatchProof","MultilinearKzgPCS","MultilinearKzgProof","MultilinearProverParam","MultilinearUniversalParams","MultilinearVerifierParam","PCSError","PolynomialCommitmentScheme","StructuredReferenceString","UnivariateKzgBatchProof","UnivariateKzgPCS","UnivariateKzgProof","UnivariateProverParam","UnivariateUniversalParams","UnivariateVerifierParam","as_ref","batch_check","batch_check","batch_check","batch_check","batch_check","batch_check","batch_check","beta_h","beta_h","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","check","check","check","check","check","check","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize_with_mode","deserialize_with_mode","deserialize_with_mode","deserialize_with_mode","deserialize_with_mode","deserialize_with_mode","deserialize_with_mode","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract_prover_param","extract_prover_param","extract_verifier_param","extract_verifier_param","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","g","g","g","get_batched_nv","h","h","h","h","h_mask","h_mask","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","max_degree","merge_polynomials","num_vars","num_vars","powers_of_g","powers_of_g","powers_of_g","powers_of_g","powers_of_h","powers_of_h","prover_param","serialize_with_mode","serialize_with_mode","serialize_with_mode","serialize_with_mode","serialize_with_mode","serialize_with_mode","serialize_with_mode","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trim","trim","trim_with_verifier_degree","trim_with_verifier_degree","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","IOPTranscript","InvalidTranscript","SerializationError","TranscriptError","append_message","append_serializable_element","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","get_and_append_byte_challenge","get_and_append_challenge","init","init","into","into","new","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","UnivariateKzgBatchProof","UnivariateKzgPCS","UnivariateKzgProof","batch_check","batch_commit","batch_open","batch_verify","borrow","borrow","borrow_mut","borrow_mut","check","clone","clone_into","commit","deref","deref","deref_mut","deref_mut","deserialize_with_mode","drop","drop","eq","equivalent","equivalent","fmt","from","from","hash","init","init","into","into","multi_open","multi_open_rou_evals","multi_open_rou_proofs","multi_point_open","multi_point_verify","open","proof","serialize_with_mode","serialized_size","to_owned","trim","try_from","try_from","try_into","try_into","type_id","type_id","verify","vzip","vzip"],"q":[[0,"jf_pcs"],[41,"jf_pcs::errors"],[67,"jf_pcs::multilinear_kzg"],[143,"jf_pcs::prelude"],[357,"jf_pcs::transcript"],[397,"jf_pcs::univariate_kzg"],[450,"core::result"],[451,"core::borrow"],[452,"alloc::vec"],[453,"rand_core"],[454,"core::option"],[455,"ark_poly::domain::radix2"],[456,"core::error"],[457,"core::fmt"],[458,"jf_pcs::transcript::errors"],[459,"ark_serialize::error"],[460,"alloc::string"],[461,"core::any"],[462,"ark_ec::pairing"],[463,"core::iter::traits::iterator"],[464,"core::marker"],[465,"core::clone"],[466,"ark_serialize"],[467,"std::io"],[468,"core::cmp"],[469,"core::hash"],[470,"jf_pcs::structs"],[471,"ark_ec"],[472,"jf_pcs::multilinear_kzg::srs"],[473,"jf_pcs::univariate_kzg::srs"],[474,"core::default"],[475,"ark_poly::evaluations::multivariate::multilinear::dense"],[476,"ark_ff::fields::prime"],[477,"jf_pcs::multilinear_kzg::util"]],"i":[58,58,58,58,0,58,58,0,58,15,58,0,0,15,58,58,58,0,58,0,15,15,58,15,58,59,59,59,59,59,59,0,58,0,0,58,15,59,15,0,58,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,29,32,60,60,60,60,29,32,60,29,32,29,32,29,32,29,32,60,60,29,32,60,29,32,29,32,60,29,32,29,32,29,29,32,32,29,32,60,29,32,29,60,29,32,60,29,32,60,32,29,32,32,29,32,29,32,29,32,60,60,29,32,60,29,32,60,29,32,60,60,29,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,44,45,46,41,47,48,49,47,49,44,45,46,41,47,48,49,44,45,46,41,47,48,49,44,45,46,41,47,48,49,44,45,46,41,47,48,49,44,45,46,41,47,48,49,41,47,48,49,44,45,46,41,47,48,49,44,45,46,41,47,48,49,44,45,46,41,47,48,49,44,45,46,41,47,48,49,41,47,48,49,41,41,47,47,48,48,49,49,44,47,44,47,44,45,46,41,47,48,49,44,45,46,41,41,47,48,49,45,46,49,0,45,46,47,49,44,46,41,44,45,46,41,47,48,49,44,45,46,41,47,48,49,47,0,45,46,45,47,48,49,47,49,44,44,45,46,41,47,48,49,44,45,46,41,47,48,49,44,45,46,41,47,48,49,44,47,44,47,44,45,46,41,47,48,49,44,45,46,41,47,48,49,44,45,46,41,47,48,49,44,45,46,41,47,48,49,0,23,23,0,54,54,23,54,23,54,54,54,23,54,23,54,23,54,23,23,23,23,54,54,54,23,54,23,54,54,54,23,23,54,23,54,23,54,23,54,0,0,0,57,61,61,61,61,57,61,57,57,57,57,61,61,57,61,57,57,61,57,57,57,57,57,61,57,57,61,57,61,57,61,61,61,61,61,61,57,57,57,57,61,61,57,61,57,61,57,61,61,57],"f":"``````````````{{c{d{{b{e}}}}}{{h{gf}}}j{}{}}{{c{d{e}}{d{{b{g}}}}{d{{b{i}}}}}{{h{{n{k{l{m}}}}f}}}j{}{}{}{}{}}{{d{d{c}}{d{{b{e}}}}{d{{b{g}}}}{d{i}}{d{A`k}}}{{h{Abf}}}{}{}{}{}{AdAf}}{Ah{{h{Ahf}}}}{{c{d{e}}}{{h{gf}}}j{}{}}`{{{d{{An{}{{Aj{c}}{Al{e}}}}}}Ah}c{}{}}{{{d{{An{}{{Aj{c}}{Al{e}}}}}}Ah}e{}{}}{{Ah{Bb{{d{B`}}}}}{{h{cf}}}{}}{{Ah{Bb{{d{B`}}}}}{{h{{An{}{{Aj{c}}{Al{e}}}}f}}}{}{}}{{c{d{e}}{d{{b{g}}}}}{{h{{n{{l{i}}{l{k}}}}f}}}j{}{}{}{}}{{c{d{e}}Ah{d{{Bd{g}}}}}{{h{{n{{l{i}}{l{g}}}}f}}}j{}{}{}}{{AhAh}{{h{{Bd{c}}f}}}{}}{{{d{c}}Ah{d{{Bd{e}}}}}{{h{{l{e}}f}}}{}{}}{{c{d{e}}Ah{d{{Bd{g}}}}}{{h{{l{i}}f}}}j{}{}{}}{{c{d{e}}{d{{b{g}}}}}{{h{{n{i{l{k}}}}f}}}j{}{}{}{}}{{c{d{e}}{d{{b{g}}}}{d{{b{i}}}}{d{k}}}{{h{Abf}}}j{}{}{}{}}`{{c{d{e}}{d{g}}}{{h{{n{ik}}f}}}j{}{}{}{}}``{{eAh{Bb{Ah}}}{{h{nf}}}{}{{j{c}}}}{{{d{{An{}{{Aj{c}}{Al{e}}}}}}Ah}{{h{{n{ce}}f}}}{}{}}{{eAh}{{h{nf}}}{}{{j{c}}}}{{{d{{An{}{{Aj{c}}{Al{e}}}}}}AhAh}{{h{{n{ce}}f}}}{}{}}`{{d{d{c}}{d{e}}{d{g}}{d{i}}}{{h{Abf}}}{}{}{}{}}````````{{{d{c}}}{{d{Bf}}}{}}{{{d{c}}}{{d{e}}}{}{}}{{{d{A`c}}}{{d{A`e}}}{}{}}{Ah{{d{c}}}{}}{Ah{{d{A`c}}}{}}{AhBh}{{{d{f}}{d{A`Bj}}}Bl}0{cc{}}{Bnf}{C`f}{{}Ah}{ce{}{}}{{{d{c}}}Cb{}}{c{{h{e}}}{}{}}0{{{d{c}}}Cd{}}3````{e{{h{BhC`}}}Cf{{Cl{}{{Ch{{d{{Cj{c}}}}}}}}Cn}}{e{{h{BhC`}}}Cf{{Cl{}{{Ch{{d{{D`{c}}}}}}}}Cn}}{{c{d{{b{e}}}}}{{h{gf}}}j{}{}}{{c{d{e}}{d{{b{g}}}}{d{{b{i}}}}}{{h{{n{k{l{m}}}}f}}}j{}{}{}{}{}}{{d{d{c}}{d{{b{e}}}}{d{b}}{d{g}}{d{A`i}}}{{h{Abf}}}{}{}{}{AdAf}}{{{d{c}}}{{d{e}}}{}{}}00{{{d{A`c}}}{{d{A`e}}}{}{}}00{{{d{{Cj{c}}}}}{{h{BhC`}}}Cf}{{{d{{D`{c}}}}}{{h{BhC`}}}Cf}{{{d{{Cj{c}}}}}{{Cj{c}}}{DbCf}}{{{d{{D`{c}}}}}{{D`{c}}}{DbCf}}{{{d{c}}{d{A`e}}}Bh{}{}}0{{c{d{e}}}{{h{gf}}}j{}{}}{Ah{{d{c}}}{}}00{Ah{{d{A`c}}}{}}00{{cDdDf}{{h{{Cj{e}}C`}}}DhCf}{{cDdDf}{{h{{D`{e}}C`}}}DhCf}{AhBh}00{{{d{{Cj{c}}}}{d{{Cj{c}}}}}Ab{DjCf}}{{{d{{D`{c}}}}{d{{D`{c}}}}}Ab{DjCf}}{{{d{c}}{d{e}}}Ab{}{}}000{{{d{{Cj{c}}}}{d{A`Bj}}}Bl{DlCf}}{{{d{{D`{c}}}}{d{A`Bj}}}Bl{DlCf}}{cc{}}00{{{d{{Cj{c}}}}{d{A`e}}}BhCfDn}{{}Ah}00{ce{}{}}00{{c{d{e}}{d{g}}}{{h{{n{ik}}f}}}j{}{}{}{}}````{{{d{{Cj{c}}}}eDd}{{h{BhC`}}}CfE`}{{{d{{D`{c}}}}eDd}{{h{BhC`}}}CfE`}{{{d{{Cj{c}}}}Dd}AhCf}{{{d{{D`{c}}}}Dd}AhCf}{{{d{c}}}e{}{}}0{{eAh{Bb{Ah}}}{{h{nf}}}{}{{j{c}}}}{c{{h{e}}}{}{}}00000{{{d{c}}}Cd{}}00{{d{d{c}}{d{e}}d{d{g}}}{{h{Abf}}}{}{}{}}:::`````````````````{{{d{{Eb{e}}}}}{{d{c}}}Ed{{Cf{}{{Ef{c}}}}}}{e{{h{BhC`}}}Cf{{Cl{}{{Ch{{d{{Eh{c}}}}}}}}Cn}}{e{{h{BhC`}}}Cf{{Cl{}{{Ch{{d{{Ej{c}}}}}}}}Cn}}{e{{h{BhC`}}}Cf{{Cl{}{{Ch{{d{{El{c}}}}}}}}Cn}}{e{{h{BhC`}}}Cf{{Cl{}{{Ch{{d{{Eb{c}}}}}}}}Cn}}{e{{h{BhC`}}}Cf{{Cl{}{{Ch{{d{{En{c}}}}}}}}Cn}}{e{{h{BhC`}}}Cf{{Cl{}{{Ch{{d{{F`{c}}}}}}}}Cn}}{e{{h{BhC`}}}Cf{{Cl{}{{Ch{{d{{Fb{c}}}}}}}}Cn}}``{{{d{c}}}{{d{e}}}{}{}}000000{{{d{A`c}}}{{d{A`e}}}{}{}}000000{{{d{{Eh{c}}}}}{{h{BhC`}}}Cf}{{{d{{Ej{c}}}}}{{h{BhC`}}}Cf}{{{d{{El{c}}}}}{{h{BhC`}}}Cf}{{{d{{Eb{c}}}}}{{h{BhC`}}}Cf}{{{d{{En{c}}}}}{{h{BhC`}}}Cf}{{{d{{F`{c}}}}}{{h{BhC`}}}Cf}{{{d{{Fb{c}}}}}{{h{BhC`}}}Cf}{{{d{{Eh{c}}}}}{{Eh{c}}}{DbCf}}{{{d{{Ej{c}}}}}{{Ej{c}}}{DbCf}}{{{d{{El{c}}}}}{{El{c}}}{DbCf}}{{{d{{Eb{c}}}}}{{Eb{c}}}{DbCf}}{{{d{{En{c}}}}}{{En{c}}}{DbCf}}{{{d{{F`{c}}}}}{{F`{c}}}{DbCf}}{{{d{{Fb{c}}}}}{{Fb{c}}}{DbCf}}{{{d{c}}{d{A`e}}}Bh{}{}}000000{{}{{Eb{c}}}Cf}{{}{{En{c}}}{FdCf}}{{}{{F`{c}}}{FdCf}}{{}{{Fb{c}}}Cf}{Ah{{d{c}}}{}}000000{Ah{{d{A`c}}}{}}000000{{cDdDf}{{h{{Eh{e}}C`}}}DhCf}{{cDdDf}{{h{{Ej{e}}C`}}}DhCf}{{cDdDf}{{h{{El{e}}C`}}}DhCf}{{cDdDf}{{h{{Eb{e}}C`}}}DhCf}{{cDdDf}{{h{{En{e}}C`}}}DhCf}{{cDdDf}{{h{{F`{e}}C`}}}DhCf}{{cDdDf}{{h{{Fb{e}}C`}}}DhCf}{AhBh}000000{{{d{{Eb{c}}}}{d{{Eb{c}}}}}Ab{DjCf}}{{{d{{En{c}}}}{d{{En{c}}}}}Ab{DjCf}}{{{d{{F`{c}}}}{d{{F`{c}}}}}Ab{DjCf}}{{{d{{Fb{c}}}}{d{{Fb{c}}}}}Ab{DjCf}}{{{d{c}}{d{e}}}Ab{}{}}0000000{{{d{{Eh{c}}}}Ah}eCf{}}{{{d{{En{c}}}}Ah}eCf{}}10{{{d{{Eh{c}}}}{d{A`Bj}}}Bl{DlCf}}{{{d{{Ej{c}}}}{d{A`Bj}}}Bl{DlCf}}{{{d{{El{c}}}}{d{A`Bj}}}Bl{DlCf}}{{{d{{Eb{c}}}}{d{A`Bj}}}Bl{DlCf}}{{{d{{En{c}}}}{d{A`Bj}}}Bl{DlCf}}{{{d{{F`{c}}}}{d{A`Bj}}}Bl{DlCf}}{{{d{{Fb{c}}}}{d{A`Bj}}}Bl{DlCf}}{cc{}}000{c{{Eb{e}}}Ed{{Cf{}{{Ef{c}}}}}}111```{{AhAh}Ah}``````{{{d{{Eb{c}}}}{d{A`e}}}BhCfDn}{{}Ah}000000{ce{}{}}000000{{{d{{En{c}}}}}AhCf}{{{d{{b{{Ff{c}}}}}}}{{h{{Fh{c}}f}}}Fj}`````````{{{d{{Eh{c}}}}eDd}{{h{BhC`}}}CfE`}{{{d{{Ej{c}}}}eDd}{{h{BhC`}}}CfE`}{{{d{{El{c}}}}eDd}{{h{BhC`}}}CfE`}{{{d{{Eb{c}}}}eDd}{{h{BhC`}}}CfE`}{{{d{{En{c}}}}eDd}{{h{BhC`}}}CfE`}{{{d{{F`{c}}}}eDd}{{h{BhC`}}}CfE`}{{{d{{Fb{c}}}}eDd}{{h{BhC`}}}CfE`}{{{d{{Eh{c}}}}Dd}AhCf}{{{d{{Ej{c}}}}Dd}AhCf}{{{d{{El{c}}}}Dd}AhCf}{{{d{{Eb{c}}}}Dd}AhCf}{{{d{{En{c}}}}Dd}AhCf}{{{d{{F`{c}}}}Dd}AhCf}{{{d{{Fb{c}}}}Dd}AhCf}{{{d{c}}}e{}{}}000000{{{d{{Eh{c}}}}Ah}{{h{{n{eg}}f}}}Cf{}{}}{{{d{{En{c}}}}Ah}{{h{{n{eg}}f}}}Cf{}{}}{{{d{{Eh{c}}}}AhAh}{{h{{n{eg}}f}}}Cf{}{}}{{{d{{En{c}}}}AhAh}{{h{{n{eg}}f}}}Cf{}{}}{c{{h{e}}}{}{}}0000000000000{{{d{c}}}Cd{}}000000{ce{}{}}000000````{{{d{A`{Fl{c}}}}{d{{b{Fn}}}}{d{{b{Fn}}}}}{{h{BhBn}}}Fj}{{{d{A`{Fl{c}}}}{d{{b{Fn}}}}{d{e}}}{{h{BhBn}}}FjG`}{{{d{c}}}{{d{e}}}{}{}}0{{{d{A`c}}}{{d{A`e}}}{}{}}0{{{d{{Fl{c}}}}}{{Fl{c}}}{DbFj}}{{{d{c}}{d{A`e}}}Bh{}{}}{Ah{{d{c}}}{}}0{Ah{{d{A`c}}}{}}0{AhBh}0{{{d{Bn}}{d{A`Bj}}}Bl}0{C`Bn}{cc{}}0{{{d{A`{Fl{c}}}}{d{{b{Fn}}}}{d{A`{b{Fn}}}}}{{h{BhBn}}}Fj}{{{d{A`{Fl{c}}}}{d{{b{Fn}}}}}{{h{cBn}}}Fj}{{}Ah}0??{{{d{{b{Fn}}}}}{{Fl{c}}}Fj}{{{d{c}}}e{}{}}{{{d{c}}}Cb{}}{c{{h{e}}}{}{}}000{{{d{c}}}Cd{}}0{ce{}{}}0```{e{{h{BhC`}}}Cf{{Cl{}{{Ch{{d{{Gb{c}}}}}}}}Cn}}{{e{d{{b{g}}}}}{{h{if}}}Cf{{j{{F`{c}}}}}{}{}}{{e{d{g}}{d{{b{i}}}}{d{{b{k}}}}}{{h{{n{m{l{o}}}}f}}}Cf{{j{{F`{c}}}}}{}{}{}{}{}}{{{d{{Fb{c}}}}{d{e}}{d{{b{g}}}}{d{b}}{d{i}}{d{A`k}}}{{h{Abf}}}Cf{}{}{}{AdAf}}{{{d{c}}}{{d{e}}}{}{}}0{{{d{A`c}}}{{d{A`e}}}{}{}}0{{{d{{Gb{c}}}}}{{h{BhC`}}}Cf}{{{d{{Gb{c}}}}}{{Gb{c}}}{DbCf}}{{{d{c}}{d{A`e}}}Bh{}{}}{{e{d{g}}}{{h{if}}}Cf{{j{{F`{c}}}}}{}{}}{Ah{{d{c}}}{}}0{Ah{{d{A`c}}}{}}0{{cDdDf}{{h{{Gb{e}}C`}}}DhCf}{AhBh}0{{{d{{Gb{c}}}}{d{{Gb{c}}}}}Ab{DjCf}}{{{d{c}}{d{e}}}Ab{}{}}0{{{d{{Gb{c}}}}{d{A`Bj}}}Bl{DlCf}}{cc{}}0{{{d{{Gb{c}}}}{d{A`e}}}BhCfDn}{{}Ah}0{ce{}{}}0{{e{d{g}}{d{{b{i}}}}}{{h{{n{{l{k}}{l{m}}}}f}}}Cf{{j{{F`{c}}}}}{}{}{}{}}{{{d{c}}Ah{d{{Bd{e}}}}}{{h{{l{e}}f}}}{}{}}{{c{d{e}}Ah{d{{Bd{g}}}}}{{h{{l{i}}f}}}j{}{}{}}{{c{d{e}}{d{{b{g}}}}}{{h{{n{i{l{k}}}}f}}}j{}{}{}{}}{{c{d{e}}{d{{b{g}}}}{d{{b{i}}}}{d{k}}}{{h{Abf}}}j{}{}{}{}}{{e{d{g}}{d{i}}}{{h{{n{km}}f}}}Cf{{j{{F`{c}}}}}{}{}{}{}}`{{{d{{Gb{c}}}}eDd}{{h{BhC`}}}CfE`}{{{d{{Gb{c}}}}Dd}AhCf}{{{d{c}}}e{}{}}{{eAh{Bb{Ah}}}{{h{{n{{F`{g}}{Fb{g}}}}f}}}{}{{j{c}}}Cf}{c{{h{e}}}{}{}}000{{{d{c}}}Cd{}}0{{{d{{Fb{c}}}}{d{e}}{d{g}}d{d{i}}}{{h{Abf}}}Cf{}{}{}}==","D":"ACh","p":[[1,"slice"],[1,"reference"],[6,"PCSError",41],[6,"Result",450],[10,"Borrow",451],[5,"Vec",452],[1,"tuple"],[0,"mut"],[1,"bool"],[10,"RngCore",453],[10,"CryptoRng",453],[1,"usize"],[17,"ProverParam"],[17,"VerifierParam"],[10,"StructuredReferenceString",0],[1,"str"],[6,"Option",454],[5,"Radix2EvaluationDomain",455],[10,"Error",456],[1,"unit"],[5,"Formatter",457],[8,"Result",457],[6,"TranscriptError",357,458],[6,"SerializationError",459],[5,"String",460],[5,"TypeId",461],[10,"Pairing",462],[17,"Item"],[5,"MultilinearKzgProof",67],[10,"Iterator",463],[10,"Send",464],[5,"MultilinearKzgBatchProof",67],[10,"Clone",465],[6,"Compress",466],[6,"Validate",466],[10,"Read",467],[10,"PartialEq",468],[10,"Debug",457],[10,"Hasher",469],[10,"Write",467],[5,"Commitment",143,470],[10,"AffineRepr",471],[17,"G1Affine"],[5,"MultilinearUniversalParams",143,472],[5,"MultilinearProverParam",143,472],[5,"MultilinearVerifierParam",143,472],[5,"UnivariateUniversalParams",143,473],[5,"UnivariateProverParam",143,473],[5,"UnivariateVerifierParam",143,473],[10,"Default",474],[8,"MLE",67],[5,"DenseMultilinearExtension",475],[10,"PrimeField",476],[5,"IOPTranscript",357],[1,"u8"],[10,"CanonicalSerialize",466],[5,"UnivariateKzgProof",397],[10,"PolynomialCommitmentScheme",0],[10,"UnivariatePCS",0],[5,"MultilinearKzgPCS",67],[5,"UnivariateKzgPCS",397]],"r":[[4,41],[143,470],[144,67],[145,67],[146,67],[147,67],[148,472],[149,472],[150,472],[151,41],[152,0],[153,0],[154,397],[155,397],[156,397],[157,473],[158,473],[159,473],[271,477],[294,477],[360,458]],"b":[[55,"impl-Display-for-PCSError"],[56,"impl-Debug-for-PCSError"],[58,"impl-From%3CTranscriptError%3E-for-PCSError"],[59,"impl-From%3CSerializationError%3E-for-PCSError"],[375,"impl-Debug-for-TranscriptError"],[376,"impl-Display-for-TranscriptError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACYBHwAFAAAAMgAHADsAAgA/AAQASAABAE0ACwBaABIAcAADAHwABQCDAAgAjQACAJEAAwCYAAUAoQAHAKsATgD+AAYACQEAABcBBwAxARQASgEbAGwBDgB/AQEAhAEJAJEBAACVAQYAnQEKAKoBAgCxAQAAtgECALoBBQDBAQEA"}],\
["jf_plonk",{"t":"EGPPNNNNNCNNCNNNNNNNCNNNNNNNNCNCNNNNCCFKFNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNPPPPPPPPPPPGPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNRFRRKRRNNCNNNNNNNNNNNNNNMNMNCNNNNMNNNFFNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIIFFFFFFFIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNOOOKFFFNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNN","n":["PlonkError","PlonkType","TurboPlonk","UltraPlonk","__clone_box","as_any","as_any_mut","borrow","borrow_mut","circuit","clone","clone_into","constants","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","errors","fmt","from","hash","init","into","into_any","into_any_arc","into_any_rc","proof_system","to_owned","transcript","try_from","try_into","type_id","vzip","plonk_verifier","transcript","BatchProofVar","BatchableCircuit","VerifyingKeyVar","__clone_box","__clone_box","aggregate_verify_keys","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","new","partial_verify_circuit","to_owned","to_owned","to_vec","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","RescueTranscriptVar","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_any","into_any_arc","into_any_rc","try_from","try_into","type_id","vzip","CircuitError","DivisionError","DomainCreationError","IndexError","IndexTooLarge","InvalidParameters","IoError","IteratorOutOfRange","NonNativeFieldOverflow","PCSError","ParameterError","PlonkError","PublicInputsDoNotMatch","RescueError","SerializationError","SnarkError","SnarkError","SnarkLookupUnsupported","WrongProof","WrongQuotientPolyDegree","as_any","as_any","as_any_mut","as_any_mut","as_error_source","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Error","PlonkKzgSnark","Proof","ProvingKey","UniversalSNARK","UniversalSRS","VerifyingKey","as_any","as_any_mut","batch_arg","batch_prove","batch_verify","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_any","into_any_arc","into_any_rc","new","preprocess","preprocess","prove","prove","structs","try_from","try_into","type_id","universal_setup","verify","verify","verify_batch_proof","vzip","BatchArgument","Instance","__clone_box","aggregate_verify_keys","as_any","as_any","as_any_mut","as_any_mut","batch_prove","borrow","borrow","borrow_mut","borrow_mut","build_batch_proof_and_vks_for_test","circuit_mut_ref","clone","clone_into","decide","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","partial_verify","setup_instance","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","verify_key_ref","vzip","vzip","BatchProof","CommitKey","OpenKey","PlookupEvaluations","PlookupProof","PlookupProvingKey","PlookupVerifyingKey","Proof","ProofEvaluations","ProvingKey","UniversalSrs","VerifyingKey","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","batch_check","batch_check","batch_check","batch_check","batch_check","batch_check","batch_check","batch_check","batch_check","beta_h","beta_h","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","check","check","check","check","check","check","check","check","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","convert_te_coordinates_to_scalars","create_variables","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize_with_mode","deserialize_with_mode","deserialize_with_mode","deserialize_with_mode","deserialize_with_mode","deserialize_with_mode","deserialize_with_mode","deserialize_with_mode","deserialize_with_mode","domain_size","drop","drop","drop","drop","drop","drop","drop","drop","drop","dummy","dummy","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_str","from_str","g","h","h","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_empty","is_merged","k","len","num_inputs","open_key","opening_proof","perm_next_eval","plookup_proof","plookup_vk","poly_evals","powers_of_g","powers_of_g","powers_of_g","powers_of_h","powers_of_h","prod_perm_poly_comm","selector_comms","serialize","serialize","serialize_with_mode","serialize_with_mode","serialize_with_mode","serialize_with_mode","serialize_with_mode","serialize_with_mode","serialize_with_mode","serialize_with_mode","serialize_with_mode","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","shifted_opening_proof","sigma_comms","split_quot_poly_comms","tag","tag","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vk","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wire_sigma_evals","wires_evals","wires_poly_comms","PlonkTranscript","RescueTranscript","SolidityTranscript","StandardTranscript","append_challenge","append_challenge","append_challenge","append_commitment","append_commitment","append_commitment","append_commitments","append_message","append_message","append_message","append_message","append_plookup_evaluations","append_plookup_evaluations","append_proof_evaluations","append_proof_evaluations","append_proof_evaluations","append_vk_and_pub_input","append_vk_and_pub_input","append_vk_and_pub_input","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","get_and_append_challenge","get_and_append_challenge","get_and_append_challenge","get_and_append_challenge","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","new","new","new","new","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":[[0,"jf_plonk"],[36,"jf_plonk::circuit"],[38,"jf_plonk::circuit::plonk_verifier"],[97,"jf_plonk::circuit::transcript"],[115,"jf_plonk::errors"],[182,"jf_plonk::proof_system"],[219,"jf_plonk::proof_system::batch_arg"],[266,"jf_plonk::proof_system::structs"],[617,"jf_plonk::transcript"],[699,"dyn_clone::sealed"],[700,"core::any"],[701,"jf_relation::constraint_system"],[702,"core::fmt"],[703,"core::result"],[704,"core::hash"],[705,"alloc::boxed"],[706,"alloc::sync"],[707,"alloc::rc"],[708,"alloc::vec"],[709,"jf_relation"],[710,"ark_ec::pairing"],[711,"jf_plonk::circuit::plonk_verifier::structs"],[712,"core::clone"],[713,"ark_ff::fields::prime"],[714,"core::cmp"],[715,"jf_relation::gadgets::ecc::conversion"],[716,"ark_ec::models::short_weierstrass"],[717,"ark_ec::models::short_weierstrass::affine"],[718,"jf_relation::gadgets::ecc"],[719,"jf_relation::gadgets::ultraplonk::mod_arith"],[720,"jf_rescue"],[721,"ark_ec::models::twisted_edwards"],[722,"core::error"],[723,"std::io::error"],[724,"jf_pcs::errors"],[725,"ark_serialize::error"],[726,"alloc::string"],[727,"rand_core"],[728,"core::option"],[729,"jf_plonk::proof_system::snark"],[730,"core::iter::traits::iterator"],[731,"core::marker"],[732,"ark_ff::fields"],[733,"serde::de"],[734,"ark_serialize"],[735,"std::io"],[736,"serde::ser"],[737,"tagged_base64"],[738,"jf_plonk::transcript::rescue"],[739,"jf_plonk::transcript::solidity"],[740,"jf_pcs::structs"],[741,"jf_plonk::transcript::standard"]],"i":[0,0,6,6,6,6,6,6,6,0,6,6,0,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,0,6,0,6,6,6,6,0,0,0,0,0,23,18,17,23,18,23,18,23,18,23,18,23,18,23,18,23,18,23,18,23,18,23,18,23,23,23,18,18,18,23,18,23,18,23,18,23,18,23,18,23,18,23,18,18,18,23,18,18,23,18,23,18,23,18,23,18,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,44,44,44,44,44,44,44,44,44,44,45,0,44,44,44,0,44,45,44,45,44,45,44,45,44,44,45,44,45,44,45,44,45,44,45,44,44,45,45,44,44,44,44,44,44,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,89,0,89,89,0,89,89,59,59,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,89,59,89,59,0,59,59,59,89,89,59,59,59,0,0,60,90,90,60,90,60,90,90,60,90,60,0,60,60,60,90,90,60,90,60,90,60,90,60,90,60,90,60,90,60,90,90,60,90,90,60,90,60,90,60,90,60,60,90,60,0,0,0,0,0,0,0,0,0,0,0,0,56,67,52,69,70,51,71,30,72,56,67,52,69,70,51,71,30,72,56,67,52,69,70,51,71,30,72,56,67,52,69,70,51,71,30,72,61,62,56,67,52,69,70,51,71,30,72,56,67,52,69,70,51,71,30,72,56,67,52,69,70,51,71,30,72,56,67,52,69,70,51,71,30,72,56,67,52,69,70,51,71,30,72,30,52,69,56,67,52,69,70,51,71,30,72,56,67,52,69,70,51,71,30,72,56,52,56,67,52,69,70,51,71,30,72,30,56,67,52,69,70,51,71,30,72,52,30,56,67,52,69,70,51,71,30,72,56,56,56,67,67,67,52,52,52,69,69,69,70,70,70,51,51,51,71,71,71,30,30,30,72,72,72,56,56,67,52,52,69,70,51,71,30,72,56,67,52,52,69,70,51,71,30,72,56,52,62,61,62,56,67,52,69,70,56,67,52,69,70,51,71,30,72,56,67,52,69,70,51,71,30,72,56,67,52,69,70,51,71,30,72,56,67,52,69,70,51,71,30,72,56,67,52,69,70,51,71,30,72,52,30,30,52,30,30,56,69,56,30,56,61,91,62,61,62,56,30,56,52,56,67,52,69,70,51,71,30,72,56,67,52,69,70,51,71,30,72,56,30,56,56,52,56,67,52,69,70,51,71,30,72,56,52,56,56,56,56,67,52,52,52,69,69,70,51,71,30,72,56,67,52,69,70,51,71,30,72,56,67,52,69,70,51,71,30,72,51,56,67,52,69,70,51,71,30,72,69,69,56,0,0,0,0,83,84,85,83,84,85,85,85,83,84,87,83,85,83,84,85,83,84,85,83,84,87,83,84,87,83,84,87,83,84,87,83,84,87,83,84,87,83,84,87,83,84,87,85,83,84,87,83,84,87,83,84,87,83,84,87,83,84,87,83,84,87,85,83,84,87,83,84,87,83,84,87,83,84,87,83,84,87],"f":"````{{{b{c}}d}f{}}{{{b{c}}}{{b{h}}}{}}{{{b{jc}}}{{b{jh}}}{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{jc}}}{{b{je}}}{}{}}`{{{b{l}}}l}{{{b{c}}{b{je}}}f{}{}}`{n{{b{c}}}{}}{n{{b{jc}}}{}}{nf}{{{b{l}}{b{l}}}A`}{{{b{c}}{b{e}}}A`{}{}}00`{{{b{l}}{b{jAb}}}{{Af{fAd}}}}{cc{}}{{{b{l}}{b{jc}}}fAh}{{}n}{ce{}{}}{{{Aj{c}}}{{Aj{h}}}{}}{{{Al{c}}}{{Al{h}}}{}}{{{An{c}}}{{An{h}}}{}}`{{{b{c}}}e{}{}}`{c{{Af{e}}}{}{}}0{{{b{c}}}B`{}}6`````{{{b{c}}d}f{}}0{{{b{jBb}}{b{{Bf{{Bd{c}}}}}}{b{{Bf{{Bd{c}}}}}}}{{Af{{Bh{{Bd{c}}}}Bj}}}Bl}{{{b{c}}}{{b{h}}}{}}0{{{b{jc}}}{{b{jh}}}{}}0{{{b{c}}}{{b{e}}}{}{}}0{{{b{jc}}}{{b{je}}}{}{}}0{{{b{{Bn{c}}}}}{{Bn{c}}}{C`Cb}}{{{b{{Bd{c}}}}}{{Bd{c}}}{C`Bl}}{{{b{c}}{b{je}}}f{}{}}0{n{{b{c}}}{}}0{n{{b{jc}}}{}}0{nf}0{{{b{{Bn{c}}}}{b{{Bn{c}}}}}A`{CdCb}}{{{b{{Bd{c}}}}{b{{Bd{c}}}}}A`{CdBl}}{{{b{c}}{b{e}}}A`{}{}}00000{{{b{{Bn{c}}}}{b{jAb}}}Cf{ChCb}}{{{b{{Bd{c}}}}{b{jAb}}}Cf{ChBl}}{cc{}}0{{}n}0{ce{}{}}0{{{Aj{c}}}{{Aj{h}}}{}}0{{{Al{c}}}{{Al{h}}}{}}0{{{An{c}}}{{An{h}}}{}}0{{{b{j{Cj{c}}}}{b{{Cl{g}}}}}{{Af{{Bd{g}}Bj}}}{CbCn}{{Db{}{{D`{c}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}Bl}}{{{b{j{Cj{c}}}}{b{{Dh{c}}}}{b{{Dh{c}}}}{b{{Bf{{Bd{g}}}}}}{b{{Bf{{Dj{c}}}}}}{b{{Bn{c}}}}Dl}{{Af{{E`{DnDn}}Bj}}}{EbCn}{{Db{}{{D`{}}}}Ed}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}Bl}}{{{b{c}}}e{}{}}0{{{b{{Bd{c}}}}}{{Bh{Dl}}}Bl}{c{{Af{e}}}{}{}}000{{{b{c}}}B`{}}099`{{{b{c}}}{{b{h}}}{}}{{{b{jc}}}{{b{jh}}}{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{jc}}}{{b{je}}}{}{}}{n{{b{c}}}{}}{n{{b{jc}}}{}}{nf}{cc{}}{{}n}{ce{}{}}{{{Aj{c}}}{{Aj{h}}}{}}{{{Al{c}}}{{Al{h}}}{}}{{{An{c}}}{{An{h}}}{}}>>=3````````````````````<<;;{{{b{c}}}{{b{Ef}}}{}};;::998877{{{b{Eh}}{b{jAb}}}Cf}0{{{b{Ej}}{b{jAb}}}Cf}0{ElEh}{BjEh}{EnEh}{EjEh}{F`Eh}={FbEh}>==<<;;::99{{{b{c}}}Fd{}}0{c{{Af{e}}}{}{}}000{{{b{c}}}B`{}}0??```````{{{b{c}}}{{b{h}}}{}}{{{b{jc}}}{{b{jh}}}{}}`{{{b{jc}}{b{{Bf{{b{e}}}}}}{b{{Bf{{b{{Ff{k}}}}}}}}}{{Af{{Fh{k}}Eh}}}{FjFl}Fn{EbCn}{{Db{}{{D`{}}}}}{{Bl{}{{D`{g}}{Dd{{Df{i}}}}}}}}{{{b{{Bf{{b{{Cl{g}}}}}}}}{b{{Bf{{b{Bf}}}}}}{b{{Bf{{b{{G`{g}}}}}}}}{b{{Bf{{Gd{{Bh{Gb}}}}}}}}}{{Af{fEh}}}{EbCn}{{Db{}{{D`{}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}}}{{{b{c}}}{{b{e}}}{}{}}{{{b{jc}}}{{b{je}}}{}{}}{n{{b{c}}}{}}{n{{b{jc}}}{}}{nf}{cc{}}{{}n}{ce{}{}}{{{Aj{c}}}{{Aj{h}}}{}}{{{Al{c}}}{{Al{h}}}{}}{{{An{c}}}{{An{h}}}{}}{{}{{Gf{g}}}{EbCn}{{Db{}{{D`{c}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}}}{{{b{c}}{b{e}}}{{Af{{E`{gi}}k}}}{}Fn{}{}{}}0{{{b{jc}}{b{e}}{b{g}}{Gd{{Bh{Gb}}}}}{{Af{ik}}}{FjFl}Fn{}{}{}}0`{c{{Af{e}}}{}{}}0{{{b{c}}}B`{}}{{n{b{jc}}}{{Af{eg}}}{FlFj}{}{}}{{{b{c}}{b{Bf}}{b{e}}{Gd{{Bh{Gb}}}}}{{Af{fg}}}{}{}{}}0{{{b{{Bf{{b{{Cl{g}}}}}}}}{b{{Bf{{b{Bf}}}}}}{b{{Fh{g}}}}}{{Af{fEh}}}{EbCn}{{Db{}{{D`{}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}}};``{{{b{c}}d}f{}}{{{b{{Bf{{b{{Cl{c}}}}}}}}{b{{Bf{{b{{Cl{c}}}}}}}}}{{Af{{Bh{{Cl{c}}}}Eh}}}Bl}{{{b{c}}}{{b{h}}}{}}0{{{b{jc}}}{{b{jh}}}{}}0{{{b{jc}}{b{{Bf{{Gh{i}}}}}}{b{{Bf{{Gh{i}}}}}}}{{Af{{Fh{i}}Eh}}}{FjFl}{EbCn}{{Db{}{{D`{}}}}}{{Bl{}{{D`{e}}{Dd{{Df{g}}}}}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{jc}}}{{b{je}}}{}{}}0{{{b{jc}}{b{{Gj{i}}}}n}{{Af{{E`{{Fh{i}}{Bh{{Cl{i}}}}{Bh{{Cl{i}}}}}}Eh}}}{FjFl}{EbCn}{{Db{}{{D`{e}}}}}{{Bl{}{{D`{e}}{Dd{{Df{g}}}}}}}}{{{b{j{Gh{c}}}}}{{b{jCj}}}Bl}{{{b{{Gh{c}}}}}{{Gh{c}}}{C`Bl}}{{{b{c}}{b{je}}}f{}{}}{{{b{{Gl{c}}}}}{{Af{A`Eh}}}Bl}{n{{b{c}}}{}}0{n{{b{jc}}}{}}0{nf}0{cc{}}0{{}n}0{ce{}{}}0{{{Aj{c}}}{{Aj{h}}}{}}0{{{Al{c}}}{{Al{h}}}{}}{{{An{c}}}{{An{h}}}{}}0{{bb{b{{Bf{{Cl{g}}}}}}{b{Bf}}{b{{Fh{g}}}}}{{Af{E`Eh}}}{EbCn}{{Db{}{{D`{}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}}}{{{b{{Gj{g}}}}CjGn}{{Af{{Gh{g}}Eh}}}{EbCn}{{Db{}{{D`{c}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}}}{{{b{c}}}e{}{}}{c{{Af{e}}}{}{}}000{{{b{c}}}B`{}}0{{{b{{Gh{c}}}}}{{b{{Cl{c}}}}}Bl}99````````````{{{b{c}}d}f{}}00000000{{{b{c}}}{{b{h}}}{}}00000000{{{b{jc}}}{{b{jh}}}{}}00000000{e{{Af{fFb}}}Bl{{Hb{}{{H`{{b{{G`{c}}}}}}}}Hd}}{e{{Af{fFb}}}Bl{{Hb{}{{H`{{b{{Hf{c}}}}}}}}Hd}}{e{{Af{fFb}}}Bl{{Hb{}{{H`{{b{{Fh{c}}}}}}}}Hd}}{e{{Af{fFb}}}Hh{{Hb{}{{H`{{b{{Hj{c}}}}}}}}Hd}}{e{{Af{fFb}}}Hh{{Hb{}{{H`{{b{{Hl{c}}}}}}}}Hd}}{e{{Af{fFb}}}Bl{{Hb{}{{H`{{b{{Ff{c}}}}}}}}Hd}}{e{{Af{fFb}}}Bl{{Hb{}{{H`{{b{{Hn{c}}}}}}}}Hd}}{e{{Af{fFb}}}Bl{{Hb{}{{H`{{b{{Cl{c}}}}}}}}Hd}}{e{{Af{fFb}}}Bl{{Hb{}{{H`{{b{{I`{c}}}}}}}}Hd}}``{{{b{c}}}{{b{e}}}{}{}}00000000{{{b{jc}}}{{b{je}}}{}{}}00000000{{{b{{G`{c}}}}}{{Af{fFb}}}Bl}{{{b{{Hf{c}}}}}{{Af{fFb}}}Bl}{{{b{{Fh{c}}}}}{{Af{fFb}}}Bl}{{{b{{Hj{c}}}}}{{Af{fFb}}}Hh}{{{b{{Hl{c}}}}}{{Af{fFb}}}Hh}{{{b{{Ff{c}}}}}{{Af{fFb}}}Bl}{{{b{{Hn{c}}}}}{{Af{fFb}}}Bl}{{{b{{Cl{c}}}}}{{Af{fFb}}}Bl}{{{b{{I`{c}}}}}{{Af{fFb}}}Bl}{{{b{{G`{c}}}}}{{G`{c}}}{C`Bl}}{{{b{{Hf{c}}}}}{{Hf{c}}}{C`Bl}}{{{b{{Fh{c}}}}}{{Fh{c}}}{C`Bl}}{{{b{{Hj{c}}}}}{{Hj{c}}}{C`Hh}}{{{b{{Hl{c}}}}}{{Hl{c}}}{C`Hh}}{{{b{{Ff{c}}}}}{{Ff{c}}}{C`Bl}}{{{b{{Hn{c}}}}}{{Hn{c}}}{C`Bl}}{{{b{{Cl{c}}}}}{{Cl{c}}}{C`Bl}}{{{b{{I`{c}}}}}{{I`{c}}}{C`Bl}}{{{b{c}}{b{je}}}f{}{}}00000000{{{b{{Cl{g}}}}}{{Bh{c}}}Cn{{Db{}{{D`{c}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}}}{{{b{{Fh{g}}}}{b{j{Cj{c}}}}n{Gd{c}}}{{Af{{Bn{c}}Eh}}}{EbCn}{{Db{}{{D`{c}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}Bl}}{{}{{Hj{c}}}Hh}{n{{b{c}}}{}}00000000{n{{b{jc}}}{}}00000000{c{{Af{{G`{e}}}}}IbBl}{c{{Af{{Fh{e}}}}}IbBl}{{cIdIf}{{Af{{G`{e}}Fb}}}IhBl}{{cIdIf}{{Af{{Hf{e}}Fb}}}IhBl}{{cIdIf}{{Af{{Fh{e}}Fb}}}IhBl}{{cIdIf}{{Af{{Hj{e}}Fb}}}IhHh}{{cIdIf}{{Af{{Hl{e}}Fb}}}IhHh}{{cIdIf}{{Af{{Ff{e}}Fb}}}IhBl}{{cIdIf}{{Af{{Hn{e}}Fb}}}IhBl}{{cIdIf}{{Af{{Cl{e}}Fb}}}IhBl}{{cIdIf}{{Af{{I`{e}}Fb}}}IhBl}`{nf}00000000{n{{Fh{c}}}Bl}{{nn}{{Cl{c}}}Bl}{{{b{{G`{c}}}}{b{{G`{c}}}}}A`{CdBl}}{{{b{{Hf{c}}}}{b{{Hf{c}}}}}A`{CdBl}}{{{b{{Fh{c}}}}{b{{Fh{c}}}}}A`{CdBl}}{{{b{{Hj{c}}}}{b{{Hj{c}}}}}A`{CdHh}}{{{b{{Hl{c}}}}{b{{Hl{c}}}}}A`{CdHh}}{{{b{{Ff{c}}}}{b{{Ff{c}}}}}A`{CdBl}}{{{b{{Hn{c}}}}{b{{Hn{c}}}}}A`{CdBl}}{{{b{{Cl{c}}}}{b{{Cl{c}}}}}A`{CdBl}}{{{b{{I`{c}}}}{b{{I`{c}}}}}A`{CdBl}}{{{b{c}}{b{e}}}A`{}{}}00000000000000000000000000{{{b{{G`{c}}}}{b{jAb}}}CfBl}{{{b{{G`{c}}}}{b{jAb}}}Cf{ChBl}}{{{b{{Hf{c}}}}{b{jAb}}}Cf{ChBl}}{{{b{{Fh{c}}}}{b{jAb}}}CfBl}{{{b{{Fh{c}}}}{b{jAb}}}Cf{ChBl}}{{{b{{Hj{c}}}}{b{jAb}}}Cf{ChHh}}{{{b{{Hl{c}}}}{b{jAb}}}Cf{ChHh}}{{{b{{Ff{c}}}}{b{jAb}}}Cf{ChBl}}{{{b{{Hn{c}}}}{b{jAb}}}Cf{ChBl}}{{{b{{Cl{c}}}}{b{jAb}}}Cf{ChBl}}{{{b{{I`{c}}}}{b{jAb}}}Cf{ChBl}}{cc{}}00{{{G`{c}}}{{Fh{c}}}Bl}111111{{{b{Ij}}}{{Af{{G`{c}}e}}}Bl{}}{{{b{Ij}}}{{Af{{Fh{c}}e}}}Bl{}}```{{{b{{G`{c}}}}{b{je}}}fBlAh}{{{b{{Hf{c}}}}{b{je}}}fBlAh}{{{b{{Fh{c}}}}{b{je}}}fBlAh}{{{b{{Hj{c}}}}{b{je}}}f{IlHh}Ah}{{{b{{Hl{c}}}}{b{je}}}f{IlHh}Ah}{{}n}00000000{ce{}{}}00000000{{{Aj{c}}}{{Aj{h}}}{}}00000000{{{Al{c}}}{{Al{h}}}{}}00000000{{{An{c}}}{{An{h}}}{}}00000000{{{b{{Fh{c}}}}}A`Bl}``{{{b{{Fh{c}}}}}nBl}``````````````{{{b{{G`{c}}}}e}AfBlIn}{{{b{{Fh{c}}}}e}AfBlIn}{{{b{{G`{c}}}}eId}{{Af{fFb}}}BlJ`}{{{b{{Hf{c}}}}eId}{{Af{fFb}}}BlJ`}{{{b{{Fh{c}}}}eId}{{Af{fFb}}}BlJ`}{{{b{{Hj{c}}}}eId}{{Af{fFb}}}HhJ`}{{{b{{Hl{c}}}}eId}{{Af{fFb}}}HhJ`}{{{b{{Ff{c}}}}eId}{{Af{fFb}}}BlJ`}{{{b{{Hn{c}}}}eId}{{Af{fFb}}}BlJ`}{{{b{{Cl{c}}}}eId}{{Af{fFb}}}BlJ`}{{{b{{I`{c}}}}eId}{{Af{fFb}}}BlJ`}{{{b{{G`{c}}}}Id}nBl}{{{b{{Hf{c}}}}Id}nBl}{{{b{{Fh{c}}}}Id}nBl}{{{b{{Hj{c}}}}Id}nHh}{{{b{{Hl{c}}}}Id}nHh}{{{b{{Ff{c}}}}Id}nBl}{{{b{{Hn{c}}}}Id}nBl}{{{b{{Cl{c}}}}Id}nBl}{{{b{{I`{c}}}}Id}nBl}```{{}Fd}0{{{b{c}}}e{}{}}00000000{{{b{c}}}Fd{}}0{{{b{Jb}}}{{Af{{G`{c}}e}}}Bl{}}{Bh{{Af{{G`{e}}g}}}{{Db{}{{D`{}}{Jd{}}}}}{{Bl{}{{Dd{{Df{c}}}}}}}{}}{c{{Af{e}}}{}{}}{Jb{{Af{{G`{c}}e}}}Bl{}}1{{{b{Jb}}}{{Af{{Fh{c}}e}}}Bl{}}2{Jb{{Af{{Fh{c}}e}}}Bl{}}3{{{Bh{c}}}{{Af{{Hj{c}}e}}}Hh{}}44444444444444{{{b{c}}}B`{}}00000000`{ce{}{}}00000000```````{{{b{j{Jf{c}}}}{b{{Bf{Gb}}}}b}{{Af{fEh}}}{EbCn}}{{{b{jJh}}{b{{Bf{Gb}}}}b}{{Af{fEh}}}}{{{b{jJj}}{b{{Bf{Gb}}}}b}{{Af{fEh}}}}{{{b{j{Jf{c}}}}{b{{Bf{Gb}}}}{b{{Jl{g}}}}}{{Af{fEh}}}{EbCn}{{Db{}{{D`{c}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}}}{{{b{jJh}}{b{{Bf{Gb}}}}{b{{Jl{g}}}}}{{Af{fEh}}}Cb{{Db{}{{D`{c}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}}}{{{b{jJj}}{b{{Bf{Gb}}}}{b{{Jl{g}}}}}{{Af{fEh}}}{}{{Db{}{{D`{c}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}}}{{{b{jJj}}{b{{Bf{Gb}}}}{b{{Bf{{Jl{g}}}}}}}{{Af{fEh}}}{}{{Db{}{{D`{}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}}}{{{b{jJj}}{b{{Bf{Gb}}}}{b{{Bf{Gb}}}}}{{Af{fEh}}}}{{{b{j{Jf{c}}}}{b{{Bf{Gb}}}}{b{{Bf{Gb}}}}}{{Af{fEh}}}{EbCn}}{{{b{jJh}}{b{{Bf{Gb}}}}{b{{Bf{Gb}}}}}{{Af{fEh}}}}{{{b{jJn}}{b{{Bf{Gb}}}}{b{{Bf{Gb}}}}}{{Af{fEh}}}}{{{b{j{Jf{c}}}}{b{Hl}}}{{Af{fEh}}}{EbCn}}{{{b{jJj}}{b{Hl}}}{{Af{fEh}}}}{{{b{j{Jf{c}}}}{b{Hj}}}{{Af{fEh}}}{EbCn}}{{{b{jJh}}{b{Hj}}}{{Af{fEh}}}}{{{b{jJj}}{b{Hj}}}{{Af{fEh}}}}{{{b{j{Jf{c}}}}{b{{Cl{g}}}}{b{Bf}}}{{Af{fEh}}}{EbCn}{{Db{}{{D`{c}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}}}{{{b{jJh}}{b{{Cl{g}}}}{b{Bf}}}{{Af{fEh}}}Cb{{Db{}{{D`{c}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}}}{{{b{jJj}}{b{{Cl{g}}}}{b{Bf}}}{{Af{fEh}}}{}{{Db{}{{D`{c}}}}}{{Bl{}{{D`{c}}{Dd{{Df{e}}}}}}}}{{{b{c}}}{{b{h}}}{}}00{{{b{jc}}}{{b{jh}}}{}}00{{{b{c}}}{{b{e}}}{}{}}00{{{b{jc}}}{{b{je}}}{}{}}00{n{{b{c}}}{}}00{n{{b{jc}}}{}}00{nf}00{cc{}}00{{{b{jJj}}{b{{Bf{Gb}}}}}{{Af{Eh}}}}{{{b{j{Jf{c}}}}{b{{Bf{Gb}}}}}{{Af{Eh}}}{EbCn}}{{{b{jJh}}{b{{Bf{Gb}}}}}{{Af{Eh}}}}{{{b{jJn}}{b{{Bf{Gb}}}}}{{Af{Eh}}}}{{}n}00{ce{}{}}00{{{Aj{c}}}{{Aj{h}}}{}}00{{{Al{c}}}{{Al{h}}}{}}00{{{An{c}}}{{An{h}}}{}}00{{{b{{Bf{Gb}}}}}Jj}{{{b{{Bf{Gb}}}}}{{Jf{c}}}{EbCn}}{{{b{{Bf{Gb}}}}}Jh}{{{b{{Bf{Gb}}}}}Jn}{c{{Af{e}}}{}{}}00000{{{b{c}}}B`{}}00999","D":"AFf","p":[[1,"reference"],[5,"Private",699],[1,"unit"],[10,"Any",700],[0,"mut"],[6,"PlonkType",0,701],[1,"usize"],[1,"bool"],[5,"Formatter",702],[5,"Error",702],[6,"Result",703],[10,"Hasher",704],[5,"Box",705],[5,"Arc",706],[5,"Rc",707],[5,"TypeId",700],[10,"BatchableCircuit",38],[5,"VerifyingKeyVar",38],[1,"slice"],[5,"Vec",708],[6,"CircuitError",709],[10,"Pairing",710],[5,"BatchProofVar",38,711],[10,"Clone",712],[10,"PrimeField",713],[10,"PartialEq",714],[8,"Result",702],[10,"Debug",702],[5,"PlonkCircuit",701],[5,"VerifyingKey",266],[10,"SWToTEConParam",715],[17,"BaseField"],[10,"SWCurveConfig",716],[17,"G1Affine"],[5,"Affine",717],[5,"TEPoint",718],[5,"FpElemVar",719],[8,"Variable",701],[5,"PointVariable",718],[1,"tuple"],[10,"RescueParameter",720],[10,"TECurveConfig",721],[10,"Error",722],[6,"PlonkError",115],[6,"SnarkError",115],[6,"RescueError",720],[5,"Error",723],[6,"PCSError",724],[6,"SerializationError",725],[5,"String",726],[5,"ProvingKey",266],[5,"BatchProof",266],[10,"CryptoRng",727],[10,"RngCore",727],[10,"Arithmetization",701],[5,"Proof",266],[1,"u8"],[6,"Option",728],[5,"PlonkKzgSnark",182,729],[5,"Instance",219],[8,"UniversalSrs",266],[8,"OpenKey",266],[6,"MergeableCircuitType",701],[17,"Item"],[10,"Iterator",730],[10,"Send",731],[5,"PlookupProof",266],[10,"Field",732],[5,"ProofEvaluations",266],[5,"PlookupEvaluations",266],[5,"PlookupProvingKey",266],[5,"PlookupVerifyingKey",266],[10,"Deserializer",733],[6,"Compress",734],[6,"Validate",734],[10,"Read",735],[1,"str"],[10,"Hash",704],[10,"Serializer",736],[10,"Write",735],[5,"TaggedBase64",737],[17,"ScalarField"],[5,"RescueTranscript",617,738],[5,"SolidityTranscript",617,739],[10,"PlonkTranscript",617],[5,"Commitment",740],[5,"StandardTranscript",617,741],[5,"RescueTranscriptVar",97],[10,"UniversalSNARK",182],[5,"BatchArgument",219],[8,"CommitKey",266]],"r":[[0,115],[1,701],[38,711],[183,729],[618,738],[619,739],[620,741]],"b":[[150,"impl-Debug-for-PlonkError"],[151,"impl-Display-for-PlonkError"],[152,"impl-Debug-for-SnarkError"],[153,"impl-Display-for-SnarkError"],[154,"impl-From%3CRescueError%3E-for-PlonkError"],[155,"impl-From%3CCircuitError%3E-for-PlonkError"],[156,"impl-From%3CError%3E-for-PlonkError"],[157,"impl-From%3CSnarkError%3E-for-PlonkError"],[158,"impl-From%3CPCSError%3E-for-PlonkError"],[160,"impl-From%3CSerializationError%3E-for-PlonkError"],[441,"impl-Display-for-Proof%3CE%3E"],[442,"impl-Debug-for-Proof%3CE%3E"],[444,"impl-Display-for-BatchProof%3CE%3E"],[445,"impl-Debug-for-BatchProof%3CE%3E"],[571,"impl-TryFrom%3C%26TaggedBase64%3E-for-Proof%3CE%3E"],[572,"impl-TryFrom%3CVec%3C%3CE+as+Pairing%3E::BaseField%3E%3E-for-Proof%3CE%3E"],[574,"impl-TryFrom%3CTaggedBase64%3E-for-Proof%3CE%3E"],[576,"impl-TryFrom%3C%26TaggedBase64%3E-for-BatchProof%3CE%3E"],[578,"impl-TryFrom%3CTaggedBase64%3E-for-BatchProof%3CE%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAgCOwABAAAABQAEAAsAAQAOAAYAFgAAABgAAQAbAAIAHwAAACEAAwAqAAEALQAbAEsAAQBPAAUAVwABAFoABwBjAAYAawAAAG0ABgCIABcAoQAAAKMAAQCnAA8AvgABAMMABADJAAAAywACANQAAgDZAAAA2wAAAN4AAADgAAMA5QADAOsAAQDuAAUA9gABAPoABAABAQYACQEBABcBIwA9ASwAbAEdAIsBCACWAS4AyAEAAM8BAQDUAQ0A6wEaABgCEwAvAi0AXgIIAG8CAAByAgAAeAIBAHsCAQB+AgEAgQIUAJwCAwCjAggAsAILAA=="}],\
["jf_prf",{"t":"RRRKRMN","n":["Error","Input","Output","PRF","Seed","evaluate","evaluate_with_rand_seed"],"q":[[0,"jf_prf"],[7,"core::result"],[8,"core::borrow"],[9,"rand_core"]],"i":[8,8,8,0,8,8,8],"f":"`````{{ei}{{b{km}}}{}{{d{c}}}{}{{d{g}}}{}{}}{{{h{fc}}g}{{b{{j{ik}}m}}}{ln}{}{{d{e}}}{}{}{}}","D":"A`","p":[[6,"Result",7],[10,"Borrow",8],[0,"mut"],[1,"reference"],[1,"tuple"],[10,"RngCore",9],[10,"CryptoRng",9],[10,"PRF",0]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["jf_relation",{"t":"GPPPPPPPPPPPPPPNNNNNCCNNNNNNCCNNNNNNNNNNSSSHKFKIGFGPPPPIINNNNMNNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMNNNNNNNNNMNMNNNNNMNNNMNNNNNNNNMNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNMNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNMNNNNNNNNNMNMNNMNMNMNMNNNNMNNNNMNMNMNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNTFKTKTNNNNNNNNNNCNNHNNNNNNMCHNNNNCNTKTFTKFNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHCFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFFFFFFFKFFFFFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["CircuitError","DomainCreationError","FieldAlgebraError","GateCheckFailure","IndexError","InternalError","LookupUnsupported","ModifyFinalizedCircuit","NotSupported","ParameterError","PubInputLenMismatch","UnfinalizedCircuit","UnsupportedCurve","VarIndexOutOfBound","WrongPlonkType","as_any","as_any_mut","as_error_source","borrow","borrow_mut","constants","constraint_system","deref","deref_mut","drop","fmt","fmt","from","gadgets","gates","init","into","into_any","into_any_arc","into_any_rc","to_string","try_from","try_into","type_id","vzip","GATE_WIDTH","N_MUL_SELECTORS","N_TURBO_PLONK_SELECTORS","compute_coset_representatives","Arithmetization","BoolVar","Circuit","GateId","MergeableCircuitType","PlonkCircuit","PlonkType","TurboPlonk","TypeA","TypeB","UltraPlonk","Variable","WireId","__clone_box","__clone_box","__clone_box","__clone_box","add","add","add_constant","add_constant_gate","add_gate","add_gate","add_range_check_variable","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","binary_emulated_sw_point_vars_select","binary_emulated_te_point_vars_select","binary_point_vars_select","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_circuit_satisfiability","check_circuit_satisfiability","check_var_bound","check_vars_bound","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compute_extended_permutation_polynomials","compute_extended_permutation_polynomials","compute_key_table_polynomial","compute_key_table_polynomial","compute_lookup_prod_polynomial","compute_lookup_prod_polynomial","compute_lookup_sorted_vec_polynomials","compute_lookup_sorted_vec_polynomials","compute_merged_lookup_table","compute_merged_lookup_table","compute_prod_permutation_polynomial","compute_prod_permutation_polynomial","compute_pub_input_polynomial","compute_pub_input_polynomial","compute_q_dom_sep_polynomial","compute_q_dom_sep_polynomial","compute_range_table_polynomial","compute_range_table_polynomial","compute_selector_polynomials","compute_selector_polynomials","compute_table_dom_sep_polynomial","compute_table_dom_sep_polynomial","compute_wire_polynomials","compute_wire_polynomials","conditional_select","conditional_select_emulated","create_boolean_variable","create_constant_emulated_sw_point_variable","create_constant_emulated_te_point_variable","create_constant_emulated_variable","create_constant_point_variable","create_constant_variable","create_constant_variable","create_emulated_sw_point_variable","create_emulated_te_point_variable","create_emulated_variable","create_point_variable","create_public_boolean_variable","create_public_emulated_sw_point_variable","create_public_emulated_te_point_variable","create_public_emulated_variable","create_public_point_variable","create_public_variable","create_public_variable","create_table_and_lookup_variables","create_variable","create_variable","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","ecc_add","emulated_add","emulated_add_constant","emulated_add_constant_gate","emulated_add_gate","emulated_mul","emulated_mul_constant","emulated_mul_constant_gate","emulated_mul_gate","emulated_sub","emulated_sub_constant","emulated_sw_ecc_add","emulated_sw_ecc_add_gate","emulated_sw_point_witness","emulated_te_ecc_add","emulated_te_ecc_add_gate","emulated_te_point_witness","emulated_witness","enforce_bool","enforce_bool","enforce_constant","enforce_constant","enforce_emulated_sw_point_equal","enforce_emulated_te_point_equal","enforce_emulated_var_equal","enforce_equal","enforce_equal","enforce_false","enforce_geq","enforce_geq_constant","enforce_gt","enforce_gt_constant","enforce_in_range","enforce_leq","enforce_leq_constant","enforce_lt","enforce_lt_constant","enforce_on_curve","enforce_point_equal","enforce_true","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval_domain_size","eval_domain_size","false_var","finalize_for_arithmetization","finalize_for_mergeable_circuit","fixed_base_scalar_mul","fmt","fmt","fmt","fmt","from","from","from","from","from","gen_quad_poly","glv_mul","hash","hash","init","init","init","init","insert_gate","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","inverse_point","is_emulated_sw_point_equal","is_emulated_te_point_equal","is_emulated_var_equal","is_emulated_var_zero","is_equal","is_geq","is_geq_constant","is_gt","is_gt_constant","is_in_range","is_leq","is_leq_constant","is_lt","is_lt_constant","is_neutral_point","is_point_equal","is_zero","lc","lc_gate","logic_and","logic_and_all","logic_neg","logic_or","logic_or_gate","merge","mod_add","mod_add_constant","mod_add_vec","mod_mul","mod_mul_constant","mod_negate","msm","msm_with_var_scalar_length","mul","mul","mul_add","mul_add_gate","mul_constant","mul_constant_gate","mul_gate","mul_gate","neutral_point_variable","new_turbo_plonk","new_ultra_plonk","non_native_linear_gen","non_native_power_11_gate","non_native_power_11_gen","non_native_power_5_gen","non_zero_gate","num_gates","num_gates","num_inputs","num_inputs","num_range_blocks","num_vars","num_vars","num_wire_types","num_wire_types","one","one","pad_gates","pad_gates","point_witness","power_11_gate","power_11_gen","public_input","public_input","quad_poly_gate","range_bit_len","range_size","set_variable_public","set_variable_public","srs_size","srs_size","sub","sub","sub_gate","sub_gate","sum","support_lookup","support_lookup","to_owned","to_owned","to_owned","to_owned","true_var","truncate","truncate_gate","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unpack","variable_base_binary_scalar_mul","variable_base_scalar_mul","vzip","vzip","vzip","vzip","witness","witness","witness_mut","zero","zero","B","EmulatedVariable","EmulationConfig","NUM_LIMBS","SerializableEmulatedStruct","T","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","ecc","fmt","from","from_emulated_field","init","into","into_any","into_any_arc","into_any_rc","native_vars","serialize_to_native_elements","test_utils","to_emulated_field","to_owned","try_from","try_into","type_id","ultraplonk","vzip","BETA","MultiScalarMultiplicationCircuit","NEG_ALPHA","PointVariable","S","SWToTEConParam","TEPoint","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","emulated","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","from","get_x","get_x","get_y","get_y","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","inverse","msm","msm_with_var_scalar_length","serialize_to_native_elements","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","EmulatedSWPointVariable","EmulatedTEPointVariable","SWPoint","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","batch_check","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check","clone","clone","clone","clone_into","clone_into","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize_with_mode","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","serialize_to_native_elements","serialize_with_mode","serialized_size","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","test_variable_independence_for_circuit","mod_arith","FpElem","FpElemVar","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components","components","convert_to_var","default","default","deref","deref","deref_mut","deref_mut","drop","drop","enforce_equal","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field_elem","fmt","fmt","from","from","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","new","new_from_field_element","new_from_fp_elem","new_unchecked","one","param_m","param_m","to_owned","to_owned","try_from","try_from","try_into","try_into","two_power_m","two_power_m","type_id","type_id","vzip","vzip","witness","witness_fp_elem","zero","AdditionGate","BoolGate","CondSelectGate","ConstantAdditionGate","ConstantGate","ConstantMultiplicationGate","CurvePointXAdditionGate","CurvePointYAdditionGate","EdwardsCurveEquationGate","EqualityGate","FifthRootGate","Gate","IoGate","LinCombGate","LogicOrGate","LogicOrOutputGate","LookupGate","MulAddGate","MultiplicationGate","PaddingGate","QuadPolyGate","QuaternaryPointSelectXGate","QuaternaryPointSelectYGate","SubtractionGate","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast_mut","downcast_rc","downcast_ref","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","q_c","q_c","q_c","q_c","q_c","q_c","q_c","q_dom_sep","q_dom_sep","q_ecc","q_ecc","q_ecc","q_ecc","q_hash","q_hash","q_lc","q_lc","q_lc","q_lc","q_lc","q_lc","q_lc","q_lc","q_lc","q_lc","q_lc","q_lc","q_lc","q_lookup","q_lookup","q_mul","q_mul","q_mul","q_mul","q_mul","q_mul","q_mul","q_mul","q_mul","q_mul","q_mul","q_mul","q_mul","q_o","q_o","q_o","q_o","q_o","q_o","q_o","q_o","q_o","q_o","q_o","q_o","q_o","q_o","q_o","q_o","q_o","q_o","q_o","q_o","table_dom_sep","table_dom_sep","table_key","table_key","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"jf_relation"],[40,"jf_relation::constants"],[44,"jf_relation::constraint_system"],[359,"jf_relation::gadgets"],[394,"jf_relation::gadgets::ecc"],[466,"jf_relation::gadgets::ecc::emulated"],[547,"jf_relation::gadgets::test_utils"],[548,"jf_relation::gadgets::ultraplonk"],[549,"jf_relation::gadgets::ultraplonk::mod_arith"],[622,"jf_relation::gates"],[1238,"core::any"],[1239,"core::error"],[1240,"core::fmt"],[1241,"alloc::boxed"],[1242,"alloc::sync"],[1243,"alloc::rc"],[1244,"alloc::string"],[1245,"core::result"],[1246,"core::option"],[1247,"alloc::vec"],[1248,"ark_ff::fields::prime"],[1249,"dyn_clone::sealed"],[1250,"ark_ff::fields::fft_friendly"],[1251,"jf_relation::gadgets::ecc::emulated::short_weierstrass"],[1252,"jf_relation::gadgets::emulated"],[1253,"jf_relation::gadgets::ecc::emulated::twisted_edwards"],[1254,"ark_ff::fields"],[1255,"core::clone"],[1256,"ark_poly::polynomial::univariate::dense"],[1257,"ark_ec::models::twisted_edwards::affine"],[1258,"ark_ec::models::twisted_edwards"],[1259,"core::hash"],[1260,"core::cmp"],[1261,"ark_ec::models::twisted_edwards::group"],[1262,"ark_ec::models::short_weierstrass::affine"],[1263,"jf_relation::gadgets::ecc::conversion"],[1264,"ark_ec::models::short_weierstrass"],[1265,"jf_relation::gadgets::ecc::msm"],[1266,"ark_serialize::error"],[1267,"core::iter::traits::iterator"],[1268,"core::marker"],[1269,"ark_serialize"],[1270,"std::io"],[1271,"core::default"],[1272,"jf_relation::gates::arithmetic"],[1273,"jf_relation::gates::ecc"],[1274,"jf_relation::gates::logic"],[1275,"jf_relation::gates::lookup"]],"i":[0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,7,7,7,7,7,7,0,0,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,31,32,32,31,0,0,24,31,32,22,20,22,22,22,20,22,22,24,31,32,22,24,31,32,22,22,22,22,24,31,32,22,24,31,32,22,20,22,22,22,24,31,32,22,24,31,32,22,34,22,34,22,34,22,34,22,34,22,34,22,34,22,34,22,34,22,34,22,34,22,34,22,22,22,20,22,22,22,22,20,22,22,22,22,22,20,22,22,22,22,20,22,22,20,22,22,24,31,32,22,24,31,32,22,24,31,32,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,20,22,20,22,22,22,22,20,22,22,22,22,22,22,22,22,22,22,22,22,22,22,31,32,31,31,31,32,32,32,34,22,20,22,22,22,24,31,32,22,21,24,31,32,22,22,22,31,32,24,31,32,22,22,24,31,32,22,24,31,32,22,24,31,32,24,31,32,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,20,22,22,22,22,22,20,22,22,22,22,22,22,22,22,22,20,22,20,22,22,20,22,20,22,20,22,20,22,22,22,22,20,22,22,22,22,20,22,34,22,20,22,20,22,22,20,22,24,31,32,22,20,22,22,24,31,32,22,24,31,32,22,24,31,32,22,22,22,22,24,31,32,22,20,22,22,20,22,26,0,0,26,0,26,37,37,37,37,37,37,37,37,37,37,0,37,37,0,37,37,37,37,37,37,50,0,0,37,37,37,37,0,37,54,0,54,0,54,0,0,40,28,40,28,40,28,40,28,40,28,40,28,40,28,40,40,28,40,28,40,28,0,40,28,40,40,40,28,28,28,40,28,40,40,40,40,28,40,28,40,28,40,28,40,28,40,28,40,28,40,28,40,56,56,40,40,28,40,28,40,28,40,28,40,28,0,0,0,39,25,27,39,25,27,39,25,27,39,39,25,27,39,25,27,39,39,25,27,39,25,27,39,39,25,27,39,25,27,39,39,25,27,39,39,39,39,39,25,27,39,39,25,27,39,25,27,39,25,27,39,25,27,39,25,27,39,25,27,39,39,39,39,25,27,39,25,27,39,25,27,39,25,27,39,25,27,0,0,0,0,49,48,49,48,49,48,49,48,49,48,49,48,49,48,49,48,48,49,48,49,48,49,48,49,48,48,49,48,49,49,49,48,48,48,49,49,48,49,48,49,48,49,48,49,48,49,48,49,48,49,48,48,48,48,49,48,49,48,49,48,49,48,49,48,49,48,49,48,48,48,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,47,47,47,47,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,47,66,67,68,69,70,71,72,73,74,75,87,88,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,47,47,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,47,66,68,76,80,84,85,47,87,47,80,81,82,47,75,47,67,68,69,71,73,76,77,79,83,84,85,86,47,87,47,70,72,76,78,79,80,81,82,83,84,85,86,47,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,86,47,87,47,87,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"f":"```````````````{{{b{c}}}{{b{d}}}{}}{{{b{fc}}}{{b{fd}}}{}}{{{b{c}}}{{b{h}}}{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{fc}}}{{b{fe}}}{}{}}``{j{{b{c}}}{}}{j{{b{fc}}}{}}{jl}{{{b{n}}{b{fA`}}}Ab}0{cc{}}``{{}j}{ce{}{}}{{{Ad{c}}}{{Ad{d}}}{}}{{{Af{c}}}{{Af{d}}}{}}{{{Ah{c}}}{{Ah{d}}}{}}{{{b{c}}}Aj{}}{c{{Al{e}}}{}{}}0{{{b{c}}}An{}}6```{{j{B`{j}}}{{Bb{c}}}Bd}`````````````{{{b{c}}Bf}l{}}000{{{b{fBh}}BjBj}{{Al{Bjn}}}}{{{b{f{Bl{c}}}}BjBj}{{Al{Bjn}}}Bn}{{{b{f{Bl{c}}}}Bj{b{c}}}{{Al{Bjn}}}Bd}{{{b{f{Bl{c}}}}BjcBj}{{Al{ln}}}Bd}{{{b{fBh}}BjBjBj}{{Al{ln}}}}{{{b{f{Bl{c}}}}BjBjBj}{{Al{ln}}}Bn}{{{b{f{Bl{c}}}}Bj}{{Al{ln}}}Bn}{{{b{c}}}{{b{d}}}{}}000{{{b{fc}}}{{b{fd}}}{}}000{{{b{f{Bl{c}}}}C`{b{{Cb{e}}}}{b{{Cb{e}}}}}{{Al{{Cb{e}}n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}C`{b{{Cf{e}}}}{b{{Cf{e}}}}}{{Al{{Cf{e}}n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}C`{b{Ch}}{b{Ch}}}{{Al{Chn}}}Bd}{{{b{c}}}{{b{e}}}{}{}}000{{{b{fc}}}{{b{fe}}}{}{}}000{{{b{Bh}}{b{{Cj{c}}}}}{{Al{ln}}}Cl}{{{b{{Bl{c}}}}{b{{Cj{c}}}}}{{Al{ln}}}Bn}{{{b{{Bl{c}}}}Bj}{{Al{ln}}}Bn}{{{b{{Bl{c}}}}{b{{Cj{Bj}}}}}{{Al{ln}}}Bn}{{{b{C`}}}C`}{{{b{Cn}}}Cn}{{{b{D`}}}D`}{{{b{{Bl{c}}}}}{{Bl{c}}}{BnDb}}{{{b{c}}{b{fe}}}l{}{}}000{{{b{Dd}}}{{Al{{Bb{{Df{c}}}}n}}}Bn}{{{b{{Bl{c}}}}}{{Al{{Bb{{Df{c}}}}n}}}Bd}{{{b{Dd}}}{{Al{{Df{c}}n}}}Bn}{{{b{{Bl{c}}}}}{{Al{{Df{c}}n}}}Bd}{{{b{Dd}}{b{c}}{b{c}}{b{c}}{b{{Cj{c}}}}{b{{Cj{c}}}}}{{Al{{Df{c}}n}}}Bn}{{{b{{Bl{c}}}}{b{c}}{b{c}}{b{c}}{b{{Cj{c}}}}{b{{Cj{c}}}}}{{Al{{Df{c}}n}}}Bd}{{{b{Dd}}c{b{{Cj{c}}}}}{{Al{{Dh{{Bb{c}}{Df{c}}{Df{c}}}}n}}}Bn}{{{b{{Bl{c}}}}c{b{{Cj{c}}}}}{{Al{{Dh{{Bb{c}}{Df{c}}{Df{c}}}}n}}}Bd}{{{b{Dd}}c}{{Al{{Bb{c}}n}}}Bn}{{{b{{Bl{c}}}}c}{{Al{{Bb{c}}n}}}Bd}{{{b{Dd}}{b{c}}{b{c}}}{{Al{{Df{c}}n}}}Bn}{{{b{{Bl{c}}}}{b{c}}{b{c}}}{{Al{{Df{c}}n}}}Bd}989898;:98;:{{{b{f{Bl{c}}}}C`BjBj}{{Al{Bjn}}}Bd}{{{b{f{Bl{c}}}}C`{b{{Dj{e}}}}{b{{Dj{e}}}}}{{Al{{Dj{e}}n}}}Bd{{Cd{c}}}}{{{b{fBh}}Dl}{{Al{C`n}}}}{{{b{f{Bl{c}}}}{Dn{e}}}{{Al{{Cb{e}}n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}{E`{e}}}{{Al{{Cf{e}}n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}e}{{Al{{Dj{e}}n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}{E`{c}}}{{Al{Chn}}}Bd}{{{b{fBh}}c}{{Al{Bjn}}}Cl}{{{b{f{Bl{c}}}}c}{{Al{Bjn}}}Bn}54326543210{{{b{f{Bl{c}}}}{b{{Cj{{Dh{BjBjBj}}}}}}{b{{Cj{{Dh{BjBj}}}}}}}{{Al{ln}}}Bd}21{{}{{Bl{c}}}Bn}{j{{b{c}}}{}}000{j{{b{fc}}}{}}000{jl}000{{{b{f{Bl{c}}}}{b{Ch}}{b{Ch}}}{{Al{Chn}}}Bd}{{{b{f{Bl{c}}}}{b{{Dj{e}}}}{b{{Dj{e}}}}}{{Al{{Dj{e}}n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}{b{{Dj{e}}}}e}{{Al{{Dj{e}}n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}{b{{Dj{e}}}}e{b{{Dj{e}}}}}{{Al{ln}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}{b{{Dj{e}}}}{b{{Dj{e}}}}{b{{Dj{e}}}}}{{Al{ln}}}Bd{{Cd{c}}}}321032{{{b{f{Bl{c}}}}{b{{Cb{e}}}}{b{{Cb{e}}}}e}{{Al{{Cb{e}}n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}{b{{Cb{e}}}}{b{{Cb{e}}}}{b{{Cb{e}}}}e}{{Al{ln}}}Bd{{Cd{c}}}}{{{b{{Bl{c}}}}{b{{Cb{e}}}}}{{Al{{Dn{e}}n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}{b{{Cf{e}}}}{b{{Cf{e}}}}e}{{Al{{Cf{e}}n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}{b{{Cf{e}}}}{b{{Cf{e}}}}{b{{Cf{e}}}}e}{{Al{ln}}}Bd{{Cd{c}}}}{{{b{{Bl{c}}}}{b{{Cf{e}}}}}{{Al{{E`{e}}n}}}Bd{{Cd{c}}}}{{{b{{Bl{c}}}}{b{{Dj{e}}}}}{{Al{en}}}Bd{{Cd{c}}}}{{{b{fBh}}Bj}{{Al{ln}}}}{{{b{f{Bl{c}}}}Bj}{{Al{ln}}}Bn}{{{b{fBh}}Bjc}{{Al{ln}}}Cl}{{{b{f{Bl{c}}}}Bjc}{{Al{ln}}}Bn}{{{b{f{Bl{c}}}}{b{{Cb{e}}}}{b{{Cb{e}}}}}{{Al{ln}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}{b{{Cf{e}}}}{b{{Cf{e}}}}}{{Al{ln}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}{b{{Dj{e}}}}{b{{Dj{e}}}}}{{Al{ln}}}Bd{{Cd{c}}}}{{{b{fBh}}BjBj}{{Al{ln}}}}{{{b{f{Bl{c}}}}BjBj}{{Al{ln}}}Bn}{{{b{f{Bl{c}}}}Bj}{{Al{ln}}}Bd}{{{b{f{Bl{c}}}}BjBj}{{Al{ln}}}{BdBd}}{{{b{f{Bl{c}}}}Bjc}{{Al{ln}}}{BdBd}}10{{{b{f{Bl{c}}}}Bjj}{{Al{ln}}}Bd}2121{{{b{f{Bl{c}}}}{b{Ch}}}{{Al{ln}}}Bd}{{{b{f{Bl{c}}}}{b{Ch}}{b{Ch}}}{{Al{ln}}}Bd}5{{{b{Cn}}{b{Cn}}}Dl}{{{b{D`}}{b{D`}}}Dl}{{{b{c}}{b{e}}}Dl{}{}}00000{{{b{Dd}}}{{Al{jn}}}}{{{b{{Bl{c}}}}}{{Al{jn}}}Bd}{{{b{Bh}}}C`}{{{b{f{Bl{c}}}}}{{Al{ln}}}Bd}{{{b{f{Bl{c}}}}D`}{{Al{ln}}}Bd}{{{b{f{Bl{c}}}}Bj{b{{Eb{e}}}}}{{Al{Chn}}}Bd{{Ef{}{{Ed{c}}}}}}{{{b{C`}}{b{fA`}}}Ab}{{{b{Cn}}{b{fA`}}}Ab}{{{b{D`}}{b{fA`}}}Ab}{{{b{{Bl{c}}}}{b{fA`}}}Ab{BnEh}}{C`Bj}{cc{}}000{{{b{f{Bl{c}}}}{b{{Ej{Bj}}}}{b{{Ej{c}}}}{b{{Ej{c}}}}c}{{Al{Bjn}}}Bd}{{{b{f{Bl{c}}}}Bj{b{Ch}}}{{Al{Chn}}}Bd}{{{b{Cn}}{b{fc}}}lEl}{{{b{D`}}{b{fc}}}lEl}{{}j}000{{{b{f{Bl{c}}}}{b{{Ej{Bj}}}}{Ad{En}}}{{Al{ln}}}Bn}{ce{}{}}000{{{Ad{c}}}{{Ad{d}}}{}}000{{{Af{c}}}{{Af{d}}}{}}00{{{Ah{c}}}{{Ah{d}}}{}}000{{{b{f{Bl{c}}}}{b{Ch}}}{{Al{Chn}}}Bd}{{{b{f{Bl{c}}}}{b{{Cb{e}}}}{b{{Cb{e}}}}}{{Al{C`n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}{b{{Cf{e}}}}{b{{Cf{e}}}}}{{Al{C`n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}{b{{Dj{e}}}}{b{{Dj{e}}}}}{{Al{C`n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}{b{{Dj{e}}}}}{{Al{C`n}}}Bd{{Cd{c}}}}{{{b{f{Bl{c}}}}BjBj}{{Al{C`n}}}Bd}{{{b{f{Bl{c}}}}BjBj}{{Al{C`n}}}{BdBd}}{{{b{f{Bl{c}}}}Bjc}{{Al{C`n}}}{BdBd}}10{{{b{f{Bl{c}}}}Bjj}{{Al{C`n}}}Bd}2121{{{b{f{Bl{c}}}}{b{Ch}}}{{Al{C`n}}}Bd}{{{b{f{Bl{c}}}}{b{Ch}}{b{Ch}}}{{Al{C`n}}}Bd}{{{b{f{Bl{c}}}}Bj}{{Al{C`n}}}Bd}{{{b{f{Bl{c}}}}{b{{Ej{Bj}}}}{b{{Ej{c}}}}}{{Al{Bjn}}}Bd}{{{b{f{Bl{c}}}}{b{{Ej{Bj}}}}{b{{Ej{c}}}}}{{Al{ln}}}Bd}{{{b{f{Bl{c}}}}C`C`}{{Al{C`n}}}Bd}{{{b{f{Bl{c}}}}{b{{Cj{C`}}}}}{{Al{C`n}}}Bd}{{{b{f{Bl{c}}}}C`}{{Al{C`n}}}Bd}2{{{b{f{Bl{c}}}}C`C`}{{Al{ln}}}Bd}{{{b{{Bl{c}}}}{b{{Bl{c}}}}}{{Al{{Bl{c}}n}}}Bd}{{{b{f{Bl{c}}}}{b{{F`{c}}}}{b{{F`{c}}}}{b{{Fb{c}}}}}{{Al{{F`{c}}n}}}Bd}{{{b{f{Bl{c}}}}{b{{F`{c}}}}{b{{Fb{c}}}}{b{{Fb{c}}}}}{{Al{{F`{c}}n}}}Bd}{{{b{f{Bl{c}}}}{b{{Cj{{F`{c}}}}}}{b{{Fb{c}}}}}{{Al{{F`{c}}n}}}Bd}21{{{b{f{Bl{c}}}}{b{{F`{c}}}}{b{c}}}{{Al{{F`{c}}n}}}Bd}{{{b{f{Bl{c}}}}{b{{Cj{Ch}}}}{b{{Cj{Bj}}}}}{{Al{Chn}}}Bd}{{{b{f{Bl{c}}}}{b{{Cj{Ch}}}}{b{{Cj{Bj}}}}j}{{Al{Chn}}}Bd}{{{b{fBh}}BjBj}{{Al{Bjn}}}}{{{b{f{Bl{c}}}}BjBj}{{Al{Bjn}}}Bn}>={{{b{f{Bl{c}}}}Bj{b{c}}}{{Al{Bjn}}}Bd}{{{b{f{Bl{c}}}}BjcBj}{{Al{ln}}}Bd}{{{b{fBh}}BjBjBj}{{Al{ln}}}}{{{b{f{Bl{c}}}}BjBjBj}{{Al{ln}}}Bn}{{{b{{Bl{c}}}}}ChBd}{{}{{Bl{c}}}Bn}{j{{Bl{c}}}Bn}{{{b{f{Bl{c}}}}{b{{Cj{{F`{c}}}}}}{b{{Cj{{Fb{c}}}}}}{b{{Fb{c}}}}}{{Al{{F`{c}}n}}}Bd}{{{b{f{Bl{c}}}}{b{{F`{c}}}}{b{{F`{c}}}}}{{Al{ln}}}Bd}{{{b{f{Bl{c}}}}{b{{F`{c}}}}}{{Al{{F`{c}}n}}}Bd}0{{{b{f{Bl{c}}}}Bj}{{Al{ln}}}Bd}{{{b{Bh}}}j}{{{b{{Bl{c}}}}}jBn}10{{{b{{Bl{c}}}}}{{Al{jn}}}Bd}2121{{{b{Bh}}}Bj}{{{b{{Bl{c}}}}}BjBn}{{{b{fBh}}j}l}{{{b{f{Bl{c}}}}j}lBn}{{{b{{Bl{c}}}}{b{Ch}}}{{Al{{E`{c}}n}}}Bd}{{{b{f{Bl{c}}}}BjBj}{{Al{ln}}}Bd}{{{b{f{Bl{c}}}}Bj}{{Al{Bjn}}}Bd}{{{b{Bh}}}{{Al{{Bb{c}}n}}}Cl}{{{b{{Bl{c}}}}}{{Al{{Bb{c}}n}}}Bn}{{{b{f{Bl{c}}}}{b{{Ej{Bj}}}}{b{{Ej{c}}}}{b{{Ej{c}}}}cc}{{Al{ln}}}Bd}{{{b{{Bl{c}}}}}{{Al{jn}}}Bn}0{{{b{fBh}}Bj}{{Al{ln}}}}{{{b{f{Bl{c}}}}Bj}{{Al{ln}}}Bn}{{{b{Dd}}}{{Al{jn}}}}>{{{b{fBh}}BjBj}{{Al{Bjn}}}}{{{b{f{Bl{c}}}}BjBj}{{Al{Bjn}}}Bn}{{{b{fBh}}BjBjBj}{{Al{ln}}}}{{{b{f{Bl{c}}}}BjBjBj}{{Al{ln}}}Bn}{{{b{f{Bl{c}}}}{b{{Cj{Bj}}}}}{{Al{Bjn}}}Bd}{{{b{Bh}}}Dl}{{{b{{Bl{c}}}}}DlBn}{{{b{c}}}e{}{}}000{{{b{Bh}}}C`}{{{b{f{Bl{c}}}}Bjj}{{Al{Bjn}}}Bd}{{{b{f{Bl{c}}}}BjBjj}{{Al{ln}}}Bd}{c{{Al{e}}}{}{}}0000000{{{b{c}}}An{}}000{{{b{f{Bl{c}}}}Bjj}{{Al{{Bb{C`}}n}}}Bd}{{{b{f{Bl{c}}}}{b{{Cj{C`}}}}{b{Ch}}}{{Al{Chn}}}Bd}{{{b{f{Bl{c}}}}Bj{b{Ch}}}{{Al{Chn}}}Bd}{ce{}{}}000{{{b{Bh}}Bj}{{Al{cn}}}Cl}{{{b{{Bl{c}}}}Bj}{{Al{cn}}}Bn}{{{b{f{Bl{c}}}}Bj}{{b{fc}}}Bn}{{{b{Bh}}}Bj}{{{b{{Bl{c}}}}}BjBn}``````{{{b{c}}Bf}l{}}{{{b{c}}}{{b{d}}}{}}{{{b{fc}}}{{b{fd}}}{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{fc}}}{{b{fe}}}{}{}}{{{b{{Dj{c}}}}}{{Dj{c}}}{DbBd}}{{{b{c}}{b{fe}}}l{}{}}{j{{b{c}}}{}}{j{{b{fc}}}{}}{jl}`{{{b{{Dj{c}}}}{b{fA`}}}Ab{EhBd}}{cc{}}{e{{Bb{c}}}Bd{{Cd{c}}}}{{}j}{ce{}{}}{{{Ad{c}}}{{Ad{d}}}{}}{{{Af{c}}}{{Af{d}}}{}}{{{Ah{c}}}{{Ah{d}}}{}}{{{b{{Dj{c}}}}}{{Bb{Bj}}}Bd}{{{b{Fd}}}{{Bb{c}}}Bd}`{{{b{{Cj{c}}}}}{{Al{en}}}Bd{{Cd{c}}}}{{{b{c}}}e{}{}}{c{{Al{e}}}{}{}}0{{{b{c}}}An{}}`9```````{{{b{c}}Bf}l{}}0{{{b{c}}}{{b{d}}}{}}0{{{b{fc}}}{{b{fd}}}{}}0{{{b{c}}}{{b{e}}}{}{}}0{{{b{fc}}}{{b{fe}}}{}{}}0{{{b{{E`{c}}}}}{{E`{c}}}{DbBd}}{{{b{Ch}}}Ch}{{{b{c}}{b{fe}}}l{}{}}0{{}{{E`{c}}}Bd}{j{{b{c}}}{}}0{j{{b{fc}}}{}}0{jl}0`{{{b{{E`{c}}}}{b{{E`{c}}}}}Dl{FfBd}}{{{b{Ch}}{b{Ch}}}Dl}{{{b{c}}{b{e}}}Dl{}{}}00000{{{b{{E`{c}}}}{b{fA`}}}Ab{EhBd}}{{{b{Ch}}{b{fA`}}}Ab}{{{Fh{e}}}{{E`{c}}}Bd{{Ef{}{{Ed{c}}}}}}{{{Eb{e}}}{{E`{c}}}Bd{{Ef{}{{Ed{c}}}}}}{cc{}}{{{Fj{e}}}{{E`{c}}}{BdFl}{{Fn{}{{Ed{c}}}}}}1{{{b{{E`{c}}}}}cBd}{{{b{Ch}}}Bj}10{{}j}0{ce{}{}}0{{{Ad{c}}}{{Ad{d}}}{}}0{{{Af{c}}}{{Af{d}}}{}}0{{{Ah{c}}}{{Ah{d}}}{}}0{{{b{{E`{c}}}}}{{E`{c}}}Bd}{{{b{fG`}}{b{{Cj{Ch}}}}{b{{Cj{Bj}}}}}{{Al{Chn}}}}{{{b{fG`}}{b{{Cj{Ch}}}}{b{{Cj{Bj}}}}j}{{Al{Chn}}}}{{{b{{E`{e}}}}}{{Bb{c}}}Bd{{Cd{c}}}}{{{b{c}}}e{}{}}0{c{{Al{e}}}{}{}}000{{{b{c}}}An{}}0::```{{{b{c}}Bf}l{}}00{{{b{c}}}{{b{d}}}{}}00{{{b{fc}}}{{b{fd}}}{}}00{e{{Al{lGb}}}Bd{{Gf{}{{Gd{{b{{Dn{c}}}}}}}}Gh}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{fc}}}{{b{fe}}}{}{}}00{{{b{{Dn{c}}}}}{{Al{lGb}}}Bd}{{{b{{Dn{c}}}}}{{Dn{c}}}{DbBd}}{{{b{{Cb{c}}}}}{{Cb{c}}}{DbBd}}{{{b{{Cf{c}}}}}{{Cf{c}}}{DbBd}}{{{b{c}}{b{fe}}}l{}{}}00{{}{{Dn{c}}}Bd}{j{{b{c}}}{}}00{j{{b{fc}}}{}}00{{cGjGl}{{Al{{Dn{e}}Gb}}}GnBd}{jl}00{{{b{{Dn{c}}}}{b{{Dn{c}}}}}Dl{FfBd}}{{{b{c}}{b{e}}}Dl{}{}}00{{{b{{Dn{c}}}}{b{fA`}}}Ab{EhBd}}{{{b{{Cb{c}}}}{b{fA`}}}Ab{EhBd}}{{{b{{Cf{c}}}}{b{fA`}}}Ab{EhBd}}{cc{}}{{{Fj{e}}}{{Dn{c}}}Bd{{Fn{}{{Ed{c}}}}}}11{{}j}00{ce{}{}}00{{{Ad{c}}}{{Ad{d}}}{}}00{{{Af{c}}}{{Af{d}}}{}}00{{{Ah{c}}}{{Ah{d}}}{}}00{{{b{{Dn{e}}}}}{{Bb{c}}}Bd{{Cd{c}}}}{{{b{{Dn{c}}}}eGj}{{Al{lGb}}}BdH`}{{{b{{Dn{c}}}}Gj}jBd}{{{b{c}}}e{}{}}00{c{{Al{e}}}{}{}}00000{{{b{c}}}An{}}00999{{{Bl{c}}{Bl{c}}}{{Al{ln}}}Bd}```{{{b{c}}Bf}l{}}0{{{b{c}}}{{b{d}}}{}}0{{{b{fc}}}{{b{fd}}}{}}0{{{b{c}}}{{b{e}}}{}{}}0{{{b{fc}}}{{b{fe}}}{}{}}0{{{b{{Fb{c}}}}}{{Fb{c}}}{DbBd}}{{{b{{F`{c}}}}}{{F`{c}}}{DbBd}}{{{b{c}}{b{fe}}}l{}{}}0{{{b{{Fb{c}}}}}{{Dh{cc}}}Bd}{{{b{{F`{c}}}}}{{Dh{BjBj}}}Bd}{{{b{{F`{c}}}}{b{f{Bl{c}}}}}{{Al{Bjn}}}Bd}{{}{{Fb{c}}}{HbBd}}{{}{{F`{c}}}{HbBd}}{j{{b{c}}}{}}0{j{{b{fc}}}{}}0{jl}0{{{b{{F`{c}}}}{b{f{Bl{c}}}}{b{{F`{c}}}}}{{Al{ln}}}Bd}{{{b{{Fb{c}}}}{b{{Fb{c}}}}}Dl{FfBd}}{{{b{{F`{c}}}}{b{{F`{c}}}}}Dl{FfBd}}{{{b{c}}{b{e}}}Dl{}{}}00000{{{b{{Fb{c}}}}}cBd}{{{b{{Fb{c}}}}{b{fA`}}}Ab{EhBd}}{{{b{{F`{c}}}}{b{fA`}}}Ab{EhBd}}{cc{}}0{{}j}0{ce{}{}}0{{{Ad{c}}}{{Ad{d}}}{}}0{{{Af{c}}}{{Af{d}}}{}}0{{{Ah{c}}}{{Ah{d}}}{}}0{{{b{c}}j{B`{c}}}{{Al{{Fb{c}}n}}}Bd}{{{b{f{Bl{c}}}}{b{c}}j{B`{c}}}{{Al{{F`{c}}n}}}Bd}{{{b{f{Bl{c}}}}{b{{Fb{c}}}}j{B`{c}}}{{Al{{F`{c}}n}}}Bd}{{{b{f{Bl{c}}}}Bjj{B`{c}}}{{Al{{F`{c}}n}}}Bd}{{{b{{Bl{c}}}}j{B`{c}}}{{F`{c}}}Bd}{{{b{{Fb{c}}}}}jBd}{{{b{{F`{c}}}}}jBd}{{{b{c}}}e{}{}}0{c{{Al{e}}}{}{}}000{{{b{{Fb{c}}}}}cBd}{{{b{{F`{c}}}}}cBd}{{{b{c}}}An{}}0??{{{b{{F`{c}}}}{b{{Bl{c}}}}}{{Al{cn}}}Bd}{{{b{{F`{c}}}}{b{{Bl{c}}}}}{{Al{{Fb{c}}n}}}Bd}9````````````````````````{{{b{c}}Bf}l{}}0000000000000000000000{{{b{c}}}{{b{d}}}{}}0000000000000000000000{{{b{fc}}}{{b{fd}}}{}}0000000000000000000000{{{b{c}}}{{b{e}}}{}{}}0000000000000000000000{{{b{fc}}}{{b{fe}}}{}{}}0000000000000000000000{{{b{{Hd{c}}}}}{{Hd{c}}}{DbCl}}{{{b{Hf}}}Hf}{{{b{{Hh{c}}}}}{{Hh{c}}}{DbCl}}{{{b{Hj}}}Hj}{{{b{Hl}}}Hl}{{{b{{Hn{c}}}}}{{Hn{c}}}Db}{{{b{I`}}}I`}{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{If}}}If}{{{b{{Ih{c}}}}}{{Ih{c}}}{DbCl}}{{{b{{Ij{c}}}}}{{Ij{c}}}{DbCl}}{{{b{{Il{c}}}}}{{Il{c}}}{DbCl}}{{{b{In}}}In}{{{b{{J`{c}}}}}{{J`{c}}}Ef}{{{b{{Jb{c}}}}}{{Jb{c}}}Ef}{{{b{{Jd{c}}}}}{{Jd{c}}}Ef}{{{b{{Jf{c}}}}}{{Jf{c}}}{DbBd}}{{{b{{Jh{c}}}}}{{Jh{c}}}{DbBd}}{{{b{Jj}}}Jj}{{{b{Jl}}}Jl}{{{b{{Jn{c}}}}}{{Jn{c}}}{DbCl}}{{{b{K`}}}K`}{{{b{c}}{b{fe}}}l{}{}}0000000000000000000000{j{{b{c}}}{}}0000000000000000000000{j{{b{fc}}}{}}0000000000000000000000{{{Ad{En}}}{{Al{{Ad{e}}{Ad{En}}}}}{dCl}{{En{c}}}}{{{b{fEn}}}{{B`{{b{fe}}}}}{dCl}{{En{c}}}}{{{Ah{En}}}{{Al{{Ah{e}}{Ah{En}}}}}{dCl}{{En{c}}}}{{{b{En}}}{{B`{{b{e}}}}}{dCl}{{En{c}}}}{jl}0000000000000000000000{{{b{En}}{b{fA`}}}Ab}{{{b{{Hd{c}}}}{b{fA`}}}Ab{EhCl}}{{{b{Hf}}{b{fA`}}}Ab}{{{b{{Hh{c}}}}{b{fA`}}}Ab{EhCl}}{{{b{Hj}}{b{fA`}}}Ab}{{{b{Hl}}{b{fA`}}}Ab}{{{b{{Hn{c}}}}{b{fA`}}}AbEh}{{{b{I`}}{b{fA`}}}Ab}{{{b{Ib}}{b{fA`}}}Ab}{{{b{Id}}{b{fA`}}}Ab}{{{b{If}}{b{fA`}}}Ab}{{{b{{Jn{c}}}}{b{fA`}}}Ab{EhCl}}{{{b{K`}}{b{fA`}}}Ab}{cc{}}0000000000000000000000{{}j}0000000000000000000000{ce{}{}}0000000000000000000000{{{Ad{c}}}{{Ad{d}}}{}}0000000000000000000000{{{Af{c}}}{{Af{d}}}{}}0000000000000000000000{{{Ah{c}}}{{Ah{d}}}{}}0000000000000000000000{{{b{En}}}Dl}{{{b{En}}}{{b{Kb}}}}{{{b{{Hd{c}}}}}{{b{Kb}}}Cl}{{{b{Hf}}}{{b{Kb}}}}{{{b{{Hh{c}}}}}{{b{Kb}}}Cl}{{{b{Hj}}}{{b{Kb}}}}{{{b{Hl}}}{{b{Kb}}}}{{{b{{Hn{c}}}}}{{b{Kb}}}Cl}{{{b{I`}}}{{b{Kb}}}}{{{b{Ib}}}{{b{Kb}}}}{{{b{Id}}}{{b{Kb}}}}{{{b{If}}}{{b{Kb}}}}{{{b{{Ih{c}}}}}{{b{Kb}}}Cl}{{{b{{Ij{c}}}}}{{b{Kb}}}Cl}{{{b{{Il{c}}}}}{{b{Kb}}}Cl}{{{b{In}}}{{b{Kb}}}}{{{b{{J`{e}}}}}{{b{Kb}}}Bd{{Ef{}{{Ed{c}}}}}}{{{b{{Jb{e}}}}}{{b{Kb}}}Bd{{Ef{}{{Ed{c}}}}}}{{{b{{Jd{e}}}}}{{b{Kb}}}Bd{{Ef{}{{Ed{c}}}}}}{{{b{{Jf{c}}}}}{{b{Kb}}}Bd}{{{b{{Jh{c}}}}}{{b{Kb}}}Bd}{{{b{Jj}}}{{b{Kb}}}}{{{b{Jl}}}{{b{Kb}}}}{{{b{{Jn{c}}}}}{{b{Kb}}}Cl}{{{b{K`}}}{{b{Kb}}}}{{{b{En}}}cCl}{{{b{{Hd{c}}}}}cCl}{{{b{{Hh{c}}}}}cCl}{{{b{{Ih{c}}}}}cCl}{{{b{{J`{e}}}}}cBd{{Ef{}{{Ed{c}}}}}}{{{b{{Jh{c}}}}}cBd}{{{b{Jj}}}cCl}6{{{b{{Jn{c}}}}}cCl}73{{{b{{Jb{e}}}}}cBd{{Ef{}{{Ed{c}}}}}}{{{b{{Jd{e}}}}}cBd{{Ef{}{{Ed{c}}}}}}{{{b{En}}}{{Ej{c}}}Cl}{{{b{If}}}{{Ej{c}}}Cl}1{{{b{Hf}}}{{Ej{c}}}Cl}{{{b{{Hh{c}}}}}{{Ej{c}}}Cl}{{{b{Hj}}}{{Ej{c}}}Cl}{{{b{{Hn{c}}}}}{{Ej{c}}}Cl}{{{b{Ib}}}{{Ej{c}}}Cl}{{{b{{Ih{c}}}}}{{Ej{c}}}Cl}{{{b{{Ij{c}}}}}{{Ej{c}}}Cl}{{{b{In}}}{{Ej{c}}}Cl}{{{b{{Jf{c}}}}}{{Ej{c}}}Bd}{{{b{{Jh{c}}}}}{{Ej{c}}}Bd}{{{b{Jj}}}{{Ej{c}}}Cl}{{{b{Jl}}}{{Ej{c}}}Cl}{{{b{En}}}cCl}{{{b{{Jn{c}}}}}cCl}?{{{b{Hl}}}{{Ej{c}}}Cl}{{{b{I`}}}{{Ej{c}}}Cl}:{{{b{{Il{c}}}}}{{Ej{c}}}Cl}9{{{b{{J`{e}}}}}{{Ej{c}}}Bd{{Ef{}{{Ed{c}}}}}}{{{b{{Jb{e}}}}}{{Ej{c}}}Bd{{Ef{}{{Ed{c}}}}}}{{{b{{Jd{e}}}}}{{Ej{c}}}Bd{{Ef{}{{Ed{c}}}}}};:987{{{b{{Hd{c}}}}}cCl}{{{b{Hf}}}cCl}{{{b{{Hh{c}}}}}cCl}{{{b{Hj}}}cCl}{{{b{Hl}}}cCl}{{{b{{Hn{c}}}}}cCl}{{{b{I`}}}cCl}{{{b{Ib}}}cCl}{{{b{Id}}}cCl}{{{b{If}}}cCl}{{{b{{Ih{c}}}}}cCl}{{{b{{Ij{c}}}}}cCl}{{{b{{Il{c}}}}}cCl}{{{b{In}}}cCl}{{{b{{Jb{e}}}}}cBd{{Ef{}{{Ed{c}}}}}}{{{b{{Jd{e}}}}}cBd{{Ef{}{{Ed{c}}}}}}{{{b{{Jf{c}}}}}cBd}{{{b{{Jh{c}}}}}cBd}{{{b{Jl}}}cCl}{{{b{En}}}cCl}{{{b{{Jn{c}}}}}cCl}10{{{b{c}}}e{}{}}0000000000000000000000{c{{Al{e}}}{}{}}000000000000000000000000000000000000000000000{{{b{c}}}An{}}0000000000000000000000{ce{}{}}0000000000000000000000","D":"BMl","p":[[1,"reference"],[10,"Any",1238],[0,"mut"],[10,"Error",1239],[1,"usize"],[1,"unit"],[6,"CircuitError",0],[5,"Formatter",1240],[8,"Result",1240],[5,"Box",1241],[5,"Arc",1242],[5,"Rc",1243],[5,"String",1244],[6,"Result",1245],[5,"TypeId",1238],[6,"Option",1246],[5,"Vec",1247],[10,"PrimeField",1248],[5,"Private",1249],[10,"Circuit",44],[8,"Variable",44],[5,"PlonkCircuit",44],[10,"FftField",1250],[5,"BoolVar",44],[5,"EmulatedSWPointVariable",466,1251],[10,"EmulationConfig",359,1252],[5,"EmulatedTEPointVariable",466,1253],[5,"PointVariable",394],[1,"slice"],[10,"Field",1254],[6,"PlonkType",44],[6,"MergeableCircuitType",44],[10,"Clone",1255],[10,"Arithmetization",44],[5,"DensePolynomial",1256],[1,"tuple"],[5,"EmulatedVariable",359,1252],[1,"bool"],[5,"SWPoint",466,1251],[5,"TEPoint",394],[5,"Affine",1257],[17,"BaseField"],[10,"TECurveConfig",1258],[10,"Debug",1240],[1,"array"],[10,"Hasher",1259],[10,"Gate",622],[5,"FpElemVar",549],[5,"FpElem",549],[10,"SerializableEmulatedStruct",359,1252],[10,"PartialEq",1260],[5,"Projective",1261],[5,"Affine",1262],[10,"SWToTEConParam",394,1263],[10,"SWCurveConfig",1264],[10,"MultiScalarMultiplicationCircuit",394,1265],[6,"SerializationError",1266],[17,"Item"],[10,"Iterator",1267],[10,"Send",1268],[6,"Compress",1269],[6,"Validate",1269],[10,"Read",1270],[10,"Write",1270],[10,"Default",1271],[5,"ConstantGate",622,1272],[5,"AdditionGate",622,1272],[5,"ConstantAdditionGate",622,1272],[5,"SubtractionGate",622,1272],[5,"MultiplicationGate",622,1272],[5,"ConstantMultiplicationGate",622,1272],[5,"BoolGate",622,1272],[5,"EqualityGate",622,1272],[5,"IoGate",622,1272],[5,"FifthRootGate",622,1272],[5,"QuadPolyGate",622,1272],[5,"LinCombGate",622,1272],[5,"MulAddGate",622,1272],[5,"CondSelectGate",622,1272],[5,"EdwardsCurveEquationGate",622,1273],[5,"CurvePointXAdditionGate",622,1273],[5,"CurvePointYAdditionGate",622,1273],[5,"QuaternaryPointSelectXGate",622,1273],[5,"QuaternaryPointSelectYGate",622,1273],[5,"LogicOrGate",622,1274],[5,"LogicOrOutputGate",622,1274],[5,"LookupGate",622,1275],[5,"PaddingGate",622],[1,"str"]],"r":[[360,1252],[361,1252],[363,1252],[378,1252],[387,1252],[395,1265],[399,1263],[466,1251],[467,1253],[468,1251],[622,1272],[623,1272],[624,1272],[625,1272],[626,1272],[627,1272],[628,1273],[629,1273],[630,1273],[631,1272],[632,1272],[634,1272],[635,1272],[636,1274],[637,1274],[638,1275],[639,1272],[640,1272],[642,1272],[643,1273],[644,1273],[645,1272]],"b":[[25,"impl-Debug-for-CircuitError"],[26,"impl-Display-for-CircuitError"],[433,"impl-From%3CProjective%3CP%3E%3E-for-TEPoint%3CF%3E"],[434,"impl-From%3CAffine%3CP%3E%3E-for-TEPoint%3CF%3E"],[436,"impl-From%3CAffine%3CP%3E%3E-for-TEPoint%3CF%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAGgDWgAQAAQAFwAEAB8AAAAhAAcAOgADAD8AAABDAAAARQAHAFAABwBZAAAAXAAHAGUAAABnAAAAaQAAAGsAAABtAAAAbwAAAHEAAABzAAAAdQAAAHcAAAB5AAAAewAAAIQAAACPAAAAkgANALMAAAC1AAAAugAAAMgABwDRAAAA1gAEAOEABQDsAAoAFwEBABoBAAAgAQAAKgEAACwBAAAvAQAAMQEAADUBAAA6AQAAPwEAAEEBAABDAQAARQEAAEgBBABQAQsAXwEDAGQBAABuAQkAeQEAAHwBAAB+AQIAhQEDAIoBAACSARQAqAELALUBAAC7AQEAvwEFAMgBCgDWASgAAAIAAAMCAgAJAhoAKAINADkCBwBCAgcASwIBAE8CAQBTAgUAYAIFAGgCAwCHAs4AWgMjAJUDFgDDA0QACgQWACIEBQApBAAAKwQCAC8EAAAxBAsAPgQAAEAECwBNBBIAYQQAAGMEcwA="}],\
["jf_rescue",{"t":"TTSTTTTFPFSGFKFSNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["A","A_INV","CRHF_RATE","INIT_VEC_LE","KEY_INJECTION_LE","MDS_LE","PERMUTATION_ROUND_KEYS","PRP","ParameterError","Permutation","ROUNDS","RescueError","RescueMatrix","RescueParameter","RescueVector","STATE_SIZE","as_error_source","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","commitment","crhf","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","elems","eq","eq","equivalent","equivalent","equivalent","equivalent","eval","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init_vec_ref","into","into","into","into","into","is_empty","key_injection_vec_ref","key_schedule","len","linear","mds_matrix_ref","mds_matrix_ref","non_linear","prf","prp","prp_with_round_keys","round_keys_ref","sponge","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vec","vzip","vzip","vzip","vzip","vzip","zero","FixedLengthRescueCommitment","borrow","borrow_mut","clone","clone_into","commit","default","deref","deref_mut","drop","eq","equivalent","equivalent","fmt","from","init","into","to_owned","try_from","try_into","type_id","verify","vzip","FixedLengthRescueCRHF","RescueCRHF","VariableLengthRescueCRHF","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","evaluate","evaluate","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","sponge_no_padding","sponge_with_bit_padding","sponge_with_zero_padding","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","RescuePRF","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","evaluate","fmt","from","init","into","to_owned","try_from","try_into","type_id","vzip","RescueSponge","absorb","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","fork","from","from_state","init","into","into_state","new","squeeze_bits","squeeze_bytes","squeeze_field_elements","squeeze_field_elements_with_sizes","squeeze_native_field_elements","squeeze_native_field_elements_with_sizes","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"jf_rescue"],[129,"jf_rescue::commitment"],[152,"jf_rescue::crhf"],[208,"jf_rescue::prf"],[226,"jf_rescue::sponge"],[255,"core::error"],[256,"core::clone"],[257,"core::default"],[258,"alloc::vec"],[259,"ark_ff::fields::prime"],[260,"core::cmp"],[261,"core::fmt"],[262,"core::marker"],[263,"alloc::string"],[264,"core::result"],[265,"core::any"],[266,"core::option"],[267,"core::borrow"],[268,"ark_crypto_primitives::sponge::absorb"],[269,"ark_crypto_primitives::sponge"]],"i":[11,11,0,11,11,11,11,0,15,0,0,0,0,0,0,0,15,15,4,6,7,8,15,4,6,7,8,4,6,7,8,4,6,7,8,0,0,4,7,8,15,4,6,7,8,15,4,6,7,8,15,4,6,7,8,4,15,4,15,15,4,4,8,15,15,4,6,7,8,15,4,4,4,6,6,7,8,8,15,4,6,7,8,7,15,4,6,7,8,6,7,7,6,4,7,8,4,0,7,7,8,0,4,6,7,8,15,15,4,6,7,8,15,4,6,7,8,15,4,6,7,8,6,15,4,6,7,8,4,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,31,32,30,31,32,30,31,32,30,31,32,30,31,32,30,30,30,30,31,32,30,31,32,30,31,32,30,31,32,30,31,32,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34],"f":"````````````````{{{b{c}}}{{b{d}}}{}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{fc}}}{{b{fe}}}{}{}}0000{{{b{{h{c}}}}}{{h{c}}}j}{{{b{{l{c}}}}}{{l{c}}}j}{{{b{{n{c}}}}}{{n{c}}}j}{{{b{{A`{c}}}}}{{A`{c}}}j}{{{b{c}}{b{fe}}}Ab{}{}}000``{{}{{h{c}}}Ad}{{}{{n{c}}}Af}{{}{{A`{c}}}Af}{Ah{{b{c}}}{}}0000{Ah{{b{fc}}}{}}0000{AhAb}0000{{{b{{h{c}}}}}{{Aj{c}}}Al}{{{b{An}}{b{An}}}B`}{{{b{{h{c}}}}{b{{h{c}}}}}B`Bb}{{{b{c}}{b{e}}}B`{}{}}000{{{b{{A`{c}}}}{b{{h{c}}}}}{{h{c}}}Af}{{{b{An}}{b{fBd}}}Bf}0{{{b{{h{c}}}}{b{fBd}}}BfBh}{{{b{{l{c}}}}{b{fBd}}}BfBh}{{{b{{n{c}}}}{b{fBd}}}BfBh}{{{b{{A`{c}}}}{b{fBd}}}BfBh}{cc{}}{{{b{{Bj{c}}}}}{{h{c}}}Bl}{{{b{{Bn{c}}}}}{{h{c}}}Bl}22{{{b{{Bj{{h{c}}}}}}}{{l{c}}}Al}3{{{n{c}}}{{A`{c}}}Af}4{{}Ah}0000{{{b{{n{c}}}}}{{b{{h{c}}}}}Af}{ce{}{}}0000{{{b{{l{c}}}}}B`Al}{{{b{{n{c}}}}}{{b{{Bn{{h{c}}}}}}}Af}{{{b{{n{c}}}}{b{{h{c}}}}}{{Aj{{h{c}}}}}Af}{{{b{{l{c}}}}}AhAl}{{{b{f{h{c}}}}{b{{l{c}}}}{b{{h{c}}}}}AbAl}{{{b{{n{c}}}}}{{b{{l{c}}}}}Af}{{{b{{A`{c}}}}}{{b{{l{c}}}}}Af}{{{b{f{h{c}}}}{b{{l{c}}}}{b{{h{c}}}}}AbAf}`{{{b{{n{c}}}}{b{{h{c}}}}{b{{h{c}}}}}{{h{c}}}Af}{{{b{{n{c}}}}{b{{Bn{{h{c}}}}}}{b{{h{c}}}}}{{h{c}}}Af}{{{b{{A`{c}}}}}{{b{{Bn{{h{c}}}}}}}Af}`{{{b{c}}}e{}{}}000{{{b{c}}}C`{}}{c{{Cb{e}}}{}{}}000000000{{{b{c}}}Cd{}}0000{{{b{{l{c}}}}Ah}{{h{c}}}Al}{ce{}{}}0000{{}{{h{c}}}Al}`{{{b{c}}}{{b{e}}}{}{}}{{{b{fc}}}{{b{fe}}}{}{}}{{{b{{Cf{c}}}}}{{Cf{c}}}{jAf}}{{{b{c}}{b{fe}}}Ab{}{}}{{e{Ch{{b{g}}}}}{{Cb{ik}}}{}{{Cj{c}}}{}{}{}}{{}{{Cf{c}}}{AdAf}}{Ah{{b{c}}}{}}{Ah{{b{fc}}}{}}{AhAb}{{{b{{Cf{c}}}}{b{{Cf{c}}}}}B`{BbAf}}{{{b{c}}{b{e}}}B`{}{}}0{{{b{{Cf{c}}}}{b{fBd}}}Bf{BhAf}}{cc{}}{{}Ah}?{{{b{c}}}e{}{}}{c{{Cb{e}}}{}{}}0{{{b{c}}}Cd{}}{{e{Ch{{b{g}}}}{b{i}}}{{Cb{{Cb{AbAb}}k}}}{}{{Cj{c}}}{}{}{}}{ce{}{}}```{{{b{c}}}{{b{e}}}{}{}}00{{{b{fc}}}{{b{fe}}}{}{}}00{{{b{{Cl{c}}}}}{{Cl{c}}}{jAf}}{{{b{{Cn{c}}}}}{{Cn{c}}}{jAf}}{{{b{{D`{c}}}}}{{D`{c}}}{jAf}}{{{b{c}}{b{fe}}}Ab{}{}}00{Ah{{b{c}}}{}}00{Ah{{b{fc}}}{}}00{AhAb}00{e{{Cb{gi}}}{}{{Cj{c}}}{}{}}0{{{b{{Cl{c}}}}{b{fBd}}}Bf{BhAf}}{{{b{{Cn{c}}}}{b{fBd}}}Bf{BhAf}}{{{b{{D`{c}}}}{b{fBd}}}Bf{BhAf}}{cc{}}00{{}Ah}00???{{{b{{Bn{c}}}}Ah}{{Cb{{Aj{c}}An}}}Af}{{{b{{Bn{c}}}}Ah}{{Aj{c}}}Af}0{{{b{c}}}e{}{}}00{c{{Cb{e}}}{}{}}00000{{{b{c}}}Cd{}}00{ce{}{}}00`{{{b{c}}}{{b{e}}}{}{}}{{{b{fc}}}{{b{fe}}}{}{}}{{{b{{Db{c}}}}}{{Db{c}}}{jAf}}{{{b{c}}{b{fe}}}Ab{}{}}{Ah{{b{c}}}{}}{Ah{{b{fc}}}{}}{AhAb}{{ei}{{Cb{km}}}{}{{Cj{c}}}{}{{Cj{g}}}{}{}}{{{b{{Db{c}}}}{b{fBd}}}Bf{BhAf}}{cc{}}{{}Ah};>==<;`{{{b{f{Dd{c}}}}{b{e}}}Ab{AfAl}Df};:{{{b{{Dd{c}}}}}{{Dd{c}}}{jAf}}9{{}{{Dd{c}}}{AdAf}}987{{{b{{Dd{c}}}}{b{fBd}}}Bf{BhAf}}{{{b{{Dd{c}}}}{b{{Bn{Dh}}}}}{{Dd{c}}}{AfAl}}6{{c{b{e}}}{{Dd{g}}}{}{}Af}6{ce{}{}}{{{Dd{c}}}eAf{}}{{{b{c}}}{{Dd{e}}}{}{AfAl}}{{{b{f{Dd{c}}}}Ah}{{Aj{B`}}}{AfAl}}{{{b{f{Dd{c}}}}Ah}{{Aj{Dh}}}{AfAl}}{{{b{f{Dd{c}}}}Ah}{{Aj{e}}}{AfAl}Al}{{{b{f{Dd{c}}}}{b{{Bn{Dj}}}}}{{Aj{e}}}{AfAl}Al}{{{b{f{Dd{c}}}}Ah}{{Aj{c}}}Af}{{{b{f{Dd{c}}}}{b{{Bn{Dj}}}}}{{Aj{c}}}Af}{{{b{c}}}e{}{}}{c{{Cb{e}}}{}{}}0{{{b{c}}}Cd{}};","D":"In","p":[[1,"reference"],[10,"Error",255],[0,"mut"],[5,"RescueVector",0],[10,"Clone",256],[5,"RescueMatrix",0],[5,"PRP",0],[5,"Permutation",0],[1,"unit"],[10,"Default",257],[10,"RescueParameter",0],[1,"usize"],[5,"Vec",258],[10,"PrimeField",259],[6,"RescueError",0],[1,"bool"],[10,"PartialEq",260],[5,"Formatter",261],[8,"Result",261],[10,"Debug",261],[1,"array"],[10,"Copy",262],[1,"slice"],[5,"String",263],[6,"Result",264],[5,"TypeId",265],[5,"FixedLengthRescueCommitment",129],[6,"Option",266],[10,"Borrow",267],[5,"RescueCRHF",152],[5,"FixedLengthRescueCRHF",152],[5,"VariableLengthRescueCRHF",152],[5,"RescuePRF",208],[5,"RescueSponge",226],[10,"Absorb",268],[1,"u8"],[6,"FieldElementSize",269]],"r":[],"b":[[63,"impl-Display-for-RescueError"],[64,"impl-Debug-for-RescueError"],[70,"impl-From%3C%26%5BF;+STATE_SIZE%5D%3E-for-RescueVector%3CF%3E"],[71,"impl-From%3C%26%5BF%5D%3E-for-RescueVector%3CF%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAALAAGAARABIAJgARADkABQBAAAUARwABAEsAAABNAAAATwAEAGcAEwB8AAQAgwAMAJEAAACTAAUAnAAUALMAAgC5AAIAwgAOANIACADcAAAA3gAEAOUACADwAAEA8wAAAPsABAA="}],\
["jf_signature",{"t":"KTRPRRGKRPRMMNNCNNNNNNNMMMMNNNNMNSSSSSSSSCSSSSSSS","n":["AggregateableSignatureSchemes","CS_ID","MessageUnit","ParameterError","PublicParameter","Signature","SignatureError","SignatureScheme","SigningKey","VerificationError","VerificationKey","aggregate","aggregate_verify","borrow","borrow_mut","constants","eq","equivalent","fmt","fmt","from","from","into","key_gen","multi_sig_verify","param_gen","sign","to_string","try_from","try_into","type_id","verify","vzip","BLS_SIG_COMPRESSED_PK_SIZE","BLS_SIG_COMPRESSED_SIGNATURE_SIZE","BLS_SIG_PK_SIZE","BLS_SIG_SIGNATURE_SIZE","BLS_SIG_SK_SIZE","CS_ID_BLS_BN254","CS_ID_BLS_MIN_SIG","CS_ID_SCHNORR","tag","BLS_SIG","BLS_SIGNING_KEY","BLS_VER_KEY","SCHNORR_KEY_PAIR","SCHNORR_SIG","SCHNORR_SIGNING_KEY","SCHNORR_VER_KEY"],"q":[[0,"jf_signature"],[33,"jf_signature::constants"],[42,"jf_signature::constants::tag"],[49,"core::result"],[50,"core::convert"],[51,"core::fmt"],[52,"blst"],[53,"rand_core"],[54,"core::option"],[55,"alloc::string"],[56,"core::any"]],"i":[0,18,18,3,18,18,0,0,18,3,18,19,19,3,3,0,3,3,3,3,3,3,3,18,19,18,18,3,3,3,3,18,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"```````````{{{b{c}}{b{{d{e}}}}{b{{d{g}}}}}{{h{gf}}}{}{}{}}{{{b{c}}{b{{d{e}}}}{b{{d{i}}}}{b{k}}}{{h{jf}}}{}{}{}{{l{{d{g}}}}}{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{nc}}}{{b{ne}}}{}{}}`{{{b{f}}{b{f}}}A`}{{{b{c}}{b{e}}}A`{}{}}{{{b{f}}{b{nAb}}}Ad}0{Aff}{cc{}}{ce{}{}}{{{b{c}}{b{ne}}}{{h{{Ah{gi}}f}}}{}{AjAl}{}{}}{{{b{c}}{b{{d{e}}}}{b{{d{g}}}}{b{i}}}{{h{jf}}}{}{}{}{}}{{{An{{b{nc}}}}}{{h{ef}}}{AjAl}{}}{{{b{c}}{b{e}}i{b{nk}}}{{h{mf}}}{}{}{}{{l{{d{g}}}}}{AjAl}{}}{{{b{c}}}B`{}}{c{{h{e}}}{}{}}0{{{b{c}}}Bb{}}{{{b{c}}{b{e}}i{b{k}}}{{h{jf}}}{}{}{}{{l{{d{g}}}}}{}}8````````````````","D":"Dl","p":[[1,"reference"],[1,"slice"],[6,"SignatureError",0],[6,"Result",49],[1,"unit"],[10,"AsRef",50],[0,"mut"],[1,"bool"],[5,"Formatter",51],[8,"Result",51],[6,"BLST_ERROR",52],[1,"tuple"],[10,"CryptoRng",53],[10,"RngCore",53],[6,"Option",54],[5,"String",55],[5,"TypeId",56],[10,"SignatureScheme",0],[10,"AggregateableSignatureSchemes",0]],"r":[],"b":[[18,"impl-Debug-for-SignatureError"],[19,"impl-Display-for-SignatureError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAsABAAOAAEAEQAEABwAAwAhAAAA"}],\
["jf_utils",{"t":"FNNHHCHHNNNQQNHHHHHHNNHHNNHHCCNHQQQQNNNNHHHHFNNNNNNNNNNNHHHNNNNN","n":["CanonicalBytes","borrow","borrow_mut","bytes_from_field_elements","bytes_to_field_elements","canonical","challenge_bit_len","compute_len_to_next_multiple","deref","deref_mut","deserialize","deserialize_canonical_bytes","deserialize_canonical_bytes","drop","field_bit_len","field_byte_len","field_switching","fq_to_fr","fq_to_fr_with_mask","fr_to_fq","from","from","hadamard_product","hash_to_field","init","into","multi_pairing","pad_with_zeros","par_utils","reed_solomon_code","serialize","test_rng","test_serde_default","test_serde_default","to_bytes","to_bytes","try_from","try_into","type_id","vzip","deserialize","serialize","parallelizable_chunks","parallelizable_slice_iter","RSCodeError","as_error_source","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","init","into","reed_solomon_erasure_decode","reed_solomon_erasure_decode_rou","reed_solomon_erasure_encode","to_string","try_from","try_into","type_id","vzip"],"q":[[0,"jf_utils"],[40,"jf_utils::canonical"],[42,"jf_utils::par_utils"],[44,"jf_utils::reed_solomon_code"],[64,"alloc::vec"],[65,"ark_ff::fields"],[66,"core::borrow"],[67,"jf_utils::serialize"],[68,"core::result"],[69,"serde::de"],[70,"ark_ff::fields::prime"],[71,"ark_serialize"],[72,"alloc::string"],[73,"core::convert"],[74,"ark_ec::pairing"],[75,"serde::ser"],[76,"rand::rngs::std"],[77,"core::any"],[78,"core::slice::iter"],[79,"core::error"],[80,"core::fmt"],[81,"core::iter::traits::collect"],[82,"ark_poly::domain::radix2"],[83,"ark_ff::fields::fft_friendly"],[84,"core::iter::traits::iterator"],[85,"jf_utils::conversion"],[86,"jf_utils::multi_pairing"],[87,"jf_utils::serialize::canonical"]],"i":[0,9,9,0,0,0,0,0,9,9,9,0,0,9,0,0,0,0,0,0,9,9,0,0,9,9,0,0,0,0,9,0,0,0,0,0,9,9,9,9,0,0,0,0,0,26,26,26,26,26,26,26,26,26,26,26,0,0,0,26,26,26,26,26],"f":"`{{{b{c}}}{{b{e}}}{}{}}{{{b{dc}}}{{b{de}}}{}{}}{e{{h{f}}}j{{n{{l{c}}}}}}{c{{h{e}}}{{n{{l{f}}}}}j}`{{}A`}{{A`A`}A`}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{c{{Ad{Ab}}}Af}``{A`Ah}55{{{b{c}}}eAjAj}{{{b{c}}}{}Aj}1{bcAj}{cAbAl}{cc{}}{{ei}{{Ad{{h{g}}An}}}{}{{B`{{l{c}}}}}{}{{B`{{l{g}}}}}}{ce{{B`{{l{f}}}}}Aj}<{ce{}{}}{{{b{l}}{b{l}}}{{Bb{c}}}Bd}{{{b{d{h{c}}}}A`}Ahj}``{{{b{Ab}}c}AdBf}{{}Bh}````{c{{Ad{e}}}{}{}}0{{{b{c}}}Bj{}}6{c{{Ad{e}}}AfBl}{{{b{c}}e}AdAlBf}{{{b{{l{c}}}}A`}{{Bn{c}}}{}}{{{b{{l{c}}}}}{{C`{c}}}{}}`{{{b{c}}}{{b{Cb}}}{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{dc}}}{{b{de}}}{}{}}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{A`Ah}{{{b{Cd}}{b{dCf}}}Ch}0{cc{}}{{}A`}{ce{}{}}{{cA`}{{Ad{{h{e}}Cd}}}Cjj}{{cA`{b{{Cl{e}}}}}{{Ad{{h{e}}Cd}}}CjCn}{{cA`}{{`{{Db{}{{D`{e}}}}}}}Cjj}{{{b{c}}}An{}}{c{{Ad{e}}}{}{}}0{{{b{c}}}Bj{}}6","D":"Bn","p":[[1,"reference"],[0,"mut"],[1,"u8"],[5,"Vec",64],[10,"Field",65],[1,"slice"],[10,"Borrow",66],[1,"usize"],[5,"CanonicalBytes",0,67],[6,"Result",68],[10,"Deserializer",69],[1,"unit"],[10,"PrimeField",70],[10,"CanonicalSerialize",71],[5,"String",72],[10,"AsRef",73],[5,"PairingOutput",74],[10,"Pairing",74],[10,"Serializer",75],[5,"StdRng",76],[5,"TypeId",77],[10,"CanonicalDeserialize",71],[5,"Chunks",78],[5,"Iter",78],[10,"Error",79],[5,"RSCodeError",44],[5,"Formatter",80],[8,"Result",80],[10,"IntoIterator",81],[5,"Radix2EvaluationDomain",82],[10,"FftField",83],[17,"Item"],[10,"Iterator",84]],"r":[[0,67],[3,85],[4,85],[5,67],[16,85],[17,85],[18,85],[19,85],[23,85],[26,86],[40,87],[41,87]],"b":[[51,"impl-Display-for-RSCodeError"],[52,"impl-Debug-for-RSCodeError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACkACgACAAEABwAKABUAAAAZAAAAHAAAAB8AAwAlAAcALgAHADcAAAA8AAQA"}],\
["jf_vdf",{"t":"RRRRKFNNNNNNNNMNNNNNCMNNNNMNTFFKFNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Input","Output","Proof","PublicParameter","VDF","VDFError","borrow","borrow_mut","deref","deref_mut","drop","eq","equivalent","equivalent","eval","fmt","fmt","from","init","into","minroot","setup","to_string","try_from","try_into","type_id","verify","vzip","EXP_COEF","MinRoot","MinRootElement","MinRootField","MinRootPP","batch_check","batch_check","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check","check","clone","clone","clone_into","clone_into","cmp","cmp","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize_with_mode","deserialize_with_mode","difficulty","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","eval","fmt","fmt","from","from","from","from","init","init","init","into","into","into","partial_cmp","partial_cmp","serialize_with_mode","serialize_with_mode","serialized_size","serialized_size","setup","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify","vzip","vzip","vzip"],"q":[[0,"jf_vdf"],[28,"jf_vdf::minroot"],[104,"core::result"],[105,"core::fmt"],[106,"core::option"],[107,"rand_core"],[108,"alloc::string"],[109,"core::any"],[110,"ark_serialize::error"],[111,"core::iter::traits::iterator"],[112,"core::marker"],[113,"core::clone"],[114,"core::cmp"],[115,"core::default"],[116,"ark_serialize"],[117,"std::io"],[118,"ark_ec"]],"i":[37,37,37,37,0,0,5,5,5,5,5,5,5,5,37,5,5,5,5,5,0,37,5,5,5,5,37,5,22,0,0,0,0,19,23,38,19,23,38,19,23,19,23,19,23,19,23,19,23,19,23,38,19,23,38,19,23,19,23,19,38,19,23,19,23,19,19,23,23,38,19,23,38,19,23,23,38,19,23,38,19,23,19,23,19,23,19,23,38,19,23,38,19,23,38,19,23,38,19,23,38,38,19,23],"f":"``````{{{b{c}}}{{b{e}}}{}{}}{{{b{dc}}}{{b{de}}}{}{}}{f{{b{c}}}{}}{f{{b{dc}}}{}}{fh}{{{b{j}}{b{j}}}l}{{{b{c}}{b{e}}}l{}{}}0{{{b{c}}{b{e}}}{{A`{{n{gi}}j}}}{}{}{}{}}{{{b{j}}{b{dAb}}}Ad}0{cc{}}{{}f}{ce{}{}}`{{Af{Ah{{b{dc}}}}}{{A`{ej}}}{AjAl}{}}{{{b{c}}}An{}}{c{{A`{e}}}{}{}}0{{{b{c}}}B`{}}{{{b{c}}{b{e}}{b{g}}{b{i}}}{{A`{{A`{hh}}j}}}{}{}{}{}}5`````{c{{A`{hBb}}}{{Bh{}{{Bd{{b{Bf}}}}}}Bj}}{e{{A`{hBb}}}Bl{{Bh{}{{Bd{{b{{Bn{c}}}}}}}}Bj}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{dc}}}{{b{de}}}{}{}}00{{{b{Bf}}}{{A`{hBb}}}}{{{b{{Bn{c}}}}}{{A`{hBb}}}Bl}{{{b{Bf}}}Bf}{{{b{{Bn{c}}}}}{{Bn{c}}}{C`Bl}}{{{b{c}}{b{de}}}h{}{}}0{{{b{Bf}}{b{Bf}}}Cb}{{{b{{Bn{c}}}}{b{{Bn{c}}}}}Cb{CdBl}}{{}Bf}{{}{{Bn{c}}}{CfBl}}{f{{b{c}}}{}}00{f{{b{dc}}}{}}00{{cChCj}{{A`{BfBb}}}Cl}{{cChCj}{{A`{{Bn{e}}Bb}}}ClBl}`{fh}00{{{b{Bf}}{b{Bf}}}l}{{{b{{Bn{c}}}}{b{{Bn{c}}}}}l{CnBl}}{{{b{c}}{b{e}}}l{}{}}000{{{b{c}}{b{e}}}{{A`{{n{gi}}j}}}{}{}{}{}}{{{b{Bf}}{b{dAb}}}Ad}{{{b{{Bn{c}}}}{b{dAb}}}Ad{D`Bl}}{cc{}}00{e{{Bn{c}}}Bl{{Dd{}{{Db{c}}}}}}{{}f}00{ce{}{}}00{{{b{Bf}}{b{Bf}}}{{Ah{Cb}}}}{{{b{{Bn{c}}}}{b{{Bn{c}}}}}{{Ah{Cb}}}{DfBl}}{{{b{Bf}}cCh}{{A`{hBb}}}Dh}{{{b{{Bn{c}}}}eCh}{{A`{hBb}}}BlDh}{{{b{Bf}}Ch}f}{{{b{{Bn{c}}}}Ch}fBl}{{Af{Ah{{b{dc}}}}}{{A`{ej}}}{AjAl}{}}{{{b{c}}}e{}{}}0{c{{A`{e}}}{}{}}00000{{{b{c}}}B`{}}00{{{b{c}}{b{e}}{b{g}}{b{i}}}{{A`{{A`{hh}}j}}}{}{}{}{}};;;","D":"Cb","p":[[1,"reference"],[0,"mut"],[1,"usize"],[1,"unit"],[5,"VDFError",0],[1,"bool"],[1,"tuple"],[6,"Result",104],[5,"Formatter",105],[8,"Result",105],[1,"u64"],[6,"Option",106],[10,"CryptoRng",107],[10,"RngCore",107],[5,"String",108],[5,"TypeId",109],[6,"SerializationError",110],[17,"Item"],[5,"MinRootPP",28],[10,"Iterator",111],[10,"Send",112],[10,"MinRootField",28],[5,"MinRootElement",28],[10,"Clone",113],[6,"Ordering",114],[10,"Ord",114],[10,"Default",115],[6,"Compress",116],[6,"Validate",116],[10,"Read",117],[10,"PartialEq",114],[10,"Debug",105],[17,"BaseField"],[10,"AffineRepr",118],[10,"PartialOrd",114],[10,"Write",117],[10,"VDF",0],[5,"MinRoot",28]],"r":[],"b":[[15,"impl-Debug-for-VDFError"],[16,"impl-Display-for-VDFError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAE8ACQAHAAcAEAABABMAAAAXAAMAHAAAACIAGQA9AAsATAADAFMAFQA="}],\
["jf_vid",{"t":"PRRPPPRFGIKNCNNNNNNNNNNNOMONNNNNMNNNNNNNNNNNMMMNNNNNNNNNNNMCCMNONNNNNNNNMNNIFFKFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNCNNCNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFNNNNNNNOONNNNNNNNNMOMONNNNNKRMM","n":["Argument","Commit","Common","Err","Internal","Ok","Share","VidDisperse","VidError","VidResult","VidScheme","__clone_box","advz","as_any","as_any","as_any_mut","as_any_mut","as_error_source","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","commit","commit_only","common","deref","deref","deref_mut","deref_mut","deserialize","disperse","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","get_multiplicity","get_num_storage_nodes","get_payload_byte_len","hash","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_consistent","payload_prover","precomputable","recover_payload","serialize","shares","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","verify_share","vzip","vzip","Advz","AdvzInternal","Common","MaybeGPU","Share","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","batch_check","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check","clone","clone","clone","clone_into","clone_into","clone_into","commit_only","commit_only_precompute","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize_with_mode","disperse","disperse_precompute","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","get_multiplicity","get_num_storage_nodes","get_payload_byte_len","hash","hash","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_consistent","kzg_batch_commit","kzg_batch_commit","new","new","payload_proof","payload_proof","payload_prover","payload_verify","payload_verify","precomputable","recover_payload","serialize","serialize","serialize_with_mode","serialized_size","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify_share","vzip","vzip","vzip","with_multiplicity","with_multiplicity","LargeRangeProof","SmallRangeProof","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","PrecomputeData","__clone_box","as_any","as_any_mut","batch_check","borrow","borrow_mut","check","clone","clone_into","deref","deref_mut","deserialize","deserialize_with_mode","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","into_any","into_any_arc","into_any_rc","serialize","serialize_with_mode","serialized_size","to_owned","try_from","try_into","type_id","vzip","PayloadProver","Statement","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","commit","common","deref","deref_mut","drop","from","init","into","into_any","into_any_arc","into_any_rc","payload_proof","payload_subslice","payload_verify","range","to_owned","try_from","try_into","type_id","vzip","Precomputable","PrecomputeData","commit_only_precompute","disperse_precompute"],"q":[[0,"jf_vid"],[75,"jf_vid::advz"],[191,"jf_vid::advz::payload_prover"],[249,"jf_vid::advz::precomputable"],[284,"jf_vid::payload_prover"],[313,"jf_vid::precomputable"],[317,"dyn_clone::sealed"],[318,"core::any"],[319,"core::error"],[320,"core::marker"],[321,"core::clone"],[322,"core::fmt"],[323,"serde::de"],[324,"core::cmp"],[325,"core::hash"],[326,"serde::ser"],[327,"tagged_base64"],[328,"core::convert"],[329,"core::result"],[330,"alloc::boxed"],[331,"alloc::sync"],[332,"alloc::rc"],[333,"alloc::vec"],[334,"alloc::string"],[335,"ark_serialize::error"],[336,"ark_ec::pairing"],[337,"jf_merkle_tree::hasher"],[338,"core::iter::traits::iterator"],[339,"ark_serialize"],[340,"std::io"],[341,"ark_poly::polynomial::univariate::dense"],[342,"core::borrow"],[343,"core::ops::range"]],"i":[35,8,8,13,35,13,8,0,0,0,0,7,0,7,35,7,35,35,7,35,7,35,7,7,7,8,7,7,35,7,35,7,8,7,35,7,7,7,7,7,35,35,7,35,8,8,8,7,7,35,7,35,7,35,7,35,7,35,8,0,0,8,7,7,7,35,7,35,7,35,7,35,8,7,35,0,0,0,0,0,52,53,49,52,53,49,52,53,49,49,52,53,49,52,53,49,49,52,53,49,52,53,49,52,52,52,53,49,52,53,49,53,49,49,52,52,52,53,49,52,53,49,52,52,52,53,53,53,49,49,49,52,53,49,52,53,49,52,52,52,53,49,52,53,49,52,53,49,52,53,49,52,53,49,52,53,49,52,58,60,60,52,52,52,0,52,52,0,52,53,49,49,49,52,53,49,52,53,49,52,53,49,52,53,49,52,52,53,49,60,52,0,0,63,64,63,64,63,64,63,64,63,64,63,64,63,64,63,64,63,64,63,64,63,64,63,64,63,63,63,64,64,64,63,64,63,64,63,64,63,64,63,64,63,64,63,64,63,64,63,64,63,64,63,64,63,64,63,64,0,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,0,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,70,65,70,65,65,65,65,65,65,0,72,72,72],"f":"```````````{{{b{c}}d}f{}}`{{{b{c}}}{{b{h}}}{}}0{{{b{jc}}}{{b{jh}}}{}}0{{{b{c}}}{{b{l}}}{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{jc}}}{{b{je}}}{}{}}0{{{b{{n{c}}}}}{{n{c}}}{A`Ab}}{{{b{c}}{b{je}}}f{}{}}`{{{b{j{A`{}{{Ad{c}}{Af{e}}{Ah{g}}}}}}i}{{Aj{c}}}{AlAnB`BbBdBfBhBjBl{C`{{b{Bn}}}}{Cb{Bn}}}{AlAnBbBdBfBhBjBl}{AlAnBbBdBfBhBjBl}{{Ch{{Cf{Cd}}}}}}`{Cj{{b{c}}}{}}0{Cj{{b{jc}}}{}}0{c{{Cl{{n{e}}}}}Cn{A`Ab}}{{{b{j{A`{}{{Ad{c}}{Af{e}}{Ah{g}}}}}}i}{{Aj{{n{{A`{}{{Ad{c}}{Af{e}}{Ah{g}}}}}}}}}{AlAnB`BbBdBfBhBjBl{C`{{b{Bn}}}}{Cb{Bn}}}{AlAnBbBdBfBhBjBl}{AlAnBbBdBfBhBjBl}{{Ch{{Cf{Cd}}}}}}{Cjf}0{{{b{{n{c}}}}{b{{n{c}}}}}D`{A`Ab}}{{{b{c}}{b{e}}}D`{}{}}00{{{b{{n{c}}}}{b{jDb}}}Dd{A`Ab}}{{{b{Df}}{b{jDb}}}Dd}0{cc{}}0{{{b{c}}}Dh{}}00{{{b{{n{c}}}}{b{je}}}f{A`Ab}Dj}{{}Cj}0{ce{}{}}0{{{Dl{c}}}{{Dl{h}}}{}}0{{{Dn{c}}}{{Dn{h}}}{}}0{{{E`{c}}}{{E`{h}}}{}}0{{{b{c}}{b{e}}}{{Aj{f}}}{}{}}``{{{b{{A`{}{{Ad{c}}{Af{e}}{Ah{g}}}}}}{b{{Cf{e}}}}{b{g}}}{{Aj{{Eb{Cd}}}}}{AlAnB`BbBdBfBhBjBl{C`{{b{Bn}}}}{Cb{Bn}}}{AlAnBbBdBfBhBjBl}{AlAnBbBdBfBhBjBl}}{{{b{{n{c}}}}e}Cl{A`Ab}Ed}`{{{b{c}}}e{}{}}{{{b{c}}}Ef{}}{c{{Cl{e}}}{}{}}000{{{b{c}}}Eh{}}0{{{b{{A`{}{{Ad{c}}{Af{e}}{Ah{g}}}}}}{b{e}}{b{g}}{b{c}}}{{Aj{{Cl{ff}}}}}{AlAnB`BbBdBfBhBjBl{C`{{b{Bn}}}}{Cb{Bn}}}{AlAnBbBdBfBhBjBl}{AlAnBbBdBfBhBjBl}};;`````{{{b{c}}d}f{}}00{{{b{c}}}{{b{h}}}{}}00{{{b{jc}}}{{b{jh}}}{}}00{g{{Cl{fEj}}}ElEn{{Fd{}{{F`{{b{{Fb{ce}}}}}}}}Ff}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{jc}}}{{b{je}}}{}{}}00{{{b{{Fb{ce}}}}}{{Cl{fEj}}}ElEn}{{{b{{Fh{ceg}}}}}{{Fh{ceg}}}{ElAl}AlAl}{{{b{{Fj{ce}}}}}{{Fj{ce}}}ElEn}{{{b{{Fb{ce}}}}}{{Fb{ce}}}ElEn}{{{b{c}}{b{je}}}f{}{}}00{{{b{j{Fh{ceg}}}}i}{{Aj{k}}}ElEn{}{{Ch{{Cf{Cd}}}}}{}}{{{b{{Fh{ceg}}}}i}{{Aj{{Fl{km}}}}}ElEn{}{{Ch{{Cf{Cd}}}}}{}{}}{Cj{{b{c}}}{}}00{Cj{{b{jc}}}{}}00{c{{Cl{{Fj{eg}}}}}CnElEn}{c{{Cl{{Fb{eg}}}}}CnElEn}{{cFnG`}{{Cl{{Fb{eg}}Ej}}}GbElEn}{{{b{j{Fh{ceg}}}}i}{{Aj{{n{{Fh{ceg}}}}}}}ElEn{}{{Ch{{Cf{Cd}}}}}}{{{b{{Fh{ceg}}}}i{b{k}}}{{Aj{{n{{Fh{ceg}}}}}}}ElEn{}{{Ch{{Cf{Cd}}}}}{}}{Cjf}00{{{b{{Fh{ceg}}}}{b{{Fh{ceg}}}}}D`{ElBf}BfBf}{{{b{{Fj{ce}}}}{b{{Fj{ce}}}}}D`ElEn}{{{b{{Fb{ce}}}}{b{{Fb{ce}}}}}D`ElEn}{{{b{c}}{b{e}}}D`{}{}}00000000{{{b{{Fh{ceg}}}}{b{jDb}}}Dd{ElAn}AnAn}{{{b{{Fj{ce}}}}{b{jDb}}}DdElEn}{{{b{{Fb{ce}}}}{b{jDb}}}DdElEn}{cc{}}00{{{b{c}}}Dh{}}00{{{b{{Fj{ce}}}}{b{jg}}}fElEnDj}{{{b{{Fb{ce}}}}{b{jg}}}fElEnDj}{{}Cj}00{ce{}{}}00{{{Dl{c}}}{{Dl{h}}}{}}00{{{Dn{c}}}{{Dn{h}}}{}}00{{{E`{c}}}{{E`{h}}}{}}00{{{b{c}}{b{e}}}{{Aj{f}}}{}{}}{{{b{jGd}}{b{{Cf{Gf}}}}}{{Aj{Eb}}}}{{{b{j{Gh{ce}}}}{b{{Cf{Gf}}}}}{{Aj{Eb}}}El{}}{{DhDhc}{{Aj{{Gh{eg}}}}}GjEl{}}{{DhDhc}{{Aj{{Fh{egf}}}}}GjEl{}}{{{b{{Fh{ceg}}}}i{Gl{Cj}}}{{Aj{Gn}}}ElEn{}{{Ch{{Cf{Cd}}}}}}{{{b{{Fh{ceg}}}}i{Gl{Cj}}}{{Aj{H`}}}ElEn{}{{Ch{{Cf{Cd}}}}}}`{{{b{{Fh{ceg}}}}{Hb{{Fh{ceg}}}}{b{Gn}}}{{Aj{{Cl{ff}}}}}ElEn{}}{{{b{{Fh{ceg}}}}{Hb{{Fh{ceg}}}}{b{H`}}}{{Aj{{Cl{ff}}}}}ElEn{}}`{{{b{{Fh{ceg}}}}{b{{Cf{i}}}}{b{k}}}{{Aj{{Eb{Cd}}}}}ElEn{}{}{}}{{{b{{Fj{ce}}}}g}ClElEnEd}{{{b{{Fb{ce}}}}g}ClElEnEd}{{{b{{Fb{ce}}}}gFn}{{Cl{fEj}}}ElEnHd}{{{b{{Fb{ce}}}}Fn}CjElEn}{{{b{c}}}e{}{}}00{c{{Cl{e}}}{}{}}00000{{{b{c}}}Eh{}}00{{{b{{Fh{ceg}}}}{b{i}}{b{k}}{b{m}}}{{Aj{{Cl{ff}}}}}ElEn{}{}{}{}}{ce{}{}}00{{DhDhDhc}{{Aj{{Gh{eg}}}}}GjEl{}}{{DhDhDhc}{{Aj{{Fh{egf}}}}}GjEl{}}``{{{b{c}}d}f{}}0{{{b{c}}}{{b{h}}}{}}0{{{b{jc}}}{{b{jh}}}{}}0{{{b{c}}}{{b{e}}}{}{}}0{{{b{jc}}}{{b{je}}}{}{}}0{{{b{{Gn{c}}}}}{{Gn{c}}}Al}{{{b{{H`{c}}}}}{{H`{c}}}Al}{{{b{c}}{b{je}}}f{}{}}0{Cj{{b{c}}}{}}0{Cj{{b{jc}}}{}}0{c{{Cl{{Gn{e}}}}}Cn{HfHh}}{c{{Cl{{H`{e}}}}}Cn{HfHh}}{Cjf}0{{{b{{Gn{c}}}}{b{{Gn{c}}}}}D`Bf}{{{b{{H`{c}}}}{b{{H`{c}}}}}D`Bf}{{{b{c}}{b{e}}}D`{}{}}00000{{{b{{Gn{c}}}}{b{jDb}}}DdAn}{{{b{{H`{c}}}}{b{jDb}}}DdAn}{cc{}}0{{}Cj}0{ce{}{}}0{{{Dl{c}}}{{Dl{h}}}{}}0{{{Dn{c}}}{{Dn{h}}}{}}0{{{E`{c}}}{{E`{h}}}{}}0{{{b{{Gn{c}}}}e}Cl{HfHh}Ed}{{{b{{H`{c}}}}e}Cl{HfHh}Ed}{{{b{c}}}e{}{}}0{c{{Cl{e}}}{}{}}000{{{b{c}}}Eh{}}088`{{{b{c}}d}f{}}{{{b{c}}}{{b{h}}}{}}{{{b{jc}}}{{b{jh}}}{}}{e{{Cl{fEj}}}El{{Fd{}{{F`{{b{{Hj{c}}}}}}}}Ff}}{{{b{c}}}{{b{e}}}{}{}}{{{b{jc}}}{{b{je}}}{}{}}{{{b{{Hj{c}}}}}{{Cl{fEj}}}El}{{{b{{Hj{c}}}}}{{Hj{c}}}{ElAl}}{{{b{c}}{b{je}}}f{}{}}{Cj{{b{c}}}{}}{Cj{{b{jc}}}{}}{c{{Cl{{Hj{e}}}}}CnEl}{{cFnG`}{{Cl{{Hj{e}}Ej}}}GbEl}{Cjf}{{{b{{Hj{c}}}}{b{{Hj{c}}}}}D`{ElBf}}{{{b{c}}{b{e}}}D`{}{}}00{{{b{{Hj{c}}}}{b{jDb}}}Dd{ElAn}}{cc{}}{{{b{{Hj{c}}}}{b{je}}}fElDj}{{}Cj}{ce{}{}}{{{Dl{c}}}{{Dl{h}}}{}}{{{Dn{c}}}{{Dn{h}}}{}}{{{E`{c}}}{{E`{h}}}{}}{{{b{{Hj{c}}}}e}ClElEd}{{{b{{Hj{c}}}}eFn}{{Cl{fEj}}}ElHd}{{{b{{Hj{c}}}}Fn}CjEl}{{{b{c}}}e{}{}}{c{{Cl{e}}}{}{}}0{{{b{c}}}Eh{}}9``{{{b{c}}d}f{}}{{{b{c}}}{{b{h}}}{}}{{{b{jc}}}{{b{jh}}}{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{jc}}}{{b{je}}}{}{}}{{{b{{Hb{c}}}}}{{Hb{c}}}A`}{{{b{c}}{b{je}}}f{}{}}``{Cj{{b{c}}}{}}{Cj{{b{jc}}}{}}{Cjf}{cc{}}{{}Cj}{ce{}{}}{{{Dl{c}}}{{Dl{h}}}{}}{{{Dn{c}}}{{Dn{h}}}{}}{{{E`{c}}}{{E`{h}}}{}}{{{b{Hl}}c{Gl{Cj}}}{{Aj{e}}}{{Ch{{Cf{Cd}}}}}{AlAnBdBfBjBb}}`{{{b{Hl}}{Hb{Hl}}{b{c}}}{{Aj{{Cl{ff}}}}}{AlAnBdBfBjBb}}`{{{b{c}}}e{}{}}{c{{Cl{e}}}{}{}}0{{{b{c}}}Eh{}}8``{{{b{{I`{}{{Hn{c}}}}}}e}{{Aj{{Fl{gc}}}}}{AlAnBdBfBhBlBjBb}{{Ch{{Cf{Cd}}}}}{}}{{{b{{I`{}{{Hn{c}}}}}}e{b{c}}}{{Aj{{n{{I`{}{{Hn{c}}}}}}}}}{AlAnBdBfBhBlBjBb}{{Ch{{Cf{Cd}}}}}}","D":"Hn","p":[[1,"reference"],[5,"Private",317],[1,"unit"],[10,"Any",318],[0,"mut"],[10,"Error",319],[5,"VidDisperse",0],[10,"VidScheme",0],[10,"Sized",320],[17,"Commit"],[17,"Share"],[17,"Common"],[8,"VidResult",0],[10,"Clone",321],[10,"Debug",322],[10,"Display",322],[10,"DeserializeOwned",323],[10,"Eq",324],[10,"PartialEq",324],[10,"Hash",325],[10,"Serialize",326],[10,"Sync",320],[5,"TaggedBase64",327],[10,"TryFrom",328],[10,"Into",328],[1,"u8"],[1,"slice"],[10,"AsRef",328],[1,"usize"],[6,"Result",329],[10,"Deserializer",323],[1,"bool"],[5,"Formatter",322],[8,"Result",322],[6,"VidError",0],[1,"u32"],[10,"Hasher",325],[5,"Box",330],[5,"Arc",331],[5,"Rc",332],[5,"Vec",333],[10,"Serializer",326],[5,"String",334],[5,"TypeId",318],[6,"SerializationError",335],[10,"Pairing",336],[10,"HasherDigest",337],[17,"Item"],[5,"Common",75],[10,"Iterator",338],[10,"Send",320],[5,"AdvzInternal",75],[5,"Share",75],[1,"tuple"],[6,"Compress",339],[6,"Validate",339],[10,"Read",340],[10,"MaybeGPU",75],[5,"DensePolynomial",341],[8,"Advz",75],[10,"Borrow",342],[5,"Range",343],[5,"SmallRangeProof",191],[5,"LargeRangeProof",191],[5,"Statement",284],[10,"Write",340],[10,"CanonicalSerialize",339],[10,"CanonicalDeserialize",339],[5,"PrecomputeData",249],[10,"PayloadProver",284],[17,"PrecomputeData"],[10,"Precomputable",313]],"r":[],"b":[[40,"impl-Display-for-VidError"],[41,"impl-Debug-for-VidError"],[162,"impl-PayloadProver%3CSmallRangeProof%3C%3CUnivariateKzgPCS%3CE%3E+as+PolynomialCommitmentScheme%3E::Proof%3E%3E-for-AdvzInternal%3CE,+H,+T%3E"],[163,"impl-PayloadProver%3CLargeRangeProof%3C%3CUnivariateKzgPCS%3CE%3E+as+PolynomialCommitmentScheme%3E::Evaluation%3E%3E-for-AdvzInternal%3CE,+H,+T%3E"],[165,"impl-PayloadProver%3CSmallRangeProof%3C%3CUnivariateKzgPCS%3CE%3E+as+PolynomialCommitmentScheme%3E::Proof%3E%3E-for-AdvzInternal%3CE,+H,+T%3E"],[166,"impl-PayloadProver%3CLargeRangeProof%3C%3CUnivariateKzgPCS%3CE%3E+as+PolynomialCommitmentScheme%3E::Evaluation%3E%3E-for-AdvzInternal%3CE,+H,+T%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPYAGwAMAAAADgAKABwABAAiAAgAMAACADUABQA/AAAAQQAHAEoAAQBRADUAigAHAJUACQCgAAAAowABAKYAAQCpABQAwgAfAOQAAQDoABEA+wASAA8BAQASAQoAHwEGACgBAgAsAQAALgECADUBBAA="}],\
["jf_vrf",{"t":"RRRRRRRKCNMMMMMGFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Error","Input","Output","Proof","PublicKey","PublicParameter","SecretKey","Vrf","blsvrf","evaluate","key_gen","param_gen","proof_to_hash","prove","verify","BLSVRFCipherSuite","BLSVRFError","BLSVRFScheme","VRF_BLS_12_381_SHA256","VRF_BLS_12_381_SHA512","as_error_source","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","key_gen","new","param_gen","proof_to_hash","prove","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify","vzip","vzip","vzip"],"q":[[0,"jf_vrf"],[15,"jf_vrf::blsvrf"],[67,"core::result"],[68,"core::fmt"],[69,"core::clone"],[70,"core::marker"],[71,"serde::de"],[72,"serde::ser"],[73,"core::cmp"],[74,"zeroize"],[75,"core::error"],[76,"rand_core"],[77,"core::option"],[78,"alloc::string"],[79,"core::any"]],"i":[9,9,9,9,9,9,9,0,0,9,9,9,9,9,9,0,0,0,29,29,32,33,29,32,33,29,32,33,29,32,33,29,32,33,29,32,29,32,32,33,29,32,33,29,32,33,29,32,33,33,33,33,33,32,33,29,32,33,29,32,33,29,32,33,33,29,32],"f":"`````````{{{Ad{b{Ab{}{{d{c}}{f{e}}{h{g}}{j{i}}{l{k}}{n{m}}{A`{o}}}}}}{Ad{c}}{Ad{g}}{Ad{k}}{Ad{bAa}}}{{Af{mo}}}{}{AhAjAlAnB`BbBdBf}{AhAjAlAnBhB`BbBdBf}{AhAjAlAnB`BbBdBf}{AhAjAlAnB`BbBdBf}{AhAjAlAnB`BbBdBf}Bj{BlBn}}{{{Ad{{Ab{}{{d{c}}{f{e}}{h{g}}{j{i}}{l{k}}{n{m}}{A`{o}}}}}}{Ad{c}}{Ad{bAa}}}{{Af{{C`{ge}}o}}}{}{AhAjAlAnB`BbBdBf}{AhAjAlAnBhB`BbBdBf}{AhAjAlAnB`BbBdBf}{AhAjAlAnB`BbBdBf}{AhAjAlAnB`BbBdBf}Bj{BlBn}}{{{Ad{{Ab{}{{d{c}}{f{e}}{h{g}}{j{i}}{l{k}}{n{m}}{A`{o}}}}}}{Cb{{Ad{bAa}}}}}{{Af{co}}}{}{AhAjAlAnB`BbBdBf}{AhAjAlAnBhB`BbBdBf}{AhAjAlAnB`BbBdBf}{AhAjAlAnB`BbBdBf}{AhAjAlAnB`BbBdBf}Bj{BlBn}}{{{Ad{b{Ab{}{{d{c}}{f{e}}{h{g}}{j{i}}{l{k}}{n{m}}{A`{o}}}}}}{Ad{c}}{Ad{i}}}{{Af{mo}}}{}{AhAjAlAnB`BbBdBf}{AhAjAlAnBhB`BbBdBf}{AhAjAlAnB`BbBdBf}{AhAjAlAnB`BbBdBf}{AhAjAlAnB`BbBdBf}Bj}{{{Ad{{Ab{}{{d{c}}{f{e}}{h{g}}{j{i}}{l{k}}{n{m}}{A`{o}}}}}}{Ad{c}}{Ad{g}}{Ad{k}}{Ad{bAa}}}{{Af{io}}}{}{AhAjAlAnB`BbBdBf}{AhAjAlAnBhB`BbBdBf}{AhAjAlAnB`BbBdBf}{AhAjAlAnB`BbBdBf}{AhAjAlAnB`BbBdBf}Bj{BlBn}}{{{Ad{b{Ab{}{{d{c}}{f{e}}{h{g}}{j{i}}{l{k}}{n{m}}{A`{o}}}}}}{Ad{c}}{Ad{i}}{Ad{e}}{Ad{k}}}{{Af{{C`{Cd{Cb{m}}}}o}}}{}{AhAjAlAnB`BbBdBf}{AhAjAlAnBhB`BbBdBf}{AhAjAlAnB`BbBdBf}{AhAjAlAnB`BbBdBf}{AhAjAlAnB`BbBdBf}Bj}`````{{{Ad{c}}}{{Ad{Bj}}}{}}{{{Ad{c}}}{{Ad{e}}}{}{}}00{{{Ad{bc}}}{{Ad{be}}}{}{}}00{Cf{{Ad{c}}}{}}00{Cf{{Ad{bc}}}{}}00{CfCh}00{{{Ad{Cj}}{Ad{bCl}}}Cn}{{{Ad{D`}}{Ad{bCl}}}Cn}0{cc{}}00{{}Cf}00{ce{}{}}00{{{Ad{Db}}{Ad{c}}{Ad{be}}}{{Af{{C`{gi}}D`}}}{}{BlBn}{}{}}{CjDb}{{{Ad{Db}}{Cb{{Ad{bc}}}}}{{Af{eD`}}}{BlBn}{}}{{{Ad{bDb}}{Ad{c}}{Ad{e}}}{{Af{gD`}}}{}{}{}}{{{Ad{Db}}{Ad{c}}{Ad{e}}{Ad{g}}{Ad{bi}}}{{Af{kD`}}}{}{}{}{BlBn}{}}{{{Ad{c}}}Dd{}}{c{{Af{e}}}{}{}}00000{{{Ad{c}}}Df{}}00{{{Ad{bDb}}{Ad{c}}{Ad{e}}{Ad{g}}{Ad{i}}}{{Af{{C`{Cd{Cb{k}}}}D`}}}{}{}{}{}{}}999","D":"Db","p":[[0,"mut"],[17,"PublicParameter"],[17,"PublicKey"],[17,"SecretKey"],[17,"Proof"],[17,"Input"],[17,"Output"],[17,"Error"],[10,"Vrf",0],[1,"reference"],[6,"Result",67],[10,"Debug",68],[10,"Clone",69],[10,"Send",70],[10,"Sync",70],[10,"Deserialize",71],[10,"Serialize",72],[10,"PartialEq",73],[10,"Eq",73],[10,"Zeroize",74],[10,"Error",75],[10,"CryptoRng",76],[10,"RngCore",76],[1,"tuple"],[6,"Option",77],[1,"bool"],[1,"usize"],[1,"unit"],[6,"BLSVRFCipherSuite",15],[5,"Formatter",68],[8,"Result",68],[5,"BLSVRFError",15],[5,"BLSVRFScheme",15],[5,"String",78],[5,"TypeId",79]],"r":[],"b":[[37,"impl-Display-for-BLSVRFError"],[38,"impl-Debug-for-BLSVRFError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACIABAAVABIAKwACADYACQBBAAIA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
