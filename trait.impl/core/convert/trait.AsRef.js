(function() {var implementors = {
"jf_merkle_tree":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"jf_merkle_tree/prelude/struct.Sha3Node.html\" title=\"struct jf_merkle_tree::prelude::Sha3Node\">Sha3Node</a>"],["impl&lt;H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;GenericArray&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>, &lt;H as OutputSizeUser&gt;::OutputSize&gt;&gt; for <a class=\"struct\" href=\"jf_merkle_tree/hasher/struct.HasherNode.html\" title=\"struct jf_merkle_tree::hasher::HasherNode\">HasherNode</a>&lt;H&gt;<div class=\"where\">where\n    H: Digest,</div>"]],
"jf_pcs":[["impl&lt;T, E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"jf_pcs/prelude/struct.Commitment.html\" title=\"struct jf_pcs::prelude::Commitment\">Commitment</a>&lt;E&gt;<div class=\"where\">where\n    T: AffineRepr,\n    E: Pairing&lt;G1Affine = T&gt;,</div>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()